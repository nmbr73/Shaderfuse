{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shaderfuse","text":"<p>Does not work with the free versions of BMD's software anymore!</p> <p>Unfortunately, with version 19.1 of DaVinci Resolve, BMD has decided to disable the so-called 'UI Manager' for the free version; from now on, it can only be used through extensions in the paid Studio version. However, essential parts of Shaderfuses (and many other great free tools out there) are based on exactly this component. So unless you have the paid version, the Shaderfuses cannot be installed properly from this version onwards - neither via the Reactor nor our installer scripts.</p> <p>See for example:</p> <ul> <li>19.1 - Broken Scripts Megathread on Reddit</li> <li>UIManager has been disabled in Resolve Free in v19.1 on the Blackmagic Forum</li> <li>Blackmagic Design has released Resolve Studio v19.1 post on LinkedIn</li> </ul> <p>DCTL shader fuses for use within Fusion and/or DaVinci Resolve's Fusion page (aka \"DaFusion\").</p> <p>See the videos to get an idea of what this does look like; let yourself be convinced by the charm of the legendary Lazy Artist, who advertises it as an \"Actually MIND BLOWING Free Tool\"; or watch Sonny Helzer's full Reactor \"ShaderToys\" nodes and a project in fusion tutorial.</p> <p>The Fuses are based on WebGL shaders released on Shadertoy.com with a license that allows for porting (see each Fuse's source code and/or info pane for the respective license information); please note that neither we are related to Shadertoy.com, nor is this an official Shadertoy.com repository; but we are obviously and definitely huge fans of this amazing website!</p> <p>Watch out for each shader's license information!</p> <p>Most (but not all) shaders contained here are CC BY-NC-SA as on Shadertoy they default to this license if not stated otherwise. Please give proper attribution to the fragment shader's author when using one of the in your work plus you must not use them in any commercial context.</p> <p>Furthermore must be mentioned that this repository is only an incubator to develop such fuses and to exchange on experiences, approaches and solutions. If you are searching for production ready extensions to really use for your day to day work, then the Reactor is the right and de facto go to place for you. As soon as an implementation in this repository achieves an appropriate maturity we will suggest it for inclusion into the Reactor - thereby Reactor is the one and only source for the outcomes and stable versions of our experiments. You should find the stable Fuses in Reactor under the same name but without any of the annoying '<code>_DEV</code>', '<code>_BETA</code>', or whatsoever suffixes.</p>"},{"location":"#fuses","title":"Fuses","text":"<p>See Shaders for a list of all shaders implemented so far - resp. the Overview to have with thumbnails a more 'visual experience'. Find what's new with the latest conversions, or have a look at the Shader of the Week list.</p>"},{"location":"#current-shader-of-the-week-24th-of-october-2025","title":"Current Shader of the Week (24<sup>th</sup> of October 2025):","text":"<p> Hexagon X5 by byt3_m3chanic</p>"},{"location":"#a-brandnew-category-skulls","title":"A brandnew Category: Skulls","text":"<p> skully by monsterkodi</p> <p> The_Dark_Mark_[HP] by Yusef28</p> <p> Alas,poorYorick! by schau</p> <p> Dull Skull-Brained by Kris_Katur</p> <p> Dull Skull-Bumped by Kris_Katur</p> <p> Dull Skull-Prologue by Kris_Katur</p> <p> Dull Skull-Reflected by Kris_Katur</p> <p> Lost_Astronaut by duvengar</p> <p> DULL Speed SKULL by Spectraledge</p> <p> Fork DULL SKULL frostbyte_ 591 by Frostbyte_</p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#reactor","title":"Reactor","text":"<p>Best way to install the Fuses is to just use Reactor. Find the 'Shadertoys' package in the - guess what - 'Shaders' category. This is the most convenient and recommended way to if you just what to use them or have a quick look if they might be useful for you.</p> <p></p> <p>Only thing to take into account is that this way you don't get the latest development versions. Stable toys are bundled from time to time and integrated in Reactor when reviewed. You will find the Shaderfuses installed this way in Effects under 'Shaderfuse'.</p>"},{"location":"#installer","title":"Installer","text":"<p>Alternately to the Reactor package install, you can download a Fuse's '<code>*-Installer.lua</code>' installation script in case you want to quickly try out the latest version of a single Fuse. Drag and drop that script onto your Fusion workspace and follow installer's instructions. You will find Fuses installed this way in Effects under 'Shaderfuse (beta)' and node instances of such Fuses will have a '_BETA' suffix in your composition.</p> <p>If you want to try out multiple Shaderfuses this way, you can download all the latest installers as Shaderfuse-Installers.zip. Unpack the that archive and then drag and drop the installers of your choice onto Fusion.</p>"},{"location":"#usage","title":"Usage","text":"<p>In the Fusion page of DaVinci Resolve right click into the working area. In the context menu under 'Add tool' you'll find a 'Shaderfuse' submenu (resp. 'Shaderfuse (beta)' for their variants installed using an installer). That submenu corresponds to the Fuse categories you see on this page and provides access to all fuses installed.</p> <p>Alternatively you can open the 'Select Tool' dialog (Shift+Space Bar) and start typing \"<code>sf.</code>\" to filter for the shadertoy fuses (or use \"sf-b.\" for the beta versions installed via an installer script).</p> <p>And last but not least in 'Effects' (Fusion) resp. the 'Effects Library' (DaVinci Resolve) pane under 'Tools' you should now find an entry 'Shaderfuse' (resp. 'Shaderfuse (beta)') that lists all the categories and the different fuses.</p> <p>Please note, that there a some specific shaders that might need additional Fuses at their input to be used. These are in particular all the Cubemap and Audio shaders.</p>"},{"location":"Latest%20Conversions/","title":"Latest Conversions","text":""},{"location":"Latest%20Conversions/#latest-conversions","title":"Latest Conversions","text":""},{"location":"Overview/","title":"Thumbs","text":""},{"location":"Overview/#shaders","title":"Shaders","text":""},{"location":"Overview/#abstract-shaders","title":"Abstract Shaders","text":"<p>BumpyReflectingBalls \ud83c\udf40\u00a9 metabog (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: BumpyReflectingBallsAuthor: metabogPorted by: JiPi </p> <p>Dynamism \ud83c\udf40\u00a9 nimitz (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: DynamismAuthor: nimitzPorted by: JiPi </p> <p>Favela \ud83c\udf40Favela by Julien Vergnaud @duvengar-2018 (CC BY-NC-SA 3.0 unported)Category: Abstract ShaderShadertoy: FavelaAuthor: duvengarPorted by: nmbr73 </p> <p>FlightThroughANebula \ud83c\udf40\u00a9 morgan3d (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: Flight Through A Nebula V3Author: morgan3dPorted by: JiPi </p> <p>Mosaic \ud83c\udf40\u00a9 Darksecond (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: voronoi solid with bordersAuthor: DarksecondPorted by: JiPi </p> <p>Noisecube \ud83c\udf40\u00a9 flimshaw (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: NoisecubeAuthor: flimshawPorted by: JiPi </p> <p>OtherWorlds \ud83c\udf40\u00a9 byt3_m3chanic (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: Shader 012 4.29.21Author: byt3_m3chanicPorted by: JiPi </p> <p>OverstimulatedNeurons \ud83c\udf40\u00a9 Chaotnix (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: Overstimulated NeuronsAuthor: ChaotnixPorted by: JiPi </p> <p>RainbowSlices \ud83c\udf40\u00a9 fizzer (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: Rainbow SlicesAuthor: fizzerPorted by: nmbr73 </p> <p>RainbowSpaghetti \ud83c\udf40\u00a9 mattz (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: rainbow spaghettiAuthor: mattzPorted by: nmbr73 </p> <p>Raysemigarbage \ud83c\udf40\u00a9 supastav (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: raysemigarbage#3 but hillyAuthor: supastavPorted by: JiPi </p> <p>VirusAttack \ud83d\udca5\u00a9 pb (CC BY-NC-SA 3.0)Category: Abstract ShaderShadertoy: virus attackAuthor: pbPorted by: JiPi </p>"},{"location":"Overview/#audio-shaders","title":"Audio Shaders","text":"<p>AudioHeightfield1 \ud83d\udca5\u00a9 huttarl (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy: Audio heightfield 1Author: huttarlPorted by: JiPi </p> <p>AudioWaveformVisualizer \ud83d\udca5\u00a9 oneshade (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy: Audio Waveform Visualizer v3Author: oneshadePorted by: JiPi </p> <p>InerciaIntended \ud83d\udca5\u00a9 0b5vr (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy:  20221105_inercia intended oneAuthor: 0b5vrPorted by: JiPi </p> <p>JamSession \ud83d\udca5\u00a9 Passion (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy: Jam SessionAuthor: PassionPorted by: JiPi </p> <p>ReactiveVoronoi \ud83d\udca5\u00a9 glk7 (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy: Reactive VoronoiAuthor: glk7Ported by: JiPi </p> <p>Rlstyle \ud83d\udca5\u00a9 clintolibre (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy: RLStyle VisualizerAuthor: clintolibrePorted by: JiPi </p> <p>ShadertoyAudioDisplay \ud83d\udca5\u00a9 saidwho12 (CC BY-NC-SA 3.0)Category: Audio ShaderShadertoy: Shadertoy audio displayAuthor: saidwho12Ported by: JiPi </p>"},{"location":"Overview/#blob-shaders","title":"Blob Shaders","text":"<p>FunWithMetaballs \ud83c\udf40\u00a9 fwilliams (CC BY-NC-SA 3.0)Category: Blob ShaderShadertoy: FunWithMetaballsAuthor: fwilliamsPorted by: JiPi </p> <p>ParticleLifeWithRaymarching \ud83d\udca5\u00a9 astrolorant (CC BY-NC-SA 3.0)Category: Blob ShaderShadertoy: Particle life with raymarchingAuthor: astrolorantPorted by: JiPi </p> <p>TorturedBlob \ud83c\udf40\u00a9 roywig (CC BY-NC-SA 3.0)Category: Blob ShaderShadertoy: TorturedBlobAuthor: roywigPorted by: JiPi </p> <p>XRaymarching \ud83c\udf40\u00a9 Aeless (CC BY-NC-SA 3.0)Category: Blob ShaderShadertoy: XRaymarchingAuthor: AelessPorted by: JiPi </p>"},{"location":"Overview/#christmas-shaders","title":"Christmas Shaders","text":"<p>ChristmasTreeStar \ud83d\udca5\u00a9  TekF (CC BY-NC-SA 3.0)Category: Christmas ShaderShadertoy: Christmas Tree StarAuthor:  TekFPorted by: JiPi </p>"},{"location":"Overview/#cubemap-shaders","title":"Cubemap Shaders","text":"<p>BallsAreTouching \ud83c\udf40\u00a9 w23 (CC BY-NC-SA 3.0)Category: Cubemap ShaderShadertoy: balls are touchingAuthor: w23Ported by: JiPi </p> <p>GlassAndBubble \ud83c\udf40\u00a9 TambakoJaguar (CC BY-NC-SA 3.0)Category: Cubemap ShaderShadertoy: Glass and BubbleAuthor: TambakoJaguarPorted by: JiPi </p> <p>KissTracing \ud83d\udca5\u00a9 tsaari42 (CC BY-NC-SA 3.0)Category: Cubemap ShaderShadertoy: KISS Tracing 001: Spheres&amp;PlaneAuthor: tsaari42Ported by: JiPi </p> <p>NewtonPendulum \ud83c\udf40\u00a9 leesten (CC BY-NC-SA 3.0)Category: Cubemap ShaderShadertoy: Newton PendulumAuthor: leestenPorted by: JiPi </p> <p>OceanElemental \ud83d\udca5\u00a9 alro (CC BY-NC-SA 3.0)Category: Cubemap ShaderShadertoy: OCEAN ELEMENTALAuthor: alroPorted by: JiPi </p>"},{"location":"Overview/#displays-shaders","title":"Displays Shaders","text":"<p>Cellphone \ud83d\udca5\u00a9 EvilRyu (CC BY-NC-SA 3.0)Category: Displays ShaderShadertoy: CellphoneAuthor: EvilRyuPorted by: JiPi </p> <p>CoffeeAndTablet \ud83d\udca5\u00a9 P_Malin (CC BY-NC-SA 3.0)Category: Displays ShaderShadertoy: Coffee and TabletAuthor: P_MalinPorted by: JiPi </p> <p>Telephone \ud83d\udca5\u00a9 jvb (CC BY-NC-SA 3.0)Category: Displays ShaderShadertoy: TelephoneAuthor: jvbPorted by: JiPi </p> <p>Vt220Codingatnight \ud83d\udca5\u00a9 sprash (CC BY-NC-SA 3.0)Category: Displays ShaderShadertoy: vt220CodingAtNightAuthor: sprashPorted by: JiPi </p>"},{"location":"Overview/#distortion-shaders","title":"Distortion Shaders","text":"<p>DisplacementShader \ud83c\udf40CC BY-NC-SA 3.0Category: Distortion ShaderShadertoy: DisplacementShaderAuthor: CoolokPorted by: JiPi </p> <p>FbmWarp \ud83c\udf40\u00a9 hanker (CC BY-NC-SA 3.0)Category: Distortion ShaderShadertoy: Fbm WarpAuthor: hankerPorted by: JiPi </p> <p>WovenElasticSimulation \ud83d\udca5\u00a9 wyatt (CC BY-NC-SA 3.0)Category: Distortion ShaderShadertoy: Woven Elastic SimulationAuthor: wyattPorted by: JiPi </p>"},{"location":"Overview/#fractals-shaders","title":"Fractals Shaders","text":"<p>ApollianWithATwist \ud83c\udf40License CC0Category: Fractals ShaderShadertoy: Apollian with a twistAuthor: mrangePorted by: nmbr73 </p> <p>EnergyPlant \ud83c\udf40CC BY-NC-SA 3.0Category: Fractals ShaderShadertoy: EnergyPlantAuthor: gazPorted by: JiPi </p> <p>Fractal03 \ud83c\udf40\u00a9 gaz (CC BY-NC-SA 3.0)Category: Fractals ShaderShadertoy: Fractal03Author: gazPorted by: JiPi </p> <p>FractalEngine \ud83c\udf40CC BY-NC-SA 3.0Category: Fractals ShaderShadertoy: FractalEngineAuthor: gazPorted by: JiPi </p> <p>FractalGutter \ud83c\udf40CC BY-NC-SA 3.0Category: Fractals ShaderShadertoy: FractalGutterAuthor: gazPorted by: JiPi </p> <p>FractalRadioBase \ud83c\udf40\u00a9 gaz (CC BY-NC-SA 3.0)Category: Fractals ShaderShadertoy: FractalRadioBaseAuthor: gazPorted by: JiPi </p> <p>Kali3D \ud83c\udf40\u00a9 guil (CC BY-NC-SA 3.0)Category: Fractals ShaderShadertoy: Kali3DAuthor: guilPorted by: JiPi </p> <p>Rendezvous \ud83c\udf40\u00a9 Dave_Hoskins (CC BY-NC-SA 3.0)Category: Fractals ShaderShadertoy: RendezvousAuthor: Dave_HoskinsPorted by: JiPi </p>"},{"location":"Overview/#misc-shaders","title":"Misc Shaders","text":"<p>BuoyantBalls \ud83c\udf40\u00a9 2017 dr2 (CC BY-NC-SA 3.0 unported)Category: Misc ShaderShadertoy: BuoyantBallsAuthor: dr2Ported by: JiPi </p> <p>Fire_Water \ud83c\udf40\u00a9 izutionix (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: ComplementaryElementsAuthor: izutionixPorted by: JiPi </p> <p>FractalLand \ud83c\udf40\u00a9 Kali (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: Fractal LandAuthor: KaliPorted by: nmbr73 </p> <p>IHeartFourier \ud83c\udf40CC BY-NC-SA 3.0Category: Misc ShaderShadertoy: IHeartFourierAuthor: harry7557558Ported by: JiPi </p> <p>Legofied \ud83c\udf40\u00a9 Gijs (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: LegofiedAuthor: GijsPorted by: JiPi </p> <p>LittleBoxes \ud83d\udca5\u00a9 wyatt (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: Little BoxesAuthor: wyattPorted by: JiPi </p> <p>MountainsLakes \ud83c\udf40\u00a9 xjorma (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: Mountains &amp; LakesAuthor: xjormaPorted by: JiPi </p> <p>Seascape \ud83c\udf40Alexander Alekseev 2014 (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: SeascapeAuthor: TDMPorted by: nmbr73 </p> <p>TruePinballPhysics \ud83c\udf40\u00a9 archee (CC BY-NC-SA 3.0)Category: Misc ShaderShadertoy: True Pinball PhysicsAuthor: archeePorted by: JiPi </p>"},{"location":"Overview/#object-shaders","title":"Object Shaders","text":"<p>DancyTreeDoodle \ud83c\udf40\u00a9 wyatt (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: DancyTreeDoodleAuthor: wyattPorted by: JiPi </p> <p>DancyTreeDoodle3D \ud83c\udf40\u00a9 wyatt (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: DancyTreeDoodle3DAuthor: wyattPorted by: JiPi </p> <p>EggHunt \ud83c\udf40CC BY-NC-SA 3.0Category: Object ShaderShadertoy: EggHuntAuthor: sylvain69780Ported by: JiPi </p> <p>EndlessScrewScrollGenuary28 \ud83d\udca5\u00a9 flockaroo (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: endless screw scroll genuary28Author: flockarooPorted by: JiPi </p> <p>HW3Swing \ud83c\udf40\u00a9 ChloeSnyder (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: HW3SwingAuthor: ChloeSnyderPorted by: JiPi </p> <p>HappyBouncing \ud83c\udf40\u00a9 leon (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: happy bouncingAuthor: leonPorted by: JiPi </p> <p>HeavenAndHell \ud83c\udf40\u00a9 adurdin (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: HeavenAndHellAuthor: adurdinPorted by: JiPi </p> <p>JugglerRetroBallObjects \ud83d\udca5\u00a9 misol101 (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: Juggler (Retro Ball Objects)Author: misol101Ported by: JiPi </p> <p>LaJi \ud83d\udca5\u00a9 SL0ANE (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: La JiAuthor: SL0ANEPorted by: JiPi </p> <p>Legos \ud83c\udf40\u00a9 morgan3d (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: LegosAuthor: morgan3dPorted by: JiPi </p> <p>LonelyVoxel \ud83c\udf40\u00a9 SudoNhim (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: LonelyVoxelAuthor: SudoNhimPorted by: JiPi </p> <p>Oblivion \ud83c\udf40\u00a9 Dave_Hoskins (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: OblivionAuthor: Dave_HoskinsPorted by: JiPi </p> <p>PolyhedralGears \ud83c\udf40\u00a9 Shane (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: Polyhedral GearsAuthor: ShanePorted by: JiPi </p> <p>ProceduralWalkAnimation \ud83c\udf40\u00a9 TLC123 (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: ProceduralWalkAnimationAuthor: TLC123Ported by: JiPi </p> <p>ShareX \ud83c\udf40\u00a9 fre3k (CC BY-NC-SA 3.0)Category: Object ShaderShadertoy: ShareXAuthor: fre3kPorted by: JiPi </p> <p>WalkingCubes \ud83c\udf40CC BY-NC-SA 4.0Category: Object ShaderShadertoy: WalkingCubesAuthor: xorxorPorted by: JiPi </p>"},{"location":"Overview/#planet-shaders","title":"Planet Shaders","text":"<p>CrackerCars \ud83c\udf40\u00a9 zackpudil (CC BY-NC-SA 3.0)Category: Planet ShaderShadertoy: CrackerCarsAuthor: zackpudilPorted by: JiPi </p> <p>EARF \ud83c\udf40\u00a9 zackpudil (CC BY-NC-SA 3.0)Category: Planet ShaderShadertoy: EARFAuthor: zackpudilPorted by: JiPi </p> <p>Fake3DScene \ud83c\udf40\u00a9 LaBodilsen (CC BY-NC-SA 3.0)Category: Planet ShaderShadertoy: Fake3DSceneAuthor: LaBodilsenPorted by: JiPi </p> <p>MightyMorphingPowerSphere \ud83c\udf40\u00a9 Lallis (CC BY-NC-SA 3.0)Category: Planet ShaderShadertoy: MightyMorphingPowerSphereAuthor: LallisPorted by: JiPi </p> <p>RayCastSphere \ud83c\udf40\u00a9 diroru (CC BY-NC-SA 3.0)Category: Planet ShaderShadertoy: RayCastSphereAuthor: diroruPorted by: JiPi </p> <p>WildKifs4D \ud83c\udf40\u00a9 iapafoto (CC BY-NC-SA 3.0)Category: Planet ShaderShadertoy: WildKifs4DAuthor: iapafotoPorted by: JiPi </p>"},{"location":"Overview/#recursive-shaders","title":"Recursive Shaders","text":"<p>AnisotropicBlurImage \ud83c\udf40\u00a9 cornusammonis (CC BY-NC-SA 3.0)Category: Recursive ShaderShadertoy: Anisotropic Blur Image WarpAuthor: cornusammonisPorted by: JiPi </p> <p>FallingCuteBombs \ud83c\udf40CC BY-NC-SA 3.0Category: Recursive ShaderShadertoy: FallingCuteBombsAuthor: EmilPorted by: JiPi </p> <p>GrowingWeatheringRocks \ud83c\udf40\u00a9 stb (CC BY-NC-SA 3.0)Category: Recursive ShaderShadertoy: GrowingWeatheringRocksAuthor: stbPorted by: JiPi </p> <p>LearningReactionDiffusion \ud83c\udf40\u00a9 TekF (CC BY-NC-SA 3.0)Category: Recursive ShaderShadertoy: LearningReactionDiffusionAuthor: TekFPorted by: JiPi </p> <p>Spilled \ud83c\udf40CC BY-NC-SA 3.0Category: Recursive ShaderShadertoy: spilledAuthor: flockarooPorted by: JiPi </p> <p>TDSOTM_Nebula \ud83c\udf40\u00a9 bytewave (CC BY-NC-SA 3.0)Category: Recursive ShaderShadertoy: The dark side of the moonAuthor: bytewavePorted by: JiPi </p> <p>Vine \ud83c\udf40\u00a9 gaz (CC BY-NC-SA 3.0)Category: Recursive ShaderShadertoy: VineAuthor: gazPorted by: JiPi </p>"},{"location":"Overview/#shaderoftheweek-shaders","title":"ShaderOfTheWeek Shaders","text":"<p>ACircleADay \ud83c\udf40\u00a9 Plento (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: A circle a dayAuthor: PlentoPorted by: JiPi </p> <p>AbstractTruchetInversion \ud83d\udca5\u00a9 byt3_m3chanic (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Abstract Truchet Inversion Author: byt3_m3chanicPorted by: JiPi </p> <p>AbstractWaveThing \ud83d\udca5\u00a9 bad_dreams_ (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Abstract Wave ThingAuthor: bad_dreams_Ported by: JiPi </p> <p>AiNotIncluded \ud83c\udf40\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: AI not includedAuthor: mrangePorted by: JiPi </p> <p>AlexanderHornedSphereZoom \ud83c\udf40\u00a9 tmst (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Alexander horned sphere zoomAuthor: tmstPorted by: JiPi </p> <p>AlienSpaceJockey \ud83d\udca5\u00a9 dean_the_coder (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Alien Space JockeyAuthor: dean_the_coderPorted by: JiPi </p> <p>AlienTunnel \ud83d\udca5\u00a9 lz (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Alien TunnelAuthor: lzPorted by: JiPi </p> <p>AndroidRuntime \ud83d\udca5\u00a9 shau (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Android RuntimeAuthor: shauPorted by: JiPi </p> <p>AudioFlightv2 \ud83d\udca5\u00a9 byt3_m3chanic (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Audio Flight v2 (strobes)Author: byt3_m3chanicPorted by: JiPi </p> <p>Bomlka \ud83d\udca5\u00a9 lamogui (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: bomlkaAuthor: lamoguiPorted by: JiPi </p> <p>ChainSpell \ud83d\udca5\u00a9 leon (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Chain SpellAuthor: leonPorted by: JiPi </p> <p>ClearlyABug \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Clearly a bugAuthor: mrangePorted by: JiPi </p> <p>ClubCave09 \ud83c\udf40\u00a9 0b5vr (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: 20210930_CLUB-CAVE-09Author: 0b5vrPorted by: JiPi </p> <p>CoastalLandscape \ud83c\udf40\u00a9 bitless (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Coastal LandscapeAuthor: bitlessPorted by: JiPi </p> <p>ColorProcessing \ud83c\udf40\u00a9 sinvec (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Color processingAuthor: sinvecPorted by: JiPi </p> <p>ControllableMachinery \ud83c\udf40\u00a9 dr2 (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Controllable MachineryAuthor: dr2Ported by: JiPi </p> <p>CreationBySilexars \ud83d\udca5\u00a9 Danguafer (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Creation by SilexarsAuthor: DanguaferPorted by: JiPi </p> <p>CubeWave3 \ud83d\udca5\u00a9 FabriceNeyret2 (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: cube wave 3Author: FabriceNeyret2Ported by: JiPi </p> <p>CubicDispersal \ud83c\udf40\u00a9 Tater (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Cubic DispersalAuthor: TaterPorted by: JiPi </p> <p>D4DBeats \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: 4D BeatsAuthor: mrangePorted by: JiPi </p> <p>DangerNoodle \ud83c\udf40\u00a9 BigWIngs (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: DangerNoodleAuthor: BigWIngsPorted by: JiPi </p> <p>Day94 \ud83c\udf40\u00a9 jeyko (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Day94Author: jeykoPorted by: JiPi </p> <p>DecoratedChristmasSpiral \ud83d\udca5\u00a9 sylvain69780 (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Decorated Christmas SpiralAuthor: sylvain69780Ported by: JiPi </p> <p>Discoteq2 \ud83d\udca5\u00a9 supah (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Discoteq 2Author: supahPorted by: JiPi </p> <p>DullSkull \ud83d\udca5\u00a9 Kris_Katur (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: DULL SKULLAuthor: Kris_KaturPorted by: JiPi </p> <p>ElectricEelUniverse \ud83c\udf40Various (CC0 + MIT + WTFPL)Category: ShaderOfTheWeek ShaderShadertoy: Electric Eel UniverseAuthor: mrangePorted by: JiPi </p> <p>Energeticflyby \ud83d\udca5\u00a9 Kali (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: [In\u00e9rcia 2022] Energetic FlybyAuthor: KaliPorted by: JiPi </p> <p>ExitTheMatrix \ud83d\udca5\u00a9 Kali (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Exit the MatrixAuthor: KaliPorted by: JiPi </p> <p>ExtrudedBauhausTruchetPattern \ud83d\udca5\u00a9 Shane (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Extruded Bauhaus Truchet PatternAuthor: ShanePorted by: JiPi </p> <p>EyeOfPhi \ud83d\udca5\u00a9 ChunderFPV (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Eye of PhiAuthor: ChunderFPVPorted by: JiPi </p> <p>FidgetCube \ud83d\udca5\u00a9 TheBen27 (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Fidget CubeAuthor: TheBen27Ported by: JiPi </p> <p>FractalFlythrough \ud83c\udf40\u00a9 Shane (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: FractalFlythroughAuthor: ShanePorted by: JiPi </p> <p>FractalGliding \ud83d\udca5\u00a9 AntoineC (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Fractal GlidingAuthor: AntoineCPorted by: JiPi </p> <p>FrozenWasteland \ud83d\udca5\u00a9 Dave_Hoskins (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Frozen wastelandAuthor: Dave_HoskinsPorted by: JiPi </p> <p>FullSpectrumCyber \ud83d\udca5\u00a9 Kali (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Full Spectrum CyberAuthor: KaliPorted by: JiPi </p> <p>FuturisticTunnel \ud83c\udf40\u00a9 julianlumia (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Futuristic TunnelAuthor: julianlumiaPorted by: JiPi </p> <p>GenerativeArtDeco4 \ud83d\udca5\u00a9 morisil (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: generative art deco 4Author: morisilPorted by: JiPi </p> <p>GlassyWithOddRotation \ud83d\udca5\u00a9 etrujillo (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Glassy with odd rotationAuthor: etrujilloPorted by: JiPi </p> <p>GreenFieldDiorama \ud83c\udf40\u00a9 Gallo (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Green Field DioramaAuthor: GalloPorted by: JiPi </p> <p>GroundCameraLightingHelix \ud83d\udca5\u00a9 Yusef28 (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Ground, Camera, Lighting, HelixAuthor: Yusef28Ported by: JiPi </p> <p>HexAtYou \ud83d\udca5\u00a9 pb (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: hex at youAuthor: pbPorted by: JiPi </p> <p>Hexagold2 \ud83d\udca5\u00a9 aiekick (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: HexaGold 2Author: aiekickPorted by: JiPi </p> <p>HexagonX5 \ud83d\udca5\u00a9 byt3_m3chanic (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Hexagon X5Author: byt3_m3chanicPorted by: JiPi </p> <p>HyperDough \ud83c\udf40\u00a9 Tater (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: HyperDoughAuthor: TaterPorted by: JiPi </p> <p>HyperbolicGroupLimitSet \ud83c\udf40\u00a9 neozhaoliang (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Green Field DioramaAuthor: neozhaoliangPorted by: JiPi </p> <p>Infrastructure \ud83d\udca5\u00a9 R3N (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: InfrastructureAuthor: R3NPorted by: JiPi </p> <p>InsideTheMandelbulbIi \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Inside the mandelbulb IIAuthor: mrangePorted by: JiPi </p> <p>InsideTheTorus \ud83d\udca5\u00a9 liamegan (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Inside the torusAuthor: liameganPorted by: JiPi </p> <p>JeweledVortex \ud83d\udca5\u00a9 ChunderFPV (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Jeweled VortexAuthor: ChunderFPVPorted by: JiPi </p> <p>JustAnotherCube \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Just another cubeAuthor: mrangePorted by: JiPi </p> <p>LetSSelfReflect \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Let's self reflectAuthor: mrangePorted by: JiPi </p> <p>Lover \ud83d\udca5\u00a9 wyatt (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: LoverAuthor: wyattPorted by: JiPi </p> <p>MountainbytesPppp4KibWindows \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: MountainBytes: PPPP 4KiB WindowsAuthor: mrangePorted by: JiPi </p> <p>NeonTunne \ud83d\udca5\u00a9 Infames (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Fork Neon Tunne Infames 758Author: InfamesPorted by: JiPi </p> <p>NestedOctahedrons2 \ud83d\udca5\u00a9 pb (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: nested octahedrons 2Author: pbPorted by: JiPi </p> <p>NeuralStanfordBunny5Kb \ud83d\udca5\u00a9 blackle (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Neural Stanford Bunny (5 kb)Author: blacklePorted by: JiPi </p> <p>NightCircuit \ud83d\udca5\u00a9 gaz (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Night circuitAuthor: gazPorted by: JiPi </p> <p>NintendoSwitch \ud83c\udf40\u00a9 jackdavenport (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: NintendoSwitchAuthor: jackdavenportPorted by: JiPi </p> <p>OMZGShaderRoyale \ud83d\udca5\u00a9 NuSan (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: OMZG Shader RoyaleAuthor: NuSanPorted by: JiPi </p> <p>OnTheSal \ud83d\udca5\u00a9 iapafoto (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: On the salt lakeAuthor: iapafotoPorted by: JiPi </p> <p>OrbitalMegastructure \ud83d\udca5\u00a9 otaviogood (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Orbital MegastructureAuthor: otaviogoodPorted by: JiPi </p> <p>PartyConcertVisuals2020 \ud83c\udf40CC0 1.0 UniversalCategory: ShaderOfTheWeek ShaderShadertoy: @Party Concert Visuals 2020Author: blacklePorted by: JiPi </p> <p>PigSquad \ud83d\udca5\u00a9 bpfarrell (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Pig Squad 9 Year AnniversaryAuthor: bpfarrellPorted by: JiPi </p> <p>PlayingAroundShader \ud83d\udca5\u00a9 MinimilisticBits (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Playing around shaderAuthor: MinimilisticBitsPorted by: JiPi </p> <p>RME4Crater \ud83c\udf40\u00a9 patu (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: RME4 - CraterAuthor: patuPorted by: JiPi </p> <p>RecursiveDonut \ud83d\udca5\u00a9 ShnitzelKiller (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Recursive DonutAuthor: ShnitzelKillerPorted by: JiPi </p> <p>RetrovisionRevision2023 \ud83d\udca5\u00a9 dean_the_coder (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: RetroVision (Revision 2023)Author: dean_the_coderPorted by: JiPi </p> <p>RootSanctum \ud83d\udca5\u00a9 diatribes (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Root SanctumAuthor: diatribesPorted by: JiPi </p> <p>RussianRouletteAudioViz \ud83d\udca5\u00a9 orblivius (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Russian Roulette (Audio Viz)Author: orbliviusPorted by: JiPi </p> <p>SaturdayWeirdness \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Saturday weirdnessAuthor: mrangePorted by: JiPi </p> <p>SegmentedSpiralWhirlpool \ud83d\udca5\u00a9 ChunderFPV (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Segmented spiral whirlpoolAuthor: ChunderFPVPorted by: JiPi </p> <p>SimpleRefractionTest \ud83d\udca5\u00a9 drschizzo (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: simple refraction testAuthor: drschizzoPorted by: JiPi </p> <p>SimpleSphereRaymarching \ud83c\udf40\u00a9 drschizzo (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: SimpleSphereRaymarchingAuthor: drschizzoPorted by: JiPi </p> <p>SimplexTruchetTubing \ud83d\udca5\u00a9 Shane (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Simplex Truchet TubingAuthor: ShanePorted by: JiPi </p> <p>Something227 \ud83d\udca5\u00a9 gaz (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Something  227Author: gazPorted by: JiPi </p> <p>SpaceAtHome \ud83d\udca5\u00a9 lz (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Space At HomeAuthor: lzPorted by: JiPi </p> <p>SpaceShip \ud83d\udca5\u00a9 A_Toaster (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Space shipAuthor: A_ToasterPorted by: JiPi </p> <p>SpiraledLayers \ud83c\udf40\u00a9 Tater (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Spiraled LayersAuthor: TaterPorted by: JiPi </p> <p>StarGazingHippo \ud83d\udca5\u00a9 kuvkar (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: StarGazingHippoAuthor: kuvkarPorted by: JiPi </p> <p>Starfield \ud83d\udca5\u00a9 totetmatt (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: \u5927\u9f99\u732b - StarfieldAuthor: totetmattPorted by: JiPi </p> <p>StarryPlanes \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Starry planesAuthor: mrangePorted by: JiPi </p> <p>StarsAndGalaxy \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Stars and galaxyAuthor: mrangePorted by: JiPi </p> <p>StellarClouds \ud83d\udca5\u00a9 alro (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: STELLAR CLOUDSAuthor: alroPorted by: JiPi </p> <p>StraightFlagstoneTiles \ud83d\udca5\u00a9 gelami (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Straight Flagstone TilesAuthor: gelamiPorted by: JiPi </p> <p>TasteOfNoise7 \ud83c\udf40\u00a9 leon (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Taste Of Noise 7Author: leonPorted by: JiPi </p> <p>Terraform \ud83d\udca5\u00a9 Xor (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: TerraformAuthor: XorPorted by: JiPi </p> <p>TiledGildedRainbowTunnel \ud83d\udca5\u00a9 OldEclipse (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Tiled Gilded Rainbow TunnelAuthor: OldEclipsePorted by: JiPi </p> <p>TorusHive \ud83d\udca5\u00a9 Flopine (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Torus HiveAuthor: FlopinePorted by: JiPi </p> <p>TrailingTheTwinklingTunnel \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Trailing the Twinkling Tunnel ..Author: mrangePorted by: JiPi </p> <p>TrippyTriangle \ud83d\udca5\u00a9 Tater (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Trippy TriangleAuthor: TaterPorted by: JiPi </p> <p>TruchetKaleidoscopeFTW \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Truchet + Kaleidoscope FTWAuthor: mrangePorted by: JiPi </p> <p>TunnelCable \ud83d\udca5\u00a9 totetmatt (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: \u5927\u9f99\u732b - Tunnel CableAuthor: totetmattPorted by: JiPi </p> <p>TunnelOfLights \ud83d\udca5\u00a9 nocrex (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Tunnel of LightsAuthor: nocrexPorted by: JiPi </p> <p>TwizzlyCircleMess \ud83d\udca5\u00a9 SnoopethDuckDuck (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Twizzly Circle MessAuthor: SnoopethDuckDuckPorted by: JiPi </p> <p>UndulatingColumns \ud83d\udca5\u00a9 fizzer (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Undulating ColumnsAuthor: fizzerPorted by: JiPi </p> <p>UndulatingUrchin \ud83d\udca5\u00a9 ChunderFPV (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Undulating UrchinAuthor: ChunderFPVPorted by: JiPi </p> <p>UnstableUniverse \ud83d\udca5\u00a9 julianlumia (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Unstable UniverseAuthor: julianlumiaPorted by: JiPi </p> <p>WednesdayMessingAround \ud83d\udca5\u00a9 mrange (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Wednesday messing aroundAuthor: mrangePorted by: JiPi </p> <p>WeirdTruchetNewKeyboard \ud83d\udca5\u00a9 byt3_m3chanic (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Weird Truchet | New KeyboardAuthor: byt3_m3chanicPorted by: JiPi </p> <p>WhackAMolePistons \ud83d\udca5\u00a9 blackle (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Whack-A-Mole PistonsAuthor: blacklePorted by: JiPi </p> <p>YearOfTruchets022 \ud83d\udca5\u00a9 byt3_m3chanic (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Year of Truchets #022Author: byt3_m3chanicPorted by: JiPi </p> <p>Yee1212 \ud83d\udca5\u00a9 dspindler (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: yee1212Author: dspindlerPorted by: JiPi </p> <p>ZippyZaps \ud83d\udca5\u00a9 SnoopethDuckDuck (CC BY-NC-SA 3.0)Category: ShaderOfTheWeek ShaderShadertoy: Zippy ZapsAuthor: SnoopethDuckDuckPorted by: JiPi </p>"},{"location":"Overview/#simple-shaders","title":"Simple Shaders","text":"<p>Crazyness \ud83c\udf40\u00a9 spsherk_ (CC BY-NC-SA 3.0)Category: Simple ShaderShadertoy: crazinessAuthor: spsherk_Ported by: nmbr73 </p> <p>CrossDistance \ud83c\udf40Copyright \u00a9 2015 Inigo Quilez (MIT License)Category: Simple ShaderShadertoy: Cross - distanceAuthor: iqPorted by: nmbr73 </p> <p>Quadtree3 \ud83c\udf40\u00a9 FabriceNeyret2 (CC BY-NC-SA 3.0)Category: Simple ShaderShadertoy: quadtree 3Author: FabriceNeyret2Ported by: nmbr73 </p> <p>Rosace3C \ud83c\udf40\u00a9 FabriceNeyret2 (CC BY-NC-SA 3.0)Category: Simple ShaderShadertoy: rosace 3cAuthor: FabriceNeyret2Ported by: nmbr73 </p> <p>ShatteredLight \ud83c\udf40\u00a9 conceptblend (CC BY-NC-SA 3.0)Category: Simple ShaderShadertoy: Shattered lightAuthor: conceptblendPorted by: nmbr73 </p> <p>StainedLights \ud83c\udf40\u00a9 104 (CC BY-NC-SA 3.0)Category: Simple ShaderShadertoy: Stained LightsAuthor: 104Ported by: nmbr73 </p> <p>VideoFilters \ud83c\udf40\u00a9 XT95 (CC BY-NC-SA 3.0)Category: Simple ShaderShadertoy: Video filtersAuthor: XT95Ported by: nmbr73 </p>"},{"location":"Overview/#skulls-shaders","title":"Skulls Shaders","text":"<p>AlasPoorYorick \ud83d\udca5\u00a9 shau (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: Alas, poor Yorick!Author: shauPorted by: JiPi </p> <p>DullSkull \ud83d\udca5\u00a9 Kris_Katur (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: DULL SKULLAuthor: Kris_KaturPorted by: JiPi </p> <p>DullSkullBrained \ud83d\udca5\u00a9 Kris_Katur (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: DULL SKULL - BrainedAuthor: Kris_KaturPorted by: JiPi </p> <p>DullSkullBumped \ud83d\udca5\u00a9 Kris_Katur (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: DULL SKULL - BumpedAuthor: Kris_KaturPorted by: JiPi </p> <p>DullSkullPrologue \ud83d\udca5\u00a9 Kris_Katur (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: DULL SKULL - PrologueAuthor: Kris_KaturPorted by: JiPi </p> <p>DullSkullReflected \ud83d\udca5\u00a9 Kris_Katur (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: DULL SKULL - ReflectedAuthor: Kris_KaturPorted by: JiPi </p> <p>DullSpeedSkull \ud83d\udca5\u00a9 Spectraledge (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: DULL Speed SKULLAuthor: SpectraledgePorted by: JiPi </p> <p>ForkDullSkullFrostbyte591 \ud83d\udca5\u00a9 Frostbyte_ (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: Fork DULL SKULL frostbyte_ 591Author: Frostbyte_Ported by: JiPi </p> <p>LostAstronaut \ud83d\udca5\u00a9 duvengar (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: Lost_AstronautAuthor: duvengarPorted by: JiPi </p> <p>Skully \ud83d\udca5\u00a9 monsterkodi (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: skullyAuthor: monsterkodiPorted by: JiPi </p> <p>TheDarkMarkHp \ud83d\udca5\u00a9 Yusef28 (CC BY-NC-SA 3.0)Category: Skulls ShaderShadertoy: The Dark Mark [HP]Author: Yusef28Ported by: JiPi </p>"},{"location":"Overview/#text-shaders","title":"Text Shaders","text":"<p>Shadertext \ud83c\udf40\u00a9 Andre (CC BY-NC-SA 3.0)Category: Text ShaderShadertoy: ShadertextAuthor: AndrePorted by: nmbr73 </p>"},{"location":"Overview/#tunnel-shaders","title":"Tunnel Shaders","text":"<p>BillboardTunnel \ud83d\udca5\u00a9 wyatt (CC BY-NC-SA 3.0)Category: Tunnel ShaderShadertoy:  Billboard TunnelAuthor: wyattPorted by: JiPi </p> <p>CrystalCave \ud83d\udca5\u00a9 diatribes (CC BY-NC-SA 3.0)Category: Tunnel ShaderShadertoy: Crystal Cave \ud83d\udd2eAuthor: diatribesPorted by: JiPi </p> <p>TNTHTW \ud83c\udf40\u00a9 hisojarvi (CC BY-NC-SA 3.0)Category: Tunnel ShaderShadertoy: Try not to hit the wallsAuthor: hisojarviPorted by: JiPi </p> <p>Velocibox \ud83c\udf40\u00a9 zackpudil (CC BY-NC-SA 3.0)Category: Tunnel ShaderShadertoy: VelociboxAuthor: zackpudilPorted by: nmbr73 </p> <p>WindingMengerTunnel \ud83c\udf40\u00a9 Shane (CC BY-NC-SA 3.0)Category: Tunnel ShaderShadertoy: WindingMengerTunnelAuthor: ShanePorted by: JiPi </p>"},{"location":"Overview/#wedding-shaders","title":"Wedding Shaders","text":"<p>HappyValentinesDay \ud83d\udca5\u00a9 RobotPenguin (CC BY-NC-SA 3.0)Category: Wedding ShaderShadertoy: HappyValentinesDayAuthor: RobotPenguinPorted by: JiPi </p> <p>HeartU2015 \ud83d\udca5\u00a9 mattz (CC BY-NC-SA 3.0)Category: Wedding ShaderShadertoy: heart u 2015Author: mattzPorted by: JiPi </p> <p>Heartdemo \ud83c\udf40\u00a9 17dpn01 (CC BY-NC-SA 3.0)Category: Wedding ShaderShadertoy: Heart DemoAuthor: 17dpn01Ported by: JiPi </p> <p>Nematomorpha \ud83d\udca5\u00a9 PianiGiani (CC BY-NC-SA 3.0)Category: Wedding ShaderShadertoy: NematomorphaAuthor: PianiGianiPorted by: JiPi </p> <p>Valentwine \ud83d\udca5\u00a9 Mipmap (CC BY-NC-SA 3.0)Category: Wedding ShaderShadertoy: ValentwineAuthor: MipmapPorted by: JiPi </p> <p>\ud83c\udf40 95</p> <p>\ud83d\udca5 119</p>"},{"location":"Shader%20of%20the%20Week/","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#on-the-home-page-of-shadertoycom-the-shader-of-the-week-is-presented-as-far-as-this-can-be-converted-to-dctl-i-will-set-this-shader-here","title":"On the home page of ShaderToy.com the \"Shader of the Week\" is presented. As far as this can be converted to DCTL, I will set this shader here.","text":""},{"location":"Shader%20of%20the%20Week/#24th-of-october-2025","title":"24<sup>th</sup> of October 2025","text":""},{"location":"Shader%20of%20the%20Week/#hexagon-x5-shadertoy-id-4cvfwg","title":"Hexagon X5 (Shadertoy ID 4cVfWG)","text":""},{"location":"Shader%20of%20the%20Week/#_1","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#15th-of-october-2025","title":"15<sup>th</sup> of October 2025","text":""},{"location":"Shader%20of%20the%20Week/#hex-at-you-shadertoy-id-lflcr8","title":"Hex At You (Shadertoy ID lflcR8)","text":""},{"location":"Shader%20of%20the%20Week/#_2","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#22th-of-september-2025","title":"22th of September 2025","text":""},{"location":"Shader%20of%20the%20Week/#root-sanctum-shadertoy-id-3c2fz1","title":"Root Sanctum (Shadertoy ID 3c2fz1)","text":""},{"location":"Shader%20of%20the%20Week/#_3","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#12th-of-september-2025","title":"12<sup>th</sup> of September 2025","text":""},{"location":"Shader%20of%20the%20Week/#tiledgildedrainbowtunnel-shadertoy-id-tc2cwh","title":"TiledGildedRainbowTunnel (Shadertoy ID tc2cWh)","text":""},{"location":"Shader%20of%20the%20Week/#_4","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#19th-of-august-2025","title":"19<sup>th</sup> of August 2025","text":""},{"location":"Shader%20of%20the%20Week/#hexagold-2-shadertoy-id-sltsr2","title":"HexaGold 2 (Shadertoy ID sltSR2)","text":""},{"location":"Shader%20of%20the%20Week/#_5","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#6th-of-august-2025","title":"6<sup>th</sup> of August 2025","text":""},{"location":"Shader%20of%20the%20Week/#glassy-with-odd-rotation-shadertoy-id-3xdxwx","title":"Glassy With Odd Rotation (Shadertoy ID 3XdXWX)","text":""},{"location":"Shader%20of%20the%20Week/#_6","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#23th-of-july-2025","title":"23th of July 2025","text":""},{"location":"Shader%20of%20the%20Week/#justanothercube-shadertoy-id-3xdxrr","title":"JustAnotherCube (Shadertoy ID 3XdXRr)","text":""},{"location":"Shader%20of%20the%20Week/#_7","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#17th-of-july-2025","title":"17<sup>th</sup> of July 2025","text":""},{"location":"Shader%20of%20the%20Week/#tunnel-of-lights-shadertoy-id-w3kgrk","title":"Tunnel of Lights (Shadertoy ID w3KGRK)","text":""},{"location":"Shader%20of%20the%20Week/#_8","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#6th-of-july-2025","title":"6<sup>th</sup> of July 2025","text":""},{"location":"Shader%20of%20the%20Week/#clearly-a-bug-shadertoy-id-33cgdj","title":"Clearly a bug (Shadertoy ID 33cGDj)","text":""},{"location":"Shader%20of%20the%20Week/#_9","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#6th-of-july-2025_1","title":"6<sup>th</sup> of July 2025","text":""},{"location":"Shader%20of%20the%20Week/#4d-beats-shadertoy-id-tfk3dy","title":"4D Beats (Shadertoy ID tfK3Dy)","text":""},{"location":"Shader%20of%20the%20Week/#_10","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#15th-of-june-2025","title":"15<sup>th</sup> of June 2025","text":""},{"location":"Shader%20of%20the%20Week/#chainspell-shadertoy-id-ms2brz","title":"ChainSpell (Shadertoy ID Ms2BRz)","text":""},{"location":"Shader%20of%20the%20Week/#_11","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#3th-of-june-2025","title":"3th of June 2025","text":""},{"location":"Shader%20of%20the%20Week/#undulating-urchin-shadertoy-id-332xwd","title":"Undulating Urchin (Shadertoy ID 332XWd)","text":""},{"location":"Shader%20of%20the%20Week/#_12","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#28th-of-may-2025","title":"28<sup>th</sup> of May 2025","text":""},{"location":"Shader%20of%20the%20Week/#year-of-truchets-022-shadertoy-id-dtggww","title":"Year Of Truchets #022 (Shadertoy ID dtGGWw)","text":""},{"location":"Shader%20of%20the%20Week/#_13","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#23th-of-may-2025","title":"23th of May 2025","text":""},{"location":"Shader%20of%20the%20Week/#trailingthetwinklingtunnel-shadertoy-id-wfcgwj","title":"TrailingTheTwinklingTunnel (Shadertoy ID WfcGWj)","text":""},{"location":"Shader%20of%20the%20Week/#_14","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#17th-of-may-2025","title":"17<sup>th</sup> of May 2025","text":""},{"location":"Shader%20of%20the%20Week/#fidget-cube-shadertoy-id-xxygzh","title":"Fidget Cube (Shadertoy ID XXyGzh)","text":""},{"location":"Shader%20of%20the%20Week/#_15","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#30th-of-april-2025","title":"30<sup>th</sup> of April 2025","text":""},{"location":"Shader%20of%20the%20Week/#zippy-zaps-399-chars-shadertoy-id-xxygzh","title":"Zippy Zaps [399 Chars] (Shadertoy ID XXyGzh)","text":""},{"location":"Shader%20of%20the%20Week/#_16","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#17th-of-april-2025","title":"17<sup>th</sup> of April 2025","text":""},{"location":"Shader%20of%20the%20Week/#dull-skull-shadertoy-id-dlyywr","title":"DULL SKULL (Shadertoy ID DlyyWR)","text":""},{"location":"Shader%20of%20the%20Week/#_17","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#10th-of-april-2025","title":"10<sup>th</sup> of April 2025","text":""},{"location":"Shader%20of%20the%20Week/#infrastructure-shadertoy-id-ssbfz3","title":"Infrastructure (Shadertoy ID ssBfz3)","text":""},{"location":"Shader%20of%20the%20Week/#_18","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#2th-of-april-2025","title":"2th of April 2025","text":""},{"location":"Shader%20of%20the%20Week/#cubewave3-shadertoy-id-lcsgdd","title":"CubeWave3 (Shadertoy ID lcSGDD)","text":""},{"location":"Shader%20of%20the%20Week/#_19","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#10th-of-march-2025","title":"10<sup>th</sup> of March 2025","text":""},{"location":"Shader%20of%20the%20Week/#creationbysilexars-shadertoy-id-xsxxdn","title":"CreationBySilexars (Shadertoy ID XsXXDn)","text":""},{"location":"Shader%20of%20the%20Week/#_20","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#28th-of-febuary-2025","title":"28<sup>th</sup> of Febuary 2025","text":""},{"location":"Shader%20of%20the%20Week/#yee1212-shadertoy-id-sldgrs","title":"yee1212 (Shadertoy ID sldGRS)","text":""},{"location":"Shader%20of%20the%20Week/#_21","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#5th-of-febuary-2025","title":"5<sup>th</sup> of Febuary 2025","text":""},{"location":"Shader%20of%20the%20Week/#segmented-spiral-whirlpool-shadertoy-id-4ctcrl","title":"Segmented spiral whirlpool (Shadertoy ID 4ctcRl)","text":""},{"location":"Shader%20of%20the%20Week/#_22","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#31th-of-january-2025","title":"31th of January 2025","text":""},{"location":"Shader%20of%20the%20Week/#eye-of-phi-shadertoy-id-7stfzb","title":"Eye of Phi (Shadertoy ID 7stfzB)","text":""},{"location":"Shader%20of%20the%20Week/#_23","title":"Shader of the Week","text":""},{"location":"Shader%20of%20the%20Week/#22th-of-january-2025","title":"22th of January 2025","text":""},{"location":"Shader%20of%20the%20Week/#abstract-truchet-inversion-shadertoy-id-7ljxwt","title":"Abstract Truchet Inversion (Shadertoy ID 7ljXWt)","text":""},{"location":"Shader%20of%20the%20Week/#16th-of-dezember-2024","title":"16<sup>th</sup> of Dezember 2024","text":""},{"location":"Shader%20of%20the%20Week/#-tunnel-cable-shadertoy-id-mfvfz3","title":"\u5927\u9f99\u732b - Tunnel Cable (Shadertoy ID MfVfz3)","text":""},{"location":"Shader%20of%20the%20Week/#28th-of-november-2024","title":"28<sup>th</sup> of November 2024","text":""},{"location":"Shader%20of%20the%20Week/#weird-truchet-new-keyboard-shadertoy-id-4ccfrn","title":"Weird Truchet New Keyboard (Shadertoy ID 4ccfRn)","text":""},{"location":"Shader%20of%20the%20Week/#27th-of-november-2024","title":"27<sup>th</sup> of November 2024","text":""},{"location":"Shader%20of%20the%20Week/#fork-neon-tunne-infames-758-shadertoy-id-lcjgwv","title":"Fork Neon Tunne Infames 758 (Shadertoy ID lcjGWV)","text":""},{"location":"Shader%20of%20the%20Week/#22th-of-november-2024","title":"22th of November 2024","text":""},{"location":"Shader%20of%20the%20Week/#starfield-shadertoy-id-lcjgwv","title":"Starfield (Shadertoy ID lcjGWV)","text":""},{"location":"Shader%20of%20the%20Week/#11th-of-november-2024","title":"11<sup>th</sup> of November 2024","text":""},{"location":"Shader%20of%20the%20Week/#torus-hive-shadertoy-id-nsdxzf","title":"Torus Hive (Shadertoy ID NsdXzf)","text":""},{"location":"Shader%20of%20the%20Week/#22th-of-october-2024","title":"22th of October 2024","text":""},{"location":"Shader%20of%20the%20Week/#unstable-universe-shadertoy-id-wtlfz8","title":"Unstable Universe (Shadertoy ID wtlfz8)","text":""},{"location":"Shader%20of%20the%20Week/#22th-of-october-2024_1","title":"22th of October 2024","text":""},{"location":"Shader%20of%20the%20Week/#abstract-wave-thing-shadertoy-id-tttsw7","title":"Abstract Wave Thing (Shadertoy ID tttSW7)","text":""},{"location":"Shader%20of%20the%20Week/#29th-of-september-2024","title":"29<sup>th</sup> of September 2024","text":""},{"location":"Shader%20of%20the%20Week/#alien-space-jockey-shadertoy-id-mdb3rh","title":"Alien Space Jockey (Shadertoy ID mdB3Rh)","text":""},{"location":"Shader%20of%20the%20Week/#10th-of-september-2024","title":"10<sup>th</sup> of September 2024","text":""},{"location":"Shader%20of%20the%20Week/#starry-planes-shadertoy-id-mfjywk","title":"Starry Planes (Shadertoy ID MfjyWK)","text":""},{"location":"Shader%20of%20the%20Week/#17th-of-july-2024","title":"17<sup>th</sup> of July 2024","text":""},{"location":"Shader%20of%20the%20Week/#alien-tunnel-shadertoy-id-x3ysrc","title":"Alien Tunnel (Shadertoy ID X3ySRc)","text":""},{"location":"Shader%20of%20the%20Week/#1th-of-july-2024","title":"1th of July 2024","text":""},{"location":"Shader%20of%20the%20Week/#nested-octahedrons2-shadertoy-id-x3cxdj","title":"Nested Octahedrons2 (Shadertoy ID X3cXDj)","text":""},{"location":"Shader%20of%20the%20Week/#19th-of-june-2024","title":"19<sup>th</sup> of June 2024","text":""},{"location":"Shader%20of%20the%20Week/#russian-roulette-audio-viz-shadertoy-id-mfg3ry","title":"Russian Roulette (Audio Viz) (Shadertoy ID MfG3Ry)","text":""},{"location":"Shader%20of%20the%20Week/#9th-of-june-2024","title":"9<sup>th</sup> of June 2024","text":""},{"location":"Shader%20of%20the%20Week/#saturday-weirdness-shadertoy-id-43jxwt","title":"Saturday Weirdness (Shadertoy ID 43jXWt)","text":""},{"location":"Shader%20of%20the%20Week/#20th-of-may-2024","title":"20<sup>th</sup> of May 2024","text":""},{"location":"Shader%20of%20the%20Week/#lets-self-reflect-shadertoy-id-xfyxrv","title":"Let's self reflect (Shadertoy ID XfyXRV)","text":""},{"location":"Shader%20of%20the%20Week/#17th-of-april-2024","title":"17<sup>th</sup> of April 2024","text":""},{"location":"Shader%20of%20the%20Week/#orbitalmegastructure-shadertoy-id-wlkxzm","title":"OrbitalMegastructure (Shadertoy ID WlKXzm)","text":""},{"location":"Shader%20of%20the%20Week/#27th-of-march-2024","title":"27<sup>th</sup> of March 2024","text":""},{"location":"Shader%20of%20the%20Week/#simplextruchettubing-shadertoy-id-xsffwj","title":"SimplexTruchetTubing (Shadertoy ID XsffWj)","text":""},{"location":"Shader%20of%20the%20Week/#20th-of-march-2024","title":"20<sup>th</sup> of March 2024","text":""},{"location":"Shader%20of%20the%20Week/#somethinmountainbytespppp4kibwindows-shadertoy-id-lx2gzd","title":"SomethinMountainbytesPppp4KibWindows (Shadertoy ID lX2GzD)","text":""},{"location":"Shader%20of%20the%20Week/#1th-of-march-2024","title":"1th of March 2024","text":""},{"location":"Shader%20of%20the%20Week/#space-at-home-shadertoy-id-mxs3zy","title":"Space At Home (Shadertoy ID MXS3zy)","text":""},{"location":"Shader%20of%20the%20Week/#14th-of-february-2024","title":"14<sup>th</sup> of February 2024","text":""},{"location":"Shader%20of%20the%20Week/#something227-shadertoy-id-3lybdw","title":"Something227 (Shadertoy ID 3lyBDw)","text":""},{"location":"Shader%20of%20the%20Week/#16th-of-january-2024","title":"16<sup>th</sup> of January 2024","text":""},{"location":"Shader%20of%20the%20Week/#fullspectrumcyber-shadertoy-id-xcxxzs","title":"FullSpectrumCyber (Shadertoy ID XcXXzS)","text":""},{"location":"Shader%20of%20the%20Week/#5th-of-january-2024","title":"5<sup>th</sup> of January 2024","text":""},{"location":"Shader%20of%20the%20Week/#insidethetorus-shadertoy-id-xcs3zk","title":"InsideTheTorus (Shadertoy ID XcS3zK)","text":""},{"location":"Shader%20of%20the%20Week/#18th-of-december-2023","title":"18<sup>th</sup> of December 2023","text":""},{"location":"Shader%20of%20the%20Week/#androidruntime-shadertoy-id-dltbrm","title":"AndroidRuntime (Shadertoy ID DltBRM)","text":""},{"location":"Shader%20of%20the%20Week/#6th-of-december-2023","title":"6<sup>th</sup> of December 2023","text":""},{"location":"Shader%20of%20the%20Week/#groundcameralightinghelix-shadertoy-id-mt33w2","title":"GroundCameraLightingHelix (Shadertoy ID Mt33W2)","text":""},{"location":"Shader%20of%20the%20Week/#16th-of-november-2023","title":"16<sup>th</sup> of November 2023","text":""},{"location":"Shader%20of%20the%20Week/#decorated-christmas-spiral-shadertoy-id-3dvfdc","title":"Decorated Christmas Spiral (Shadertoy ID 3dVfDc)","text":""},{"location":"Shader%20of%20the%20Week/#1th-of-november-2023","title":"1th of November 2023","text":""},{"location":"Shader%20of%20the%20Week/#neural-stanford-bunny-5-kb-shadertoy-id-wtvywk","title":"Neural Stanford Bunny (5 kb) (Shadertoy ID wtVyWK)","text":""},{"location":"Shader%20of%20the%20Week/#17th-of-september-2023","title":"17<sup>th</sup> of September 2023","text":""},{"location":"Shader%20of%20the%20Week/#extruded-bauhaus-truchet-pattern-shadertoy-id-dl2fzz","title":"Extruded Bauhaus Truchet Pattern (Shadertoy ID dl2fzz)","text":""},{"location":"Shader%20of%20the%20Week/#05th-of-september-2023","title":"05th of September 2023","text":""},{"location":"Shader%20of%20the%20Week/#stellar-clouds-shadertoy-id-dtdsz7","title":"STELLAR CLOUDS (Shadertoy ID DtdSz7)","text":""},{"location":"Shader%20of%20the%20Week/#29th-of-august-2023","title":"29<sup>th</sup> of August 2023","text":""},{"location":"Shader%20of%20the%20Week/#discoteq-2-shadertoy-id-dtxfdr","title":"Discoteq 2 (Shadertoy ID DtXfDr)","text":""},{"location":"Shader%20of%20the%20Week/#22th-of-august-2023","title":"22th of August 2023","text":""},{"location":"Shader%20of%20the%20Week/#inside-the-mandelbulb-ii-shadertoy-id-mtscrc","title":"Inside the mandelbulb II (Shadertoy ID mtScRc)","text":""},{"location":"Shader%20of%20the%20Week/#15th-of-august-2023","title":"15<sup>th</sup> of August 2023","text":""},{"location":"Shader%20of%20the%20Week/#bomlka-shadertoy-id-mtxyd7","title":"bomlka (Shadertoy ID mtXyD7)","text":""},{"location":"Shader%20of%20the%20Week/#18th-of-july-2023","title":"18<sup>th</sup> of July 2023","text":""},{"location":"Shader%20of%20the%20Week/#whack-a-mole-pistons-shadertoy-id-wtxcwb","title":"Whack-A-Mole Pistons (Shadertoy ID WtXcWB)","text":""},{"location":"Shader%20of%20the%20Week/#04th-of-june-2023","title":"04th of June 2023","text":""},{"location":"Shader%20of%20the%20Week/#playingaroundshader-shadertoy-id-ndscdf","title":"PlayingAroundShader (Shadertoy ID NdscDf)","text":""},{"location":"Shader%20of%20the%20Week/#11th-of-may-2023","title":"11<sup>th</sup> of May 2023","text":""},{"location":"Shader%20of%20the%20Week/#ainotincluded-shadertoy-id-ctd3rl","title":"AiNotIncluded (Shadertoy ID ctd3Rl)","text":""},{"location":"Shader%20of%20the%20Week/#2th-of-may-2023","title":"2th of May 2023","text":""},{"location":"Shader%20of%20the%20Week/#acircleaday-shadertoy-id-ddyszw","title":"ACircleADay (Shadertoy ID DdySzW","text":""},{"location":"Shader%20of%20the%20Week/#12th-of-april-2023","title":"12<sup>th</sup> of April 2023","text":""},{"location":"Shader%20of%20the%20Week/#retrovision-shadertoy-id-ddvszr","title":"RetroVision (Shadertoy ID DdVSzR)","text":""},{"location":"Shader%20of%20the%20Week/#30th-of-march-2023","title":"30<sup>th</sup> of March 2023","text":""},{"location":"Shader%20of%20the%20Week/#electriceeluniverse-shadertoy-id-cddsrm","title":"ElectricEelUniverse (Shadertoy ID cddSRM)","text":""},{"location":"Shader%20of%20the%20Week/#08th-of-march-2023","title":"08th of March 2023","text":""},{"location":"Shader%20of%20the%20Week/#hyperbolicgrouplimitset-shadertoy-id-nstsds","title":"HyperbolicGroupLimitSet (Shadertoy ID NstSDs)","text":""},{"location":"Shader%20of%20the%20Week/#03th-of-march-2023","title":"03th of March 2023","text":""},{"location":"Shader%20of%20the%20Week/#greenfielddiorama-shadertoy-id-wtlxrh","title":"GreenFieldDiorama (Shadertoy ID wtlXRH)","text":""},{"location":"Shader%20of%20the%20Week/#06th-of-february-2023","title":"06th of February 2023","text":""},{"location":"Shader%20of%20the%20Week/#nintendo-switch-shadertoy-id-wtlxrh","title":"Nintendo Switch (Shadertoy ID wtlXRH)","text":""},{"location":"Shader%20of%20the%20Week/#26th-of-december-2022-to-31th-of-january-2023","title":"26<sup>th</sup> of December 2022 to 31th of January 2023","text":"<p>Not a worthwhile shader for fusion</p>"},{"location":"Shader%20of%20the%20Week/#4d-sun-shadertoy-id-wtvgdr","title":"4D Sun (Shadertoy ID wtVGDR)","text":""},{"location":"Shader%20of%20the%20Week/#the-grid-shadertoy-id-7tgfwy","title":"tHe gRiD (Shadertoy ID 7tGfWy)","text":""},{"location":"Shader%20of%20the%20Week/#desire-crystal-shadertoy-id-flfyrs","title":"Desire Crystal (Shadertoy ID flfyRS)","text":""},{"location":"Shader%20of%20the%20Week/#4traveling-by-the-mountains-shadertoy-id-nlcczf","title":"4Traveling by the mountains (Shadertoy ID Nlcczf)","text":""},{"location":"Shader%20of%20the%20Week/#19th-of-december-2022","title":"19<sup>th</sup> of December 2022","text":""},{"location":"Shader%20of%20the%20Week/#audioflightv2-energetic-flyby-shadertoy-id-7tfyrl","title":"AudioFlightV2 Energetic Flyby (Shadertoy ID 7tfyRl)","text":""},{"location":"Shader%20of%20the%20Week/#05th-of-december-2022","title":"05th of December 2022","text":""},{"location":"Shader%20of%20the%20Week/#20221105_inercia-intended-one-shadertoy-id-cs2gwd","title":"20221105_inercia intended one (Shadertoy ID cs2GWD)","text":""},{"location":"Shader%20of%20the%20Week/#21th-of-november-2022","title":"21th of November 2022","text":""},{"location":"Shader%20of%20the%20Week/#energetic-flyby-shadertoy-id-csjgdd","title":"Energetic Flyby (Shadertoy ID csjGDD)","text":""},{"location":"Shader%20of%20the%20Week/#08th-of-november-2022","title":"08th of November 2022","text":""},{"location":"Shader%20of%20the%20Week/#generativeartdeco4-shadertoy-id-mds3dx","title":"GenerativeArtDeco4 (Shadertoy ID mds3DX)","text":""},{"location":"Shader%20of%20the%20Week/#02th-of-november-2022","title":"02th of November 2022","text":""},{"location":"Shader%20of%20the%20Week/#wednesdaymessingaround-shadertoy-id-ntcydn","title":"WednesdayMessingAround (Shadertoy ID NtcyDn)","text":""},{"location":"Shader%20of%20the%20Week/#13th-of-september-2022","title":"13<sup>th</sup> of September 2022","text":""},{"location":"Shader%20of%20the%20Week/#twizzlycirclemess-shadertoy-id-sltgrj","title":"TwizzlyCircleMess (Shadertoy ID sltGRj)","text":""},{"location":"Shader%20of%20the%20Week/#31th-of-august-2022","title":"31th of August 2022","text":""},{"location":"Shader%20of%20the%20Week/#simplerefractiontest-shadertoy-id-flcsw2","title":"SimpleRefractionTest (Shadertoy ID flcSW2)","text":"<p>) </p>"},{"location":"Shader%20of%20the%20Week/#17th-of-august-2022","title":"17<sup>th</sup> of August 2022","text":""},{"location":"Shader%20of%20the%20Week/#frozen-wasteland-shadertoy-id-xls3d2","title":"Frozen Wasteland (Shadertoy ID Xls3D2)","text":""},{"location":"Shader%20of%20the%20Week/#19th-of-july-2022","title":"19<sup>th</sup> of July 2022","text":""},{"location":"Shader%20of%20the%20Week/#controllablemachinery-shadertoy-id-fsxydj","title":"ControllableMachinery (Shadertoy ID fsXyDj)","text":""},{"location":"Shader%20of%20the%20Week/#14th-of-june-2022","title":"14<sup>th</sup> of June 2022","text":""},{"location":"Shader%20of%20the%20Week/#jeweledvortex-shadertoy-id-fdjfdc","title":"JeweledVortex (Shadertoy ID fdjfDc)","text":""},{"location":"Shader%20of%20the%20Week/#07th-of-june-2022","title":"07th of June 2022","text":""},{"location":"Shader%20of%20the%20Week/#fluffballs-shadertoy-id-fscczx","title":"fluffballs (Shadertoy ID fscczX)","text":"<p>Not a worthwhile shader for fusion</p>"},{"location":"Shader%20of%20the%20Week/#03th-of-june-2022","title":"03th of June 2022","text":""},{"location":"Shader%20of%20the%20Week/#coastallandscapet-shadertoy-id-fstyd4","title":"CoastalLandscapet (Shadertoy ID fstyD4)","text":""},{"location":"Shader%20of%20the%20Week/#25th-of-may-2022","title":"25<sup>th</sup> of May 2022","text":""},{"location":"Shader%20of%20the%20Week/#nightcircuit-shadertoy-id-tdybr1","title":"NightCircuit (Shadertoy ID tdyBR1)","text":""},{"location":"Shader%20of%20the%20Week/#18th-of-may-2022","title":"18<sup>th</sup> of May 2022","text":""},{"location":"Shader%20of%20the%20Week/#pig-squad-shadertoy-id-wdbcrh","title":"Pig Squad (Shadertoy ID WdBcRh)","text":""},{"location":"Shader%20of%20the%20Week/#12th-of-may-2022","title":"12<sup>th</sup> of May 2022","text":""},{"location":"Shader%20of%20the%20Week/#cubic-dispersal-shadertoy-id-fldxws","title":"Cubic Dispersal (Shadertoy ID fldXWS)","text":""},{"location":"Shader%20of%20the%20Week/#05th-of-may-2022","title":"05th of May 2022","text":""},{"location":"Shader%20of%20the%20Week/#colorprocessing-shadertoy-id-7tfbzs","title":"ColorProcessing (Shadertoy ID 7tfBzs)","text":""},{"location":"Shader%20of%20the%20Week/#27th-of-april-2022","title":"27<sup>th</sup> of April 2022","text":""},{"location":"Shader%20of%20the%20Week/#spaceship-shadertoy-id-nlsbzn","title":"SpaceShip (Shadertoy ID NlsBzn)","text":""},{"location":"Shader%20of%20the%20Week/#20th-of-april-2022","title":"20<sup>th</sup> of April 2022","text":""},{"location":"Shader%20of%20the%20Week/#dangernoodle-shadertoy-id-wlvsdk","title":"DangerNoodle (Shadertoy ID wlVSDK)","text":""},{"location":"Shader%20of%20the%20Week/#14th-of-april-2022","title":"14<sup>th</sup> of April 2022","text":""},{"location":"Shader%20of%20the%20Week/#starsandgalaxy-shadertoy-id-stbcw1","title":"StarsAndGalaxy (Shadertoy ID stBcW1)","text":""},{"location":"Shader%20of%20the%20Week/#7th-of-april-2022","title":"7<sup>th</sup> of April 2022","text":""},{"location":"Shader%20of%20the%20Week/#desperate-distraction-shadertoy-id-7ddsd7","title":"Desperate Distraction (Shadertoy ID 7ddSD7)","text":"<p>Not a worthwhile shader for fusion</p>"},{"location":"Shader%20of%20the%20Week/#30th-of-march-2022","title":"30<sup>th</sup> of March 2022","text":""},{"location":"Shader%20of%20the%20Week/#partyconcertvisuals2020-shadertoy-id-wtscw4","title":"PartyConcertVisuals2020 (Shadertoy ID WtscW4)","text":""},{"location":"Shader%20of%20the%20Week/#23th-of-march-2022","title":"23th of March 2022","text":""},{"location":"Shader%20of%20the%20Week/#omzg-shader-royale-shadertoy-id-3l3bzl","title":"OMZG Shader Royale (Shadertoy ID 3l3Bzl)","text":""},{"location":"Shader%20of%20the%20Week/#16th-of-march-2022","title":"16<sup>th</sup> of March 2022","text":""},{"location":"Shader%20of%20the%20Week/#morning-commute-shadertoy-id-wdkbz1","title":"Morning Commute (Shadertoy ID wdKBz1)","text":"<p>Not a worthwhile shader for fusion</p>"},{"location":"Shader%20of%20the%20Week/#9th-of-march-2022","title":"9<sup>th</sup> of March 2022","text":""},{"location":"Shader%20of%20the%20Week/#quartz-wip-shadertoy-id-fs2gwh","title":"Quartz - wip (Shadertoy ID fs2GWh)","text":"<p>Not a worthwhile shader for fusion</p>"},{"location":"Shader%20of%20the%20Week/#2th-of-march-2022","title":"2th of March 2022","text":""},{"location":"Shader%20of%20the%20Week/#synthwave-song-sound-shadertoy-id-nddszl","title":"Synthwave song (sound) (Shadertoy ID NddSzl)","text":"<p>AudioShader, which is not convertible</p>"},{"location":"Shader%20of%20the%20Week/#23th-of-february-2022","title":"23th of February 2022","text":""},{"location":"Shader%20of%20the%20Week/#lover-shadertoy-id-fsjyr3","title":"Lover (Shadertoy ID fsjyR3)","text":""},{"location":"Shader%20of%20the%20Week/#16th-of-february-2022","title":"16<sup>th</sup> of February 2022","text":""},{"location":"Shader%20of%20the%20Week/#terraform-shadertoy-id-nsdxds","title":"Terraform (Shadertoy ID NsdXDs)","text":""},{"location":"Shader%20of%20the%20Week/#9th-of-february-2022","title":"9<sup>th</sup> of February 2022","text":""},{"location":"Shader%20of%20the%20Week/#stargazinghippo-shadertoy-id-4tgfz3","title":"StarGazingHippo (Shadertoy ID 4tGfz3)","text":"<p>!</p>"},{"location":"Shader%20of%20the%20Week/#2th-of-february-2022","title":"2th of February 2022","text":""},{"location":"Shader%20of%20the%20Week/#undulating-columns-shadertoy-id-wlxxdh","title":"Undulating Columns (Shadertoy ID WlXXDH)","text":""},{"location":"Shader%20of%20the%20Week/#26th-of-january-2022","title":"26<sup>th</sup> of January 2022","text":""},{"location":"Shader%20of%20the%20Week/#trippytriangle-shadertoy-id-fslcds","title":"TrippyTriangle (Shadertoy ID fslcDS)","text":""},{"location":"Shader%20of%20the%20Week/#19th-of-january-2022","title":"19<sup>th</sup> of January 2022","text":""},{"location":"Shader%20of%20the%20Week/#exit-the-matrix-shadertoy-id-nlsxdh","title":"Exit the Matrix (Shadertoy ID NlsXDH)","text":""},{"location":"Shader%20of%20the%20Week/#12th-of-january-2022","title":"12<sup>th</sup> of January 2022","text":""},{"location":"Shader%20of%20the%20Week/#on-the-salt-lake-shadertoy-id-tls3wb","title":"On the salt lake (Shadertoy ID tls3WB)","text":""},{"location":"Shader%20of%20the%20Week/#5th-of-january-2022","title":"5<sup>th</sup> of January 2022","text":""},{"location":"Shader%20of%20the%20Week/#recursive-donut-shadertoy-id-tls3wb","title":"Recursive Donut (Shadertoy ID tls3WB)","text":""},{"location":"Shader%20of%20the%20Week/#30th-of-dezember-2021","title":"30<sup>th</sup> of Dezember 2021","text":""},{"location":"Shader%20of%20the%20Week/#truchet-kaleidoscope-ftw6-shadertoy-id-7lksww","title":"Truchet + Kaleidoscope FTW6 (Shadertoy ID 7lKSWW)","text":""},{"location":"Shader%20of%20the%20Week/#16th-of-dezember-2021","title":"16<sup>th</sup> of Dezember 2021","text":""},{"location":"Shader%20of%20the%20Week/#paper-plane-shadertoy-id-tstczs","title":"Paper Plane (Shadertoy ID tstczS)","text":"<p>GameShader, is not interesting as a shaderfuse, as it is intended for playing</p>"},{"location":"Shader%20of%20the%20Week/#8th-of-dezember-2021","title":"8<sup>th</sup> of Dezember 2021","text":""},{"location":"Shader%20of%20the%20Week/#hyperdough-shadertoy-id-7tcgwb","title":"HyperDough (Shadertoy ID 7tcGWB)","text":""},{"location":"Shader%20of%20the%20Week/#3th-of-dezember-2021","title":"3th of Dezember 2021","text":""},{"location":"Shader%20of%20the%20Week/#fractalgliding-shadertoy-id-ftggdr","title":"FractalGliding (Shadertoy ID ftGGDR)","text":""},{"location":"Shader%20of%20the%20Week/#18th-of-november-2021","title":"18<sup>th</sup> of November 2021","text":""},{"location":"Shader%20of%20the%20Week/#rme4-crater-shadertoy-id-mlsbdt","title":"RME4-Crater (Shadertoy ID MlSBDt)","text":""},{"location":"Shader%20of%20the%20Week/#11th-of-november-2021","title":"11<sup>th</sup> of November 2021","text":""},{"location":"Shader%20of%20the%20Week/#futuristictunnel-shadertoy-id-wdscrd","title":"FuturisticTunnel (Shadertoy ID wdScRd)","text":""},{"location":"Shader%20of%20the%20Week/#3th-of-november-2021","title":"3th of November 2021","text":""},{"location":"Shader%20of%20the%20Week/#alexanderhornedspherezoom-shadertoy-id-ns3xwf","title":"AlexanderHornedSphereZoom (Shadertoy ID Ns3XWf)","text":""},{"location":"Shader%20of%20the%20Week/#29th-of-october-2021","title":"29<sup>th</sup> of October 2021","text":""},{"location":"Shader%20of%20the%20Week/#spiraledlayers-shadertoy-id-ns3xwf","title":"SpiraledLayers (Shadertoy ID Ns3XWf)","text":""},{"location":"Shader%20of%20the%20Week/#20th-of-october-2021","title":"20<sup>th</sup> of October 2021","text":""},{"location":"Shader%20of%20the%20Week/#tasteofnoise7-shadertoy-id-nddsws","title":"TasteOfNoise7 (Shadertoy ID NddSWs)","text":""},{"location":"Shader%20of%20the%20Week/#5th-of-october-2021","title":"5<sup>th</sup> of October 2021","text":""},{"location":"Shader%20of%20the%20Week/#20210930_club-cave-09-shadertoy-id-ndkgwv","title":"20210930_CLUB-CAVE-09 (Shadertoy ID NdKGWV)","text":""},{"location":"Shader%20of%20the%20Week/#28th-of-september-2021","title":"28<sup>th</sup> of September 2021","text":""},{"location":"Shader%20of%20the%20Week/#simplesphereraymarching-shadertoy-id-ndkgwv","title":"SimpleSphereRaymarching (Shadertoy ID NdKGWV)","text":""},{"location":"Shader%20of%20the%20Week/#21th-of-september-2021","title":"21th of September 2021","text":""},{"location":"Shader%20of%20the%20Week/#technosong-shadertoy-id-sls3wm","title":"TechnoSong (Shadertoy ID sls3WM)","text":"<p>AudioShader, which is not convertible</p>"},{"location":"Shader%20of%20the%20Week/#14th-of-september-2021","title":"14<sup>th</sup> of September 2021","text":""},{"location":"Shader%20of%20the%20Week/#day94-shadertoy-id-tdxcwm","title":"Day94 (Shadertoy ID tdXcWM)","text":""},{"location":"Shader%20of%20the%20Week/#7th-of-september-2021","title":"7<sup>th</sup> of September 2021","text":""},{"location":"Shader%20of%20the%20Week/#fractal-flythrough-shadertoy-id-4s3srn","title":"Fractal Flythrough (Shadertoy ID 4s3SRN)","text":""},{"location":"Shaders/","title":"Shaders","text":""},{"location":"Shaders/#shaders","title":"Shaders","text":""},{"location":"Shaders/#abstract-shaders","title":"Abstract Shaders","text":"<ul> <li>BumpyReflectingBalls (Shadertoy ID ltsXDB) ported by JiPi</li> <li>Dynamism (Shadertoy ID MtKSWW) ported by JiPi</li> <li>Favela (Shadertoy ID ldGcDh) ported by nmbr73</li> <li>FlightThroughANebula (Shadertoy ID tsK3Rd) ported by JiPi</li> <li>Mosaic (Shadertoy ID XtySRc) ported by JiPi</li> <li>Noisecube (Shadertoy ID 4sGBD1) ported by JiPi</li> <li>OtherWorlds (Shadertoy ID Ns2XzR) ported by JiPi</li> <li>OverstimulatedNeurons (Shadertoy ID NdlSD8) ported by JiPi</li> <li>RainbowSlices (Shadertoy ID XdsGD4) ported by nmbr73</li> <li>RainbowSpaghetti (Shadertoy ID lsjGRV) ported by nmbr73</li> <li>Raysemigarbage (Shadertoy ID 3tdSW8) ported by JiPi</li> <li>VirusAttack (Shadertoy ID 3fSSW1) ported by JiPi</li> </ul>"},{"location":"Shaders/#audio-shaders","title":"Audio Shaders","text":"<ul> <li>AudioHeightfield1 (Shadertoy ID ldXGzN) ported by JiPi</li> <li>AudioWaveformVisualizer (Shadertoy ID wd3Bzl) ported by JiPi</li> <li>InerciaIntended (Shadertoy ID cs2GWD) ported by JiPi</li> <li>JamSession (Shadertoy ID XdsyW4) ported by JiPi</li> <li>ReactiveVoronoi (Shadertoy ID Ml3GDX) ported by JiPi</li> <li>Rlstyle (Shadertoy ID llXyzN) ported by JiPi</li> <li>ShadertoyAudioDisplay (Shadertoy ID MtVfWh) ported by JiPi</li> </ul>"},{"location":"Shaders/#blob-shaders","title":"Blob Shaders","text":"<ul> <li>FunWithMetaballs (Shadertoy ID MlyXWV) ported by JiPi</li> <li>ParticleLifeWithRaymarching (Shadertoy ID 43yfWR) ported by JiPi</li> <li>TorturedBlob (Shadertoy ID MlKGDK) ported by JiPi</li> <li>XRaymarching (Shadertoy ID XtByWW) ported by JiPi</li> </ul>"},{"location":"Shaders/#christmas-shaders","title":"Christmas Shaders","text":"<ul> <li>ChristmasTreeStar (Shadertoy ID wtd3D4) ported by JiPi</li> </ul>"},{"location":"Shaders/#cubemap-shaders","title":"Cubemap Shaders","text":"<ul> <li>BallsAreTouching (Shadertoy ID MdlGWn) ported by JiPi</li> <li>GlassAndBubble (Shadertoy ID XdVSRV) ported by JiPi</li> <li>KissTracing (Shadertoy ID sttXWX) ported by JiPi</li> <li>NewtonPendulum (Shadertoy ID 7sXyzX) ported by JiPi</li> <li>OceanElemental (Shadertoy ID NdS3zK) ported by JiPi</li> </ul>"},{"location":"Shaders/#displays-shaders","title":"Displays Shaders","text":"<ul> <li>Cellphone (Shadertoy ID MdfSRs) ported by JiPi</li> <li>CoffeeAndTablet (Shadertoy ID lssGzn) ported by JiPi</li> <li>Telephone (Shadertoy ID ldVyDG) ported by JiPi</li> <li>Vt220Codingatnight (Shadertoy ID XdtfzX) ported by JiPi</li> </ul>"},{"location":"Shaders/#distortion-shaders","title":"Distortion Shaders","text":"<ul> <li>DisplacementShader (Shadertoy ID MtBfR3) ported by JiPi</li> <li>FbmWarp (Shadertoy ID ttGyzG) ported by JiPi</li> <li>WovenElasticSimulation (Shadertoy ID 3cSSRh) ported by JiPi</li> </ul>"},{"location":"Shaders/#fractals-shaders","title":"Fractals Shaders","text":"<ul> <li>ApollianWithATwist (Shadertoy ID Wl3fzM) ported by nmbr73</li> <li>EnergyPlant (Shadertoy ID WdjBWc) ported by JiPi</li> <li>Fractal03 (Shadertoy ID 3lKcDV) ported by JiPi</li> <li>FractalEngine (Shadertoy ID ttSBRm) ported by JiPi</li> <li>FractalGutter (Shadertoy ID ttjBD1) ported by JiPi</li> <li>FractalRadioBase (Shadertoy ID WlcczS) ported by JiPi</li> <li>Kali3D (Shadertoy ID MdB3DK) ported by JiPi</li> <li>Rendezvous (Shadertoy ID ldjGDw) ported by JiPi</li> </ul>"},{"location":"Shaders/#misc-shaders","title":"Misc Shaders","text":"<ul> <li>BuoyantBalls (Shadertoy ID MtsBW8) ported by JiPi</li> <li>Fire_Water (Shadertoy ID tdsBz4) ported by JiPi</li> <li>FractalLand (Shadertoy ID XsBXWt) ported by nmbr73</li> <li>IHeartFourier (Shadertoy ID tltSWr) ported by JiPi</li> <li>Legofied (Shadertoy ID XtBSzy) ported by JiPi</li> <li>LittleBoxes (Shadertoy ID l3B3WD) ported by JiPi</li> <li>MountainsLakes (Shadertoy ID 7tSSDD) ported by JiPi</li> <li>Seascape (Shadertoy ID Ms2SD1) ported by nmbr73</li> <li>TruePinballPhysics (Shadertoy ID 4tBGRm) ported by JiPi</li> </ul>"},{"location":"Shaders/#object-shaders","title":"Object Shaders","text":"<ul> <li>DancyTreeDoodle (Shadertoy ID wslGz7) ported by JiPi</li> <li>DancyTreeDoodle3D (Shadertoy ID 4lVyzh) ported by JiPi</li> <li>EggHunt (Shadertoy ID ttyfDV) ported by JiPi</li> <li>EndlessScrewScrollGenuary28 (Shadertoy ID XXKfDh) ported by JiPi</li> <li>HW3Swing (Shadertoy ID 4dtyz8) ported by JiPi</li> <li>HappyBouncing (Shadertoy ID flyXRh) ported by JiPi</li> <li>HeavenAndHell (Shadertoy ID wsKXDV) ported by JiPi</li> <li>JugglerRetroBallObjects (Shadertoy ID t3XGRN) ported by JiPi</li> <li>LaJi (Shadertoy ID M3yBDW) ported by JiPi</li> <li>Legos (Shadertoy ID Xdl3Dj) ported by JiPi</li> <li>LonelyVoxel (Shadertoy ID Mslczn) ported by JiPi</li> <li>Oblivion (Shadertoy ID XtfXDN) ported by JiPi</li> <li>PolyhedralGears (Shadertoy ID lt3cz7) ported by JiPi</li> <li>ProceduralWalkAnimation (Shadertoy ID WlsSWS) ported by JiPi</li> <li>ShareX (Shadertoy ID WsKSRK) ported by JiPi</li> <li>WalkingCubes (Shadertoy ID Xl3XR4) ported by JiPi</li> </ul>"},{"location":"Shaders/#planet-shaders","title":"Planet Shaders","text":"<ul> <li>CrackerCars (Shadertoy ID 4sdXzr) ported by JiPi</li> <li>EARF (Shadertoy ID ls3SDj) ported by JiPi</li> <li>Fake3DScene (Shadertoy ID MddSWB) ported by JiPi</li> <li>MightyMorphingPowerSphere (Shadertoy ID MtGSzh) ported by JiPi</li> <li>RayCastSphere (Shadertoy ID XdjBDG) ported by JiPi</li> <li>WildKifs4D (Shadertoy ID wttBzM) ported by JiPi</li> </ul>"},{"location":"Shaders/#recursive-shaders","title":"Recursive Shaders","text":"<ul> <li>AnisotropicBlurImage (Shadertoy ID ldcSDB) ported by JiPi</li> <li>FallingCuteBombs (Shadertoy ID ldy3Rw) ported by JiPi</li> <li>GrowingWeatheringRocks (Shadertoy ID ftSSDy) ported by JiPi</li> <li>LearningReactionDiffusion (Shadertoy ID WlSGzy) ported by JiPi</li> <li>Spilled (Shadertoy ID MsGSRd) ported by JiPi</li> <li>TDSOTM_Nebula (Shadertoy ID 4dBSDV) ported by JiPi</li> <li>Vine (Shadertoy ID XldSz7) ported by JiPi</li> </ul>"},{"location":"Shaders/#shaderoftheweek-shaders","title":"ShaderOfTheWeek Shaders","text":"<ul> <li>ACircleADay (Shadertoy ID DdySzW) ported by JiPi</li> <li>AbstractTruchetInversion (Shadertoy ID 7ljXWt) ported by JiPi</li> <li>AbstractWaveThing (Shadertoy ID tttSW7) ported by JiPi</li> <li>AiNotIncluded (Shadertoy ID ctd3Rl) ported by JiPi</li> <li>AlexanderHornedSphereZoom (Shadertoy ID ttyGzW) ported by JiPi</li> <li>AlienSpaceJockey (Shadertoy ID mdB3Rh) ported by JiPi</li> <li>AlienTunnel (Shadertoy ID X3ySRc) ported by JiPi</li> <li>AndroidRuntime (Shadertoy ID DltBRM) ported by JiPi</li> <li>AudioFlightv2 (Shadertoy ID 7tfyRl) ported by JiPi</li> <li>Bomlka (Shadertoy ID mtXyD7) ported by JiPi</li> <li>ChainSpell (Shadertoy ID Ms2BRz) ported by JiPi</li> <li>ClearlyABug (Shadertoy ID 33cGDj) ported by JiPi</li> <li>ClubCave09 (Shadertoy ID ss3SD8) ported by JiPi</li> <li>CoastalLandscape (Shadertoy ID fstyD4) ported by JiPi</li> <li>ColorProcessing (Shadertoy ID 7tfBzs) ported by JiPi</li> <li>ControllableMachinery (Shadertoy ID fsXyDj) ported by JiPi</li> <li>CreationBySilexars (Shadertoy ID XsXXDn) ported by JiPi</li> <li>CubeWave3 (Shadertoy ID lcSGDD) ported by JiPi</li> <li>CubicDispersal (Shadertoy ID fldXWS) ported by JiPi</li> <li>D4DBeats (Shadertoy ID tfK3Dy) ported by JiPi</li> <li>DangerNoodle (Shadertoy ID wlVSDK) ported by JiPi</li> <li>Day94 (Shadertoy ID tdXcWM) ported by JiPi</li> <li>DecoratedChristmasSpiral (Shadertoy ID 3dVfDc) ported by JiPi</li> <li>Discoteq2 (Shadertoy ID DtXfDr) ported by JiPi</li> <li>DullSkull (Shadertoy ID DlyyWR) ported by JiPi</li> <li>ElectricEelUniverse (Shadertoy ID cdV3DW) ported by JiPi</li> <li>Energeticflyby (Shadertoy ID csjGDD) ported by JiPi</li> <li>ExitTheMatrix (Shadertoy ID NlsXDH) ported by JiPi</li> <li>ExtrudedBauhausTruchetPattern (Shadertoy ID dl2fzz) ported by JiPi</li> <li>EyeOfPhi (Shadertoy ID 7stfzB) ported by JiPi</li> <li>FidgetCube (Shadertoy ID M3sXDS) ported by JiPi</li> <li>FractalFlythrough (Shadertoy ID 4s3SRN) ported by JiPi</li> <li>FractalGliding (Shadertoy ID ftGGDR) ported by JiPi</li> <li>FrozenWasteland (Shadertoy ID Xls3D2) ported by JiPi</li> <li>FullSpectrumCyber (Shadertoy ID XcXXzS) ported by JiPi</li> <li>FuturisticTunnel (Shadertoy ID wdScRd) ported by JiPi</li> <li>GenerativeArtDeco4 (Shadertoy ID mds3DX) ported by JiPi</li> <li>GlassyWithOddRotation (Shadertoy ID 3XdXWX) ported by JiPi</li> <li>GreenFieldDiorama (Shadertoy ID 7dSGW1) ported by JiPi</li> <li>GroundCameraLightingHelix (Shadertoy ID Mt33W2) ported by JiPi</li> <li>HexAtYou (Shadertoy ID lflcR8) ported by JiPi</li> <li>Hexagold2 (Shadertoy ID sltSR2) ported by JiPi</li> <li>HexagonX5 (Shadertoy ID 4cVfWG) ported by JiPi</li> <li>HyperDough (Shadertoy ID 7tcGWB) ported by JiPi</li> <li>HyperbolicGroupLimitSet (Shadertoy ID NstSDs) ported by JiPi</li> <li>Infrastructure (Shadertoy ID ssBfz3) ported by JiPi</li> <li>InsideTheMandelbulbIi (Shadertoy ID mtScRc) ported by JiPi</li> <li>InsideTheTorus (Shadertoy ID XcS3zK) ported by JiPi</li> <li>JeweledVortex (Shadertoy ID fdjfDc) ported by JiPi</li> <li>JustAnotherCube (Shadertoy ID 3XdXRr) ported by JiPi</li> <li>LetSSelfReflect (Shadertoy ID XfyXRV) ported by JiPi</li> <li>Lover (Shadertoy ID fsjyR3) ported by JiPi</li> <li>MountainbytesPppp4KibWindows (Shadertoy ID lX2GzD) ported by JiPi</li> <li>NeonTunne (Shadertoy ID mtl3RB) ported by JiPi</li> <li>NestedOctahedrons2 (Shadertoy ID X3cXDj) ported by JiPi</li> <li>NeuralStanfordBunny5Kb (Shadertoy ID wtVyWK) ported by JiPi</li> <li>NightCircuit (Shadertoy ID tdyBR1) ported by JiPi</li> <li>NintendoSwitch (Shadertoy ID wtlXRH) ported by JiPi</li> <li>OMZGShaderRoyale (Shadertoy ID stXyWN) ported by JiPi</li> <li>OnTheSal (Shadertoy ID fsXcR8) ported by JiPi</li> <li>OrbitalMegastructure (Shadertoy ID WlKXzm) ported by JiPi</li> <li>PartyConcertVisuals2020 (Shadertoy ID WtscW4) ported by JiPi</li> <li>PigSquad (Shadertoy ID WdBcRh) ported by JiPi</li> <li>PlayingAroundShader (Shadertoy ID NdscDf) ported by JiPi</li> <li>RME4Crater (Shadertoy ID MlSBDt) ported by JiPi</li> <li>RecursiveDonut (Shadertoy ID tls3WB) ported by JiPi</li> <li>RetrovisionRevision2023 (Shadertoy ID DdVSzR) ported by JiPi</li> <li>RootSanctum (Shadertoy ID 3c2fz1) ported by JiPi</li> <li>RussianRouletteAudioViz (Shadertoy ID MfG3Ry) ported by JiPi</li> <li>SaturdayWeirdness (Shadertoy ID 43jXWt) ported by JiPi</li> <li>SegmentedSpiralWhirlpool (Shadertoy ID 4ctcRl) ported by JiPi</li> <li>SimpleRefractionTest (Shadertoy ID flcSW2) ported by JiPi</li> <li>SimpleSphereRaymarching (Shadertoy ID wdjSRc) ported by JiPi</li> <li>SimplexTruchetTubing (Shadertoy ID XsffWj) ported by JiPi</li> <li>Something227 (Shadertoy ID 3lyBDw) ported by JiPi</li> <li>SpaceAtHome (Shadertoy ID MXS3zy) ported by JiPi</li> <li>SpaceShip (Shadertoy ID NlsBzn) ported by JiPi</li> <li>SpiraledLayers (Shadertoy ID Ns3XWf) ported by JiPi</li> <li>StarGazingHippo (Shadertoy ID 4tGfz3) ported by JiPi</li> <li>Starfield (Shadertoy ID lcjGWV) ported by JiPi</li> <li>StarryPlanes (Shadertoy ID MfjyWK) ported by JiPi</li> <li>StarsAndGalaxy (Shadertoy ID stBcW1) ported by JiPi</li> <li>StellarClouds (Shadertoy ID DtdSz7) ported by JiPi</li> <li>StraightFlagstoneTiles (Shadertoy ID 7tKGRc) ported by JiPi</li> <li>TasteOfNoise7 (Shadertoy ID NddSWs) ported by JiPi</li> <li>Terraform (Shadertoy ID NsdXDs) ported by JiPi</li> <li>TiledGildedRainbowTunnel (Shadertoy ID tc2cWh) ported by JiPi</li> <li>TorusHive (Shadertoy ID NsdXzf) ported by JiPi</li> <li>TrailingTheTwinklingTunnel (Shadertoy ID WfcGWj) ported by JiPi</li> <li>TrippyTriangle (Shadertoy ID fslcDS) ported by JiPi</li> <li>TruchetKaleidoscopeFTW (Shadertoy ID 7lKSWW) ported by JiPi</li> <li>TunnelCable (Shadertoy ID MfVfz3) ported by JiPi</li> <li>TunnelOfLights (Shadertoy ID w3KGRK) ported by JiPi</li> <li>TwizzlyCircleMess (Shadertoy ID sltGRj) ported by JiPi</li> <li>UndulatingColumns (Shadertoy ID WlXXDH) ported by JiPi</li> <li>UndulatingUrchin (Shadertoy ID 332XWd) ported by JiPi</li> <li>UnstableUniverse (Shadertoy ID wtlfz8) ported by JiPi</li> <li>WednesdayMessingAround (Shadertoy ID NtcyDn) ported by JiPi</li> <li>WeirdTruchetNewKeyboard (Shadertoy ID 4ccfRn) ported by JiPi</li> <li>WhackAMolePistons (Shadertoy ID WtXcWB) ported by JiPi</li> <li>YearOfTruchets022 (Shadertoy ID dtGGWw) ported by JiPi</li> <li>Yee1212 (Shadertoy ID sldGRS) ported by JiPi</li> <li>ZippyZaps (Shadertoy ID XXyGzh) ported by JiPi</li> </ul>"},{"location":"Shaders/#simple-shaders","title":"Simple Shaders","text":"<ul> <li>Crazyness (Shadertoy ID wdjSRc) ported by nmbr73</li> <li>CrossDistance (Shadertoy ID XtGfzw) ported by nmbr73</li> <li>Quadtree3 (Shadertoy ID lljSDy) ported by nmbr73</li> <li>Rosace3C (Shadertoy ID Ms3SzB) ported by nmbr73</li> <li>ShatteredLight (Shadertoy ID stjSRV) ported by nmbr73</li> <li>StainedLights (Shadertoy ID WlsSzM) ported by nmbr73</li> <li>VideoFilters (Shadertoy ID XsX3z8) ported by nmbr73</li> </ul>"},{"location":"Shaders/#skulls-shaders","title":"Skulls Shaders","text":"<ul> <li>AlasPoorYorick (Shadertoy ID 3ddXR4) ported by JiPi</li> <li>DullSkull (Shadertoy ID DlyyWR) ported by JiPi</li> <li>DullSkullBrained (Shadertoy ID lXSBzV) ported by JiPi</li> <li>DullSkullBumped (Shadertoy ID 3cl3WB) ported by JiPi</li> <li>DullSkullPrologue (Shadertoy ID 4XsfDs) ported by JiPi</li> <li>DullSkullReflected (Shadertoy ID wcjGRW) ported by JiPi</li> <li>DullSpeedSkull (Shadertoy ID lcdcDH) ported by JiPi</li> <li>ForkDullSkullFrostbyte591 (Shadertoy ID 3XB3RW) ported by JiPi</li> <li>LostAstronaut (Shadertoy ID Mlfyz4) ported by JiPi</li> <li>Skully (Shadertoy ID 3tGSDz) ported by JiPi</li> <li>TheDarkMarkHp (Shadertoy ID ftS3zG) ported by JiPi</li> </ul>"},{"location":"Shaders/#text-shaders","title":"Text Shaders","text":"<ul> <li>Shadertext (Shadertoy ID 4s3XDn) ported by nmbr73</li> </ul>"},{"location":"Shaders/#tunnel-shaders","title":"Tunnel Shaders","text":"<ul> <li>BillboardTunnel (Shadertoy ID lf3fWf) ported by JiPi</li> <li>CrystalCave (Shadertoy ID wflGWj) ported by JiPi</li> <li>TNTHTW (Shadertoy ID XsKcDG) ported by JiPi</li> <li>Velocibox (Shadertoy ID lsdXD8) ported by nmbr73</li> <li>WindingMengerTunnel (Shadertoy ID 4scXzn) ported by JiPi</li> </ul>"},{"location":"Shaders/#wedding-shaders","title":"Wedding Shaders","text":"<ul> <li>HappyValentinesDay (Shadertoy ID XsVGzK) ported by JiPi</li> <li>HeartU2015 (Shadertoy ID lts3RX) ported by JiPi</li> <li>Heartdemo (Shadertoy ID wttXD7) ported by JiPi</li> <li>Nematomorpha (Shadertoy ID ltdfR7) ported by JiPi</li> <li>Valentwine (Shadertoy ID fsffW4) ported by JiPi</li> </ul>"},{"location":"Videos/","title":"Videos","text":"<p>Find here a list of example videos created using the Shaderfuses. Additionally we maintain a Shaderfuse Playlist where you can find all these videos (and more). Let us know if you've created some content with these fuses yourself and we'll be glad to add the link to your YouTube video here.</p> Shadertoyparadeby JiPi The Shader Cutby nmbr73 Shadertoy -Defileeby JiPi War of the Worldsby JiPi Mahnah Mahnahby JiPi Legoby JiPi Other Worldsby JiPi FiftyToysOfShadersby JiPi Reaction Diffusionby JiPi Fire &amp; Water Volume 2by JiPi Pinballgimmickby JiPi ABookOfShadertoysby JiPi How To Catch A Shaderfuse (deutsch)by JiPi How To Catch A Shaderfuseby JiPi Hexatranceby JiPi Holly Jolly Christmasby JiPi Fetch N Fuseby JiPi Peaceby JiPi Relaxtionby JiPi FallingSand !Native Rendering !by JiPi Dalmatiner Editionby JiPi Podracingby JiPi In Memoriamby JiPi Favorite Shadersby JiPi Weddingby JiPi Shaderfuse Displaysby JiPi Shaderfusesby JiPi"},{"location":"Abstract/","title":"Index","text":""},{"location":"Abstract/#abstract-shaders","title":"Abstract Shaders","text":""},{"location":"Abstract/#bumpyreflectingballs","title":"BumpyReflectingBalls","text":"<p>based on BumpyReflectingBalls written by metabogand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#dynamism","title":"Dynamism","text":"<p>based on Dynamism written by nimitzand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#favela","title":"Favela","text":"<p>based on Favela written by duvengarand ported to DaFusion by nmbr73</p>"},{"location":"Abstract/#flightthroughanebula","title":"FlightThroughANebula","text":"<p>based on Flight Through A Nebula V3 written by morgan3dand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#mosaic","title":"Mosaic","text":"<p>based on voronoi solid with borders written by Darksecondand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#noisecube","title":"Noisecube","text":"<p>based on Noisecube written by flimshawand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#otherworlds","title":"OtherWorlds","text":"<p>based on Shader 012 4.29.21 written by byt3_m3chanicand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#overstimulatedneurons","title":"OverstimulatedNeurons","text":"<p>based on Overstimulated Neurons written by Chaotnixand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#rainbowslices","title":"RainbowSlices","text":"<p>based on Rainbow Slices written by fizzerand ported to DaFusion by nmbr73</p>"},{"location":"Abstract/#rainbowspaghetti","title":"RainbowSpaghetti","text":"<p>based on rainbow spaghetti written by mattzand ported to DaFusion by nmbr73</p>"},{"location":"Abstract/#raysemigarbage","title":"Raysemigarbage","text":"<p>based on raysemigarbage#3 but hilly written by supastavand ported to DaFusion by JiPi</p>"},{"location":"Abstract/#virusattack","title":"VirusAttack","text":"<p>based on virus attack written by pband ported to DaFusion by JiPi</p>"},{"location":"Abstract/BumpyReflectingBalls/","title":"BumpyReflectingBalls","text":"<p>This Fuse is based on the Shadertoy 'BumpyReflectingBalls' by metabog. \u00a9 metabog (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>Flight through a colorful ball grid</p> <p></p> <p>The surface of the balls can be influenced by a texture, so you can achieve very nice flowing appearances. The grid can be enlarged, the color distribution can be changed and you can \"manually\" fly through the grid if you switch off the \"autopilot\" with the Stop button and use the three levers Rotation 1 to 3 :-)</p> <p>Have fun playing</p>"},{"location":"Abstract/Dynamism/","title":"Dynamism","text":"<p>This Fuse is based on the Shadertoy 'Dynamism' by nimitz. \u00a9 nimitz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>Accidentally came across this beautiful shader while browsing older WSL posts. At the time, it seemed too complicated to convert. With the current knowledge, however, it went quickly. The bokeh effect can be changed using the draw parameter, otherwise there are no parameters.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Abstract/Favela/","title":"Favela","text":"<p>This Fuse is based on the Shadertoy 'Favela' by duvengar. Favela by Julien Vergnaud @duvengar-2018 (CC BY-NC-SA 3.0 unported). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Abstract for more fuses in this category.</p> <p></p> <p>Now also runs under Cuda and OpenCL.</p> <p></p>"},{"location":"Abstract/FlightThroughANebula/","title":"FlightThroughANebula","text":"<p>This Fuse is based on the Shadertoy 'Flight Through A Nebula V3' by morgan3d. \u00a9 morgan3d (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>In the original, <code>Texelfetch()</code> and GreyNoise-Volumes are used. But even without this, this shader is successful.</p> <p></p> <p>Have fun playing</p>"},{"location":"Abstract/Mosaic/","title":"Mosaic","text":"<p>This Fuse is based on the Shadertoy 'voronoi solid with borders' by Darksecond. \u00a9 Darksecond (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>Mosaics have always fascinated me. I know there are very good standard tools out there that are probably better than this shader, but the conversion still appealed to me. In addition to the mosaic size and the joint width, the joint color can also be changed.</p> <p></p> <p></p> <p>Have fun playing</p>"},{"location":"Abstract/Noisecube/","title":"Noisecube","text":"<p>This Fuse is based on the Shadertoy 'Noisecube' by flimshaw. \u00a9 flimshaw (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>A flight through a Phongshader</p> <p></p> <p>There is a representative from Phong Shading. The parameters for the lighting are still missing, otherwise you can play with it quite well.</p> <p>Have fun playing</p> <p></p>"},{"location":"Abstract/OtherWorlds/","title":"OtherWorlds","text":"<p>This Fuse is based on the Shadertoy 'Shader 012 4.29.21' by byt3_m3chanic. \u00a9 byt3_m3chanic (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>Asteroids float weightlessly through space. Bright lights dance in the middle of the asteroid swarm. A fascinating shader that took some work. I have implemented excessive parameters here. In addition to the mandatory Center / Scale / Angle / Pivot / Frequency and Look parameters, here are:</p>"},{"location":"Abstract/OtherWorlds/#drift","title":"drift","text":"<p>The sinus movement of the camera can be adjusted in terms of stroke, offset and frequency</p>"},{"location":"Abstract/OtherWorlds/#glow","title":"Glow","text":"<p>In addition to the intensity, the frequency can be adjusted so that an underwater impression can be created because the angle of the light is changed. The color of the glow can be adjusted, there is also a parameter that sets the strength of the color (Glow Color).</p>"},{"location":"Abstract/OtherWorlds/#scene-frequency","title":"Scene frequency","text":"<p>This can be used to change the timing of the camera flight independently of the other timings. If you want to change the timing of all animations equally, there is the standard parameter \"Frequency\". Manual timing (Actime) is also possible with the \"stop\" checkbox.</p>"},{"location":"Abstract/OtherWorlds/#bumpmap","title":"Bumpmap","text":"<p>The texture in the Image1 input is used as height information for the surface of the asteroids. The depth can be adjusted with this parameter.</p>"},{"location":"Abstract/OtherWorlds/#asteroid-painting","title":"Asteroid painting","text":"<p>The shader provides a painting of the asteroides. An additional painting can be set with the \"Paint\" parameter which is not activ in the original, I found it very nice. The \"Paint Intense\" parameter refers to the standard painting, it can be set here. The paint color is also adjustable.</p>"},{"location":"Abstract/OtherWorlds/#surface-level","title":"Surface level","text":"<p>The surface level refers to the bright lights that can be changed with this.</p>"},{"location":"Abstract/OtherWorlds/#diffuse-reflect-specular-and-ambient","title":"Diffuse, Reflect, Specular and Ambient","text":"<p>speak for themselves.</p>"},{"location":"Abstract/OtherWorlds/#fog","title":"Fog","text":"<p>Unfortunately, this parameter is not very easy to set. Since the shader does not specifically treat the background, changing this value can cause an unintentional color gradient to appear in the background. The value should therefore be changed very carefully. Especially when it comes to the interaction with the background colors.</p>"},{"location":"Abstract/OtherWorlds/#background-colors","title":"Background colors","text":"<p>You can change the color of the upper and lower part separately.</p>"},{"location":"Abstract/OtherWorlds/#max-distance","title":"Max Distance","text":"<p>The standard setting in the original is 4. You can increase this value to 10 and thus get a significantly greater depth and accordingly more asteroids. It should be noted, however, that the Fog parameter must be carefully adjusted, otherwise the additional asteroids will all be in the fog. So careful testing is required here.</p>"},{"location":"Abstract/OtherWorlds/#please-note","title":"Please note","text":"<p>A collision avoidance, i.e. avoiding the camera flight through an object, is unfortunately missing here, so that it can happen that it briefly gets dark. However, the automatic camera flight has no collisions.</p> <p>Please note that the limits have not yet been adjusted, i.e. the slider does not give the really possible adjustment range. Please enter larger and smaller values \u200b\u200busing the keyboard.</p> <p>I hope you enjoy playing with this shader as much as I do.</p> <p></p> <p></p>"},{"location":"Abstract/OverstimulatedNeurons/","title":"OverstimulatedNeurons","text":"<p>This Fuse is based on the Shadertoy 'Overstimulated Neurons' by Chaotnix. \u00a9 Chaotnix (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>A nice variation of the \"Abstract Glassy Field\". The textures still have to be adapted, as they access the audio modules in the original.</p> <p></p> <p></p> <p>Have fun playing</p>"},{"location":"Abstract/RainbowSlices/","title":"RainbowSlices","text":"<p>This Fuse is based on the Shadertoy 'Rainbow Slices' by fizzer. \u00a9 fizzer (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Abstract for more fuses in this category.</p> <p></p> <p>This is a quick and dirty convesion that will definiely need some rework. But it turned out to be very easy to tranlate so far and as this version already runs on Metal I wanted to share the itermediate result.</p> <p></p>"},{"location":"Abstract/RainbowSpaghetti/","title":"RainbowSpaghetti","text":"<p>This Fuse is based on the Shadertoy 'rainbow spaghetti' by mattz. \u00a9 mattz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Abstract for more fuses in this category.</p> <p></p>"},{"location":"Abstract/Raysemigarbage/","title":"Raysemigarbage","text":"<p>This Fuse is based on the Shadertoy 'raysemigarbage#3 but hilly' by supastav. \u00a9 supastav (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p>A very small shader, but I found it very good for getting to know the basic principles. We have a raymarching function that can be set with the two parameters SampleCount &amp; density. We have the two three-dimensional parameters Direction &amp; Look (Camera) to set the view of the scene. The standard block scale, offset, angle and pivot relate to the scanning and are completely independent of raymarching. The shader shows a texture (Image1) on a surface that can be distorted in the X and Y directions (sinus/cosinus). A second texture can be loaded for the horizon (sky) (Image2). Due to the many parameters, you can now understand the mode of action very well. No garbage, just a cute little shader :-)</p> <p> </p> <p>Have fun playing</p>"},{"location":"Abstract/VirusAttack/","title":"VirusAttack","text":"<p>This Fuse is based on the Shadertoy 'virus attack' by pb. \u00a9 pb (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Abstract for more fuses in this category.</p> <p></p> <p></p> <p>This Fuse contains these two shaders: Virus Attack https://www.shadertoy.com/view/3fSSW1 Neuronal Voyage https://www.shadertoy.com/view/wfSXD1</p> <p>All shaders have the same basic structure.</p> <p>Enjoy playing</p> <p></p>"},{"location":"Abstract/VirusAttack/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>spike proteins - good target for vaccine - haha</p>"},{"location":"Abstract/VirusAttack/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Audio/","title":"Index","text":""},{"location":"Audio/#audio-shaders","title":"Audio Shaders","text":"[![InerciaIntended](https://user-images.githubusercontent.com/78935215/200139202-3c5b2c15-bd43-4998-84d6-a06820255d5d.gif)](Audio/Inerciaintended.md)  <p>Shaders that use audio data (wave and frequency) over an image for display. Shadertoy provides an interface consisting of an image (512*2 pixels). One line contains 512 sampled waveform values \u200b\u200bbelonging to the current frame and the second line contains the FFT (Spectrum) values. This interface can also be implemented in Resolve/Fusion. The AudioWaveform.fuse generates the corresponding image from a loaded WAV file. The AudioWaveform has a second output for this. This Output is connected to an AudioShaderfuse-Input.</p> <p></p>"},{"location":"Audio/#audioheightfield1","title":"AudioHeightfield1","text":"<p>based on Audio heightfield 1 written by huttarland ported to DaFusion by JiPi</p>"},{"location":"Audio/#audiowaveformvisualizer","title":"AudioWaveformVisualizer","text":"<p>based on Audio Waveform Visualizer v3 written by oneshadeand ported to DaFusion by JiPi</p>"},{"location":"Audio/#inerciaintended","title":"InerciaIntended","text":"<p>based on  20221105_inercia intended one written by 0b5vrand ported to DaFusion by JiPi</p>"},{"location":"Audio/#jamsession","title":"JamSession","text":"<p>based on Jam Session written by Passionand ported to DaFusion by JiPi</p>"},{"location":"Audio/#reactivevoronoi","title":"ReactiveVoronoi","text":"<p>based on Reactive Voronoi written by glk7and ported to DaFusion by JiPi</p>"},{"location":"Audio/#rlstyle","title":"Rlstyle","text":"<p>based on RLStyle Visualizer written by clintolibreand ported to DaFusion by JiPi</p>"},{"location":"Audio/#shadertoyaudiodisplay","title":"ShadertoyAudioDisplay","text":"<p>based on Shadertoy audio display written by saidwho12and ported to DaFusion by JiPi</p>"},{"location":"Audio/AudioHeightfield1/","title":"AudioHeightfield1","text":"<p>This Fuse is based on the Shadertoy 'Audio heightfield 1' by huttarl. \u00a9 huttarl (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Audio/AudioHeightfield1/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Audio/AudioWaveformVisualizer/","title":"AudioWaveformVisualizer","text":"<p>This Fuse is based on the Shadertoy 'Audio Waveform Visualizer v3' by oneshade. \u00a9 oneshade (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Audio/AudioWaveformVisualizer/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Audio/InerciaIntended/","title":"InerciaIntended","text":"<p>This Fuse is based on the Shadertoy ' 20221105_inercia intended one' by 0b5vr. \u00a9 0b5vr (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p>A cluttered control panel with moving knobs, flashing LEDs and level meters. FinalColor and SpecColor affect the entire shader. MTL0Color changes the knobs and dials MTL1Color changes the background of the level meter MTL2Color changes the LED's (LED/Sliders) MTL3Color changes all metal elements MTL4Color changes the graphics display MTL5Color changes the buttons SpecPower adjusts the Speculate effect With AnimationSpeed \u200b\u200bthe change of the two camera positions can be changed. The two camera positions, which are approached alternately, can be changed with Anim1 and Anim2, but this can result in constellations in which no image can be rendered. With SinusColorize, the fields can be assigned random colors. The level display can be changed with the Level Meter parameter so that a stereo display is also possible. The level display can be changed with activated \"ManualLineLevel\" with the LevelAudio. Otherwise, the Shadertoy audio (512X2Pixel Texture) is used and the AudioWaveform.fuse can be used on the iChannel0. The frequency to be used can be set (0.0 -&gt; bass, 1.0 -&gt; treble). A gain or offset is present. Wavfreq refers to the wave motion of the faceplate. A texture (iChannel1) can be displayed on the speakers. Either blended in or printed on, with the ability to adjust the alpha value. Something has to be tried here, since an increase in size due to the report means that \"only\" one logo fits.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Audio/InerciaIntended/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe5 Windows / OpenCL</p>"},{"location":"Audio/JamSession/","title":"JamSession","text":"<p>This Fuse is based on the Shadertoy 'Jam Session' by Passion. \u00a9 Passion (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Audio/JamSession/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Audio/ReactiveVoronoi/","title":"ReactiveVoronoi","text":"<p>This Fuse is based on the Shadertoy 'Reactive Voronoi' by glk7. \u00a9 glk7 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Audio/ReactiveVoronoi/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Audio/Rlstyle/","title":"Rlstyle","text":"<p>This Fuse is based on the Shadertoy 'RLStyle Visualizer' by clintolibre. \u00a9 clintolibre (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Audio/Rlstyle/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Audio/ShadertoyAudioDisplay/","title":"ShadertoyAudioDisplay","text":"<p>This Fuse is based on the Shadertoy 'Shadertoy audio display' by saidwho12. \u00a9 saidwho12 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Audio for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Audio/ShadertoyAudioDisplay/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Blob/","title":"Index","text":""},{"location":"Blob/#blob-shaders","title":"Blob Shaders","text":""},{"location":"Blob/#funwithmetaballs","title":"FunWithMetaballs","text":"<p>based on FunWithMetaballs written by fwilliamsand ported to DaFusion by JiPi</p>"},{"location":"Blob/#particlelifewithraymarching","title":"ParticleLifeWithRaymarching","text":"<p>based on Particle life with raymarching written by astrolorantand ported to DaFusion by JiPi</p>"},{"location":"Blob/#torturedblob","title":"TorturedBlob","text":"<p>based on TorturedBlob written by roywigand ported to DaFusion by JiPi</p>"},{"location":"Blob/#xraymarching","title":"XRaymarching","text":"<p>based on XRaymarching written by Aelessand ported to DaFusion by JiPi</p>"},{"location":"Blob/FunWithMetaballs/","title":"FunWithMetaballs","text":"<p>This Fuse is based on the Shadertoy 'FunWithMetaballs' by fwilliams. \u00a9 fwilliams (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Blob for more fuses in this category.</p> <p></p> <p>This Shader has four Blobs, three Lights, Ambientlight and Background. All colors can be changed, the size of the blobs and their fading, too. I hope enough opportunities to play.</p> <p></p> <p>Have fun</p> <p></p>"},{"location":"Blob/ParticleLifeWithRaymarching/","title":"ParticleLifeWithRaymarching","text":"<p>This Fuse is based on the Shadertoy 'Particle life with raymarching' by astrolorant. \u00a9 astrolorant (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Blob for more fuses in this category.</p> <p></p> <p></p> <p>Colorful blobs that come together and break apart. There are countless parameters.</p> <p>Have fun playing</p> <p></p>"},{"location":"Blob/ParticleLifeWithRaymarching/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Particle life shader in 3d but render with raymarching technique.</p>"},{"location":"Blob/ParticleLifeWithRaymarching/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Blob/TorturedBlob/","title":"TorturedBlob","text":"<p>This Fuse is based on the Shadertoy 'TorturedBlob' by roywig. \u00a9 roywig (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Blob for more fuses in this category.</p> <p></p> <p>A classic blob with a lot of deformations.</p> <p></p> <p>A nice example of the use of the mat3</p> <pre><code> //**** mat3 ****\n typedef struct\n  {\n  float3 r0, r1, r2;\n  } mat3;\n</code></pre> <p>Have fun</p>"},{"location":"Blob/XRaymarching/","title":"XRaymarching","text":"<p>This Fuse is based on the Shadertoy 'XRaymarching' by Aeless. \u00a9 Aeless (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Blob for more fuses in this category.</p> <p></p> <p>Two funny dancing blobs. Extensive parameters invite you to play.</p> <p></p> <p></p> <p>Have fun playing</p>"},{"location":"Christmas/","title":"Index","text":""},{"location":"Christmas/#christmas-shaders","title":"Christmas Shaders","text":""},{"location":"Christmas/#christmastreestar","title":"ChristmasTreeStar","text":"<p>based on Christmas Tree Star written by  TekFand ported to DaFusion by JiPi</p>"},{"location":"Christmas/ChristmasTreeStar/","title":"ChristmasTreeStar","text":"<p>This Fuse is based on the Shadertoy 'Christmas Tree Star' by  TekF. \u00a9  TekF (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Christmas for more fuses in this category.</p> <p></p> <p></p> <p>The difficulty here was to replace the cube buffer, which does not exist in DCTL, as best as possible. In addition, extensive structures are used here, which are in turn stored in arrays. The automatic camera movement can be switched off and controlled manually. The planet with the trees can be isolated (Background = 1 and Alpha 0 for ColorBKG). The Fun, CLONES and DANCE switches activate funny variants.</p> <p>Have fun playing</p> <p></p>"},{"location":"Christmas/ChristmasTreeStar/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Remix of my [url=https://www.shadertoy.com/view/wdfGzr]Baubles[/url] shader. Alternate versions: [url=https://www.shadertoy.com/view/3l3GRS]More trees![/url] [url=https://www.shadertoy.com/view/Wt33zS]Bokeh &amp; Fairy Lights[/url]</p>"},{"location":"Christmas/ChristmasTreeStar/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Cubemap/","title":"Index","text":""},{"location":"Cubemap/#cubemap-shaders","title":"Cubemap Shaders","text":"<p>These are shaders that require a cubemap as input. nmbr73 created a tool to provide a cubemap for the shader fuses.</p> <p></p>"},{"location":"Cubemap/#ballsaretouching","title":"BallsAreTouching","text":"<p>based on balls are touching written by w23and ported to DaFusion by JiPi</p>"},{"location":"Cubemap/#glassandbubble","title":"GlassAndBubble","text":"<p>based on Glass and Bubble written by TambakoJaguarand ported to DaFusion by JiPi</p>"},{"location":"Cubemap/#kisstracing","title":"KissTracing","text":"<p>based on KISS Tracing 001: Spheres&amp;Plane written by tsaari42and ported to DaFusion by JiPi</p>"},{"location":"Cubemap/#newtonpendulum","title":"NewtonPendulum","text":"<p>based on Newton Pendulum written by leestenand ported to DaFusion by JiPi</p>"},{"location":"Cubemap/#oceanelemental","title":"OceanElemental","text":"<p>based on OCEAN ELEMENTAL written by alroand ported to DaFusion by JiPi</p>"},{"location":"Cubemap/BallsAreTouching/","title":"BallsAreTouching","text":"<p>This Fuse is based on the Shadertoy 'balls are touching' by w23. \u00a9 w23 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Cubemap for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Cubemap/GlassAndBubble/","title":"GlassAndBubble","text":"<p>This Fuse is based on the Shadertoy 'Glass and Bubble' by TambakoJaguar. \u00a9 TambakoJaguar (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Cubemap for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Cubemap/KissTracing/","title":"KissTracing","text":"<p>This Fuse is based on the Shadertoy 'KISS Tracing 001: Spheres&amp;Plane' by tsaari42. \u00a9 tsaari42 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Cubemap for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Cubemap/KissTracing/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Cubemap/NewtonPendulum/","title":"NewtonPendulum","text":"<p>This Fuse is based on the Shadertoy 'Newton Pendulum' by leesten. \u00a9 leesten (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Cubemap for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Cubemap/OceanElemental/","title":"OceanElemental","text":"<p>This Fuse is based on the Shadertoy 'OCEAN ELEMENTAL' by alro. \u00a9 alro (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Cubemap for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Cubemap/OceanElemental/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Displays/","title":"Index","text":""},{"location":"Displays/#displays-shaders","title":"Displays Shaders","text":""},{"location":"Displays/#cellphone","title":"Cellphone","text":"<p>based on Cellphone written by EvilRyuand ported to DaFusion by JiPi</p>"},{"location":"Displays/#coffeeandtablet","title":"CoffeeAndTablet","text":"<p>based on Coffee and Tablet written by P_Malinand ported to DaFusion by JiPi</p>"},{"location":"Displays/#telephone","title":"Telephone","text":"<p>based on Telephone written by jvband ported to DaFusion by JiPi</p>"},{"location":"Displays/#vt220codingatnight","title":"Vt220Codingatnight","text":"<p>based on vt220CodingAtNight written by sprashand ported to DaFusion by JiPi</p>"},{"location":"Displays/Cellphone/","title":"Cellphone","text":"<p>This Fuse is based on the Shadertoy 'Cellphone' by EvilRyu. \u00a9 EvilRyu (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Displays for more fuses in this category.</p> <p></p> <p>Another screen. Here, too, the display can be rotated and moved and your own image/video can be shown on the display.</p>"},{"location":"Displays/Cellphone/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>It's my cellphone... but can't add more buttons on it because the shader starts to take too long to compile.</p> <p></p>"},{"location":"Displays/Cellphone/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Displays/CoffeeAndTablet/","title":"CoffeeAndTablet","text":"<p>This Fuse is based on the Shadertoy 'Coffee and Tablet' by P_Malin. \u00a9 P_Malin (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Displays for more fuses in this category.</p> <p></p> <p>A great shader, in which I have built in a lot of parameters. So the texture of the cup, the tablet and the bottom can be adjusted. The spotlight can change color and position. Reflection, fog, reflections, light and spotlights can be switched off. The position of the cup and tablet can be changed and finally the tablet can be rotated across all levels.</p> <p>Have fun</p> <p></p> <p></p>"},{"location":"Displays/CoffeeAndTablet/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Use the mouse to rotate. I wanted to combine some raymarching with interesting materials and lighting. Based on the textureless version here: http://glsl.heroku.com/e#6171.0</p>"},{"location":"Displays/CoffeeAndTablet/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Displays/Telephone/","title":"Telephone","text":"<p>This Fuse is based on the Shadertoy 'Telephone' by jvb. \u00a9 jvb (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Displays for more fuses in this category.</p> <p></p> <p>A spinning iPhone in a long hallway. The following settings can be switched on/off</p> <p>AA -&gt; AntiAliasing</p> <p>BD -&gt; barrel distortion</p> <p>CG -&gt; Color Grain</p> <p>PTAO -&gt; Ambient Occlusion</p> <p>Tex -&gt; Texture in Screen (iChannel0)</p> <p>Logo -&gt; instead of the apple your own picture ( iChannel1 )</p> <p>The other parameters are used to place the phone or the image on the display.</p>"},{"location":"Displays/Telephone/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Shiny telephone</p> <p></p>"},{"location":"Displays/Telephone/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Displays/Vt220Codingatnight/","title":"Vt220Codingatnight","text":"<p>This Fuse is based on the Shadertoy 'vt220CodingAtNight' by sprash. \u00a9 sprash (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Displays for more fuses in this category.</p> <p></p> <p>A look into the past. You'd think it was ages ago, but the VT220 was manufactured and sold from 1983 to 1987.</p>"},{"location":"Displays/Vt220Codingatnight/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Using original vt220 font (https://vt100.net/dec/vt220/glyphs). Use mouse to adjust screen curvature and position. The implementation of full vt100 terminal emulation in GLSL is left as an exercise for the reader.</p> <p></p>"},{"location":"Displays/Vt220Codingatnight/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Distortion/","title":"Index","text":""},{"location":"Distortion/#distortion-shaders","title":"Distortion Shaders","text":""},{"location":"Distortion/#displacementshader","title":"DisplacementShader","text":"<p>based on DisplacementShader written by Coolokand ported to DaFusion by JiPi</p>"},{"location":"Distortion/#fbmwarp","title":"FbmWarp","text":"<p>based on Fbm Warp written by hankerand ported to DaFusion by JiPi</p>"},{"location":"Distortion/#wovenelasticsimulation","title":"WovenElasticSimulation","text":"<p>based on Woven Elastic Simulation written by wyattand ported to DaFusion by JiPi</p>"},{"location":"Distortion/DisplacementShader/","title":"DisplacementShader","text":"<p>This Fuse is based on the Shadertoy 'DisplacementShader' by Coolok. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Distortion for more fuses in this category.</p> <p></p> <p>Nothing special, but still a very nice effect. Possibly also useful for transitions.</p> <p></p> <p>Have fun playing</p> <p></p>"},{"location":"Distortion/FbmWarp/","title":"FbmWarp","text":"<p>This Fuse is based on the Shadertoy 'Fbm Warp' by hanker. \u00a9 hanker (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Distortion for more fuses in this category.</p> <p></p> <p>This shader obviously takes advantage of a trick in WebGL that doesn't quite work that way in DCTL. A small adjustment made at least the principle function possible. If the result looks a little different, it is not worse.</p> <p></p> <p>Have fun playing</p>"},{"location":"Distortion/WovenElasticSimulation/","title":"WovenElasticSimulation","text":"<p>This Fuse is based on the Shadertoy 'Woven Elastic Simulation' by wyatt. \u00a9 wyatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Distortion for more fuses in this category.</p> <p></p> <p></p> <p>This fuse contains these three shaders: WovenElasticSimulation (https://www.shadertoy.com/view/3cSSRh) WovenElasticSimulation2 (https://www.shadertoy.com/view/WfSSzh) WovenElasticSimulation3 (https://www.shadertoy.com/view/3fBSR1) SeaHairs (https://www.shadertoy.com/view/tfBSzh)</p> <p>All shaders have the same basic structure. Switching between shaders creates new shapes. The shape can also be modified by creating a texture or changing the mouse parameters.</p> <p>Have fun playing</p> <p></p>"},{"location":"Distortion/WovenElasticSimulation/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>jfa</p>"},{"location":"Distortion/WovenElasticSimulation/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Fractals/","title":"Index","text":""},{"location":"Fractals/#fractals-shaders","title":"Fractals Shaders","text":""},{"location":"Fractals/#apollianwithatwist","title":"ApollianWithATwist","text":"<p>based on Apollian with a twist written by mrangeand ported to DaFusion by nmbr73</p>"},{"location":"Fractals/#energyplant","title":"EnergyPlant","text":"<p>based on EnergyPlant written by gazand ported to DaFusion by JiPi</p>"},{"location":"Fractals/#fractal03","title":"Fractal03","text":"<p>based on Fractal03 written by gazand ported to DaFusion by JiPi</p>"},{"location":"Fractals/#fractalengine","title":"FractalEngine","text":"<p>based on FractalEngine written by gazand ported to DaFusion by JiPi</p>"},{"location":"Fractals/#fractalgutter","title":"FractalGutter","text":"<p>based on FractalGutter written by gazand ported to DaFusion by JiPi</p>"},{"location":"Fractals/#fractalradiobase","title":"FractalRadioBase","text":"<p>based on FractalRadioBase written by gazand ported to DaFusion by JiPi</p>"},{"location":"Fractals/#kali3d","title":"Kali3D","text":"<p>based on Kali3D written by guiland ported to DaFusion by JiPi</p>"},{"location":"Fractals/#rendezvous","title":"Rendezvous","text":"<p>based on Rendezvous written by Dave_Hoskinsand ported to DaFusion by JiPi</p>"},{"location":"Fractals/ApollianWithATwist/","title":"ApollianWithATwist","text":"<p>This Fuse is based on the Shadertoy 'Apollian with a twist' by mrange. License CC0. Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Fractals for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Fractals/EnergyPlant/","title":"EnergyPlant","text":"<p>This Fuse is based on the Shadertoy 'EnergyPlant' by gaz. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>One of four very beautiful fractal shaders</p> <p> </p> <p>Have fun playing</p>"},{"location":"Fractals/Fractal03/","title":"Fractal03","text":"<p>This Fuse is based on the Shadertoy 'Fractal03' by gaz. \u00a9 gaz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>One of four very beautiful fractal shaders</p> <p> </p> <p>Have fun playing</p>"},{"location":"Fractals/FractalEngine/","title":"FractalEngine","text":"<p>This Fuse is based on the Shadertoy 'FractalEngine' by gaz. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>One of four very beautiful fractal shaders</p> <p> </p> <p>Have fun playing</p>"},{"location":"Fractals/FractalGutter/","title":"FractalGutter","text":"<p>This Fuse is based on the Shadertoy 'FractalGutter' by gaz. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>One of four very beautiful fractal shaders</p> <p> </p> <p>Have fun playing</p>"},{"location":"Fractals/FractalRadioBase/","title":"FractalRadioBase","text":"<p>This Fuse is based on the Shadertoy 'FractalRadioBase' by gaz. \u00a9 gaz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>An alien antenna hovers through the universe. So far only a few parameters are available. In the original, very nice details were added via BufferA, but this has been omitted here in the conversion.</p> <p> </p> <p>Have fun playing</p>"},{"location":"Fractals/Kali3D/","title":"Kali3D","text":"<p>This Fuse is based on the Shadertoy 'Kali3D' by guil. \u00a9 guil (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>A flight through an abstract universe - colorful and very changeable</p> <p> </p> <p>Programmed completely without matrices and very compact. Both shape and color are more likely to be left to chance than specifically changeable, but that also makes it exciting.</p> <p>Have fun playing</p>"},{"location":"Fractals/Rendezvous/","title":"Rendezvous","text":"<p>This Fuse is based on the Shadertoy 'Rendezvous' by Dave_Hoskins. \u00a9 Dave_Hoskins (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Fractals for more fuses in this category.</p> <p></p> <p>A flight through a colorful fractal landscape that breathes and seems to be alive. An impressively compact code for the definition of the landscape and you don't necessarily need matrices to program a great camera flight, as you can see.</p> <p></p> <p>Have fun</p> <pre><code>float Map( vec3 p )\n{\n    float scale = 1.0;\n    float add = sin(iTime)*.2+.1;\n\n    for( int i=0; i &lt; 9;i++ )\n    {\n        p = 2.0*clamp(p, -CSize, CSize) - p;\n        float r2 = dot(p,p);\n        float k = max((1.15)/r2, 1.);\n        p     *= k;\n        scale *= k;\n    }\n    float l = length(p.xy);\n    float rxy = l - 4.0;\n    float n = l * p.z;\n    rxy = max(rxy, -(n) / (length(p))-.07+sin(iTime*2.0+p.x+p.y+23.5*p.z)*.02);\n    float x = (1.+sin(iTime*2.));x =x*x*x*x*.5;\n    float h = dot(sin(p*.013),(cos(p.zxy*.191)))*x;\n    return ((rxy+h) / abs(scale));\n\n}\n</code></pre> <p></p>"},{"location":"Misc/","title":"Index","text":""},{"location":"Misc/#misc-shaders","title":"Misc Shaders","text":""},{"location":"Misc/#buoyantballs","title":"BuoyantBalls","text":"<p>based on BuoyantBalls written by dr2and ported to DaFusion by JiPi</p>"},{"location":"Misc/#fire_water","title":"Fire_Water","text":"<p>based on ComplementaryElements written by izutionixand ported to DaFusion by JiPi</p>"},{"location":"Misc/#fractalland","title":"FractalLand","text":"<p>based on Fractal Land written by Kaliand ported to DaFusion by nmbr73</p>"},{"location":"Misc/#iheartfourier","title":"IHeartFourier","text":"<p>based on IHeartFourier written by harry7557558and ported to DaFusion by JiPi</p>"},{"location":"Misc/#legofied","title":"Legofied","text":"<p>based on Legofied written by Gijsand ported to DaFusion by JiPi</p>"},{"location":"Misc/#littleboxes","title":"LittleBoxes","text":"<p>based on Little Boxes written by wyattand ported to DaFusion by JiPi</p>"},{"location":"Misc/#mountainslakes","title":"MountainsLakes","text":"<p>based on Mountains &amp; Lakes written by xjormaand ported to DaFusion by JiPi</p>"},{"location":"Misc/#seascape","title":"Seascape","text":"<p>based on Seascape written by TDMand ported to DaFusion by nmbr73</p>"},{"location":"Misc/#truepinballphysics","title":"TruePinballPhysics","text":"<p>based on True Pinball Physics written by archeeand ported to DaFusion by JiPi</p>"},{"location":"Misc/BuoyantBalls/","title":"BuoyantBalls","text":"<p>This Fuse is based on the Shadertoy 'BuoyantBalls' by dr2. \u00a9 2017 dr2 (CC BY-NC-SA 3.0 unported). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p>Balls that rise weightlessly in the water. There aren't too many parameters yet. In addition to the number of balls, the color of the scene, the background color and the color of the balls can be changed. During the conversion, the greatest effort was also here in resolving the global variables for OpenCL.</p> <p> </p> <p>Have fun playing</p>"},{"location":"Misc/Fire_Water/","title":"Fire_Water","text":"<p>This Fuse is based on the Shadertoy 'ComplementaryElements' by izutionix. \u00a9 izutionix (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p>Two tailed comets \"Fire\" and \"Water\" circle around each other</p> <p></p> <p>This fuse actually contains two shadertoys (in addition to the specified one: https://www.shadertoy.com/view/3sfBzM) There are extensive parameters available. This fuse is also generated by a recursively called DCTL code. This means that the result cannot be reproduced in the event of an interruption and should be generated with a Saver or SavetoDisk (and Lock). In addition, it must be ensured that the color resolution should be at least float16, otherwise gray fog will result. Due to the recursive call, the picture is changed when parameters are adjusted, even in Stop, but since the frame number does not change, the result is incorrect. This must be taken into account with all recursive shaders. When switching on the manual mode, the CrosshairControl of the center is hidden in order not to disturb the CrosshairControl of the manual position, but it can also be switched on if necessary (OnScreenWidgets). The parameters invite you to play.</p> <p>Here is a little study of this fuse: https://www.youtube.com/watch?v=4R7ZVMyKLnY</p> <p>Have fun</p>"},{"location":"Misc/FractalLand/","title":"FractalLand","text":"<p>This Fuse is based on the Shadertoy 'Fractal Land' by Kali. \u00a9 Kali (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Misc for more fuses in this category.</p> <p></p> <p>In the meantime this Fuse's output is pretty close to the original Shader and it also runs on Win/Mac, Metal/OpenCL/Cuda now.</p> <p></p> <p>Still some work left to be done: - investigate if and how to really substitute <code>texture</code> and <code>textureLod</code> function calls - add parameters for <code>WAVE</code>, other aspects already outlined in the original shader code, and maybe for some color adjustments - get this :cat: into the Fuse</p>"},{"location":"Misc/IHeartFourier/","title":"IHeartFourier","text":"<p>This Fuse is based on the Shadertoy 'IHeartFourier' by harry7557558. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p>An interesting Fourier series of 18 points results in a curved line. Here a hurdle had to be overcome in the parameter transfer of arrays. I initially had a solution, but it only worked for one graphics system at a time. Nmbr73 had the solution here, simple but perfect.</p> <pre><code>    float2 a[10], b[10];  // 10 = int(18 / 2) + 1\n\n//  #if (defined(DEVICE_IS_OPENCL))\n//      init(&amp;a,&amp;b,params);\n//    #else\n//      init(&amp;a[10],&amp;b[10],params);\n//  #endif\n\n  init(a,b,params);\n</code></pre> <p></p> <p>Original:</p> <p></p> <p>Counterfeit:</p> <p></p> <p>Have fun playing</p>"},{"location":"Misc/Legofied/","title":"Legofied","text":"<p>This Fuse is based on the Shadertoy 'Legofied' by Gijs. \u00a9 Gijs (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p>Here is a very simple and still very nice shader.</p> <p></p> <p>Have fun playing</p>"},{"location":"Misc/LittleBoxes/","title":"LittleBoxes","text":"<p>This Fuse is based on the Shadertoy 'Little Boxes' by wyatt. \u00a9 wyatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p></p> <p>Bouncing colorful cubes that can be thrown with the mouse. The number and size, as well as the forces acting on the cubes (F1-F4) can be changed. Textures can be applied to four cubes and the background can be made transparent (Alpha)</p> <p>Have fun playing</p> <p></p>"},{"location":"Misc/LittleBoxes/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Misc/MountainsLakes/","title":"MountainsLakes","text":"<p>This Fuse is based on the Shadertoy 'Mountains &amp; Lakes' by xjorma. \u00a9 xjorma (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p>With this shader I started the conversion some time ago without success. I stumbled across this again while searching and this time it wasn't a problem. An uninitialized variable slowed me down a bit, but now this awesome shader is available as a fuse.</p> <p>In addition to the main colors \"Cliff\", \"Snow\" and Background (this also determines the alpha), the background colors can be changed. The antialiasing values can be changed from 1 (off) to 4. And there are still a number of parameters with which the behavior can be influenced.</p> <p>I hope you enjoy it.</p> <p></p> <p></p>"},{"location":"Misc/Seascape/","title":"Seascape","text":"<p>This Fuse is based on the Shadertoy 'Seascape' by TDM. Alexander Alekseev 2014 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Misc for more fuses in this category.</p> <p></p> <p></p> <p>Still some work left to be done: - OpenCL crashes without any information - maybe the Windows error messages will be more helpful - Add a checkbox to enable/disable AA - Parameter for the original Mouse X</p>"},{"location":"Misc/TruePinballPhysics/","title":"TruePinballPhysics","text":"<p>This Fuse is based on the Shadertoy 'True Pinball Physics' by archee. \u00a9 archee (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Misc for more fuses in this category.</p> <p></p> <p>Something completely different than the usual blob / tunnel / fractal / object shader. A falling hopping ball bounces from line to line. I laid a big egg on the first try (sorry for the phrase). Due to this error, the shader completely refused to work. It took a while to isolate the error. But it is finally done. I have implemented all possible parameters in the fuse here. The colors, line and ball strength, gravity, the repetition time, motionblur and the bounceratio are adjustable. And of course the six lines can be changed. There are two points, a start and an end point. The parameters are almost all free, i.e. you can also make nonsensical settings, these will not be intercepted. In a pinch there is a \"reset\" button for the parameters.</p> <p>Have fun playing</p> <p>Oh, in addition to the adjustable repetition time, there is also the restriction to 50 bounces for the length of a run. But that could be changed quickly.</p> <p> </p>"},{"location":"Object/","title":"Index","text":""},{"location":"Object/#object-shaders","title":"Object Shaders","text":""},{"location":"Object/#dancytreedoodle","title":"DancyTreeDoodle","text":"<p>based on DancyTreeDoodle written by wyattand ported to DaFusion by JiPi</p>"},{"location":"Object/#dancytreedoodle3d","title":"DancyTreeDoodle3D","text":"<p>based on DancyTreeDoodle3D written by wyattand ported to DaFusion by JiPi</p>"},{"location":"Object/#egghunt","title":"EggHunt","text":"<p>based on EggHunt written by sylvain69780and ported to DaFusion by JiPi</p>"},{"location":"Object/#endlessscrewscrollgenuary28","title":"EndlessScrewScrollGenuary28","text":"<p>based on endless screw scroll genuary28 written by flockarooand ported to DaFusion by JiPi</p>"},{"location":"Object/#hw3swing","title":"HW3Swing","text":"<p>based on HW3Swing written by ChloeSnyderand ported to DaFusion by JiPi</p>"},{"location":"Object/#happybouncing","title":"HappyBouncing","text":"<p>based on happy bouncing written by leonand ported to DaFusion by JiPi</p>"},{"location":"Object/#heavenandhell","title":"HeavenAndHell","text":"<p>based on HeavenAndHell written by adurdinand ported to DaFusion by JiPi</p>"},{"location":"Object/#jugglerretroballobjects","title":"JugglerRetroBallObjects","text":"<p>based on Juggler (Retro Ball Objects) written by misol101and ported to DaFusion by JiPi</p>"},{"location":"Object/#laji","title":"LaJi","text":"<p>based on La Ji written by SL0ANEand ported to DaFusion by JiPi</p>"},{"location":"Object/#legos","title":"Legos","text":"<p>based on Legos written by morgan3dand ported to DaFusion by JiPi</p>"},{"location":"Object/#lonelyvoxel","title":"LonelyVoxel","text":"<p>based on LonelyVoxel written by SudoNhimand ported to DaFusion by JiPi</p>"},{"location":"Object/#oblivion","title":"Oblivion","text":"<p>based on Oblivion written by Dave_Hoskinsand ported to DaFusion by JiPi</p>"},{"location":"Object/#polyhedralgears","title":"PolyhedralGears","text":"<p>based on Polyhedral Gears written by Shaneand ported to DaFusion by JiPi</p>"},{"location":"Object/#proceduralwalkanimation","title":"ProceduralWalkAnimation","text":"<p>based on ProceduralWalkAnimation written by TLC123and ported to DaFusion by JiPi</p>"},{"location":"Object/#sharex","title":"ShareX","text":"<p>based on ShareX written by fre3kand ported to DaFusion by JiPi</p>"},{"location":"Object/#walkingcubes","title":"WalkingCubes","text":"<p>based on WalkingCubes written by xorxorand ported to DaFusion by JiPi</p>"},{"location":"Object/DancyTreeDoodle/","title":"DancyTreeDoodle","text":"<p>This Fuse is based on the Shadertoy 'DancyTreeDoodle' by wyatt. \u00a9 wyatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>This is also a quick and dirty conversion for a little AudioWaveform Video.</p> <p></p>"},{"location":"Object/DancyTreeDoodle3D/","title":"DancyTreeDoodle3D","text":"<p>This Fuse is based on the Shadertoy 'DancyTreeDoodle3D' by wyatt. \u00a9 wyatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>There are no parameters for this fuse. Only the port is available.</p> <p></p>"},{"location":"Object/EggHunt/","title":"EggHunt","text":"<p>This Fuse is based on the Shadertoy 'EggHunt' by sylvain69780. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>A little Easter greeting just in time for Easter</p> <p> </p> <p>Have fun playing</p>"},{"location":"Object/EndlessScrewScrollGenuary28/","title":"EndlessScrewScrollGenuary28","text":"<p>This Fuse is based on the Shadertoy 'endless screw scroll genuary28' by flockaroo. \u00a9 flockaroo (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"Object/EndlessScrewScrollGenuary28/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>screw scroll - genuary28 - genuary2025</p>"},{"location":"Object/EndlessScrewScrollGenuary28/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Object/HW3Swing/","title":"HW3Swing","text":"<p>This Fuse is based on the Shadertoy 'HW3Swing' by ChloeSnyder. \u00a9 ChloeSnyder (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>I love these Wannerstedt videos and here I found one in the Shadertoy. The challenge was to resolve the global variables. It is also a nice example of using mat4.</p> <pre><code>// **** mat4 ****\ntypedef struct\n  {\n  float4 r0, r1, r2, r3;\n  } mat4;\n\n\n__DEVICE__ inline mat4 make_mat4 (float4 A, float4 B,\n                                  float4 C, float4 D)\n  {\n  mat4 _ret;\n  _ret.r0 = A;\n  _ret.r1 = B;\n  _ret.r2 = C;\n  _ret.r3 = D;\n  return _ret;\n  }\n\n__DEVICE__ inline float4 mat4_multi_f4 (mat4 B, float4 A) {\n  float4 C;\n  C.x = A.x * B.r0.x + A.y * B.r1.x + A.z * B.r2.x + A.w * B.r3.x;\n  C.y = A.x * B.r0.y + A.y * B.r1.y + A.z * B.r2.y + A.w * B.r3.y;\n  C.z = A.x * B.r0.z + A.y * B.r1.z + A.z * B.r2.z + A.w * B.r3.z;\n  C.w = A.x * B.r0.w + A.y * B.r1.w + A.z * B.r2.w + A.w * B.r3.w;\n  return C;\n  }\n</code></pre> <p></p>"},{"location":"Object/HappyBouncing/","title":"HappyBouncing","text":"<p>This Fuse is based on the Shadertoy 'happy bouncing' by leon. \u00a9 leon (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>A new conversion method is used here. nmbr73 has developed a Python script and an incubator fuse, which enables shaders to be converted much more effectively and conveniently. It's still in the middle of development, but it's already very powerful. A total of 3 shader toys are combined in this shader fuse:</p> <ul> <li>HappyBouncing            https://www.shadertoy.com/view/flyXRh Created by leon on 2021-12-21</li> <li>HappyBouncingVariations1 https://www.shadertoy.com/view/ftGXR1 Created by leon on 2021-12-22</li> <li>HappyBouncingVariations2 https://www.shadertoy.com/view/NlGXR1 Created by leon on 2021-12-22</li> </ul> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Object/HeavenAndHell/","title":"HeavenAndHell","text":"<p>This Fuse is based on the Shadertoy 'HeavenAndHell' by adurdin. \u00a9 adurdin (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>The motif of the angel and devil was processed here in a shader. An elaborate fun shader with an anniversary, the fiftieth shader in our github ( Milestone: \"fifty toys of shader\" ). In the fuse, the camera pan in the X direction, which has already been prepared in the shader, has been added as a parameter. In the original there is a blue discoloration of the figure's upper body. This has been \"adapted\". There is also the option of changing the terrain by adding textures. Image1 is intended for the \"happy\" terrain and Image2 for the \"evil\" terrain. Unfortunately, the color values don't match that well, but if you play with them, you can get good results.</p> <p>Have fun</p> <p></p> <p></p>"},{"location":"Object/JugglerRetroBallObjects/","title":"JugglerRetroBallObjects","text":"<p>This Fuse is based on the Shadertoy 'Juggler (Retro Ball Objects)' by misol101. \u00a9 misol101 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"Object/JugglerRetroBallObjects/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Popular in the old Amiga days in demos such as System Violation by Anarchy.</p>"},{"location":"Object/JugglerRetroBallObjects/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Object/LaJi/","title":"LaJi","text":"<p>This Fuse is based on the Shadertoy 'La Ji' by SL0ANE. \u00a9 SL0ANE (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"Object/LaJi/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Object/Legos/","title":"Legos","text":"<p>This Fuse is based on the Shadertoy 'Legos' by morgan3d. \u00a9 morgan3d (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>Intense childhood memories come up. A great toy. The fuse still has very few parameters.</p> <p> </p> <p>Have fun playing</p>"},{"location":"Object/LonelyVoxel/","title":"LonelyVoxel","text":"<p>This Fuse is based on the Shadertoy 'LonelyVoxel' by SudoNhim. \u00a9 SudoNhim (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>A cube with rounded corners and a very nice bump map.</p> <p></p> <p>He is still lonely the voxel. But underlaid with some music in a little intro and you have a sociable composition. A possible extension would be to provide the six sides with different textures. The animation of the texture relative to the movement of the cube is particularly effective.</p> <p>Have fun playing</p> <p>One way of including a gif anim ...</p> <p></p> <p>... and the other way ...</p> <p></p> <p>... we'll have to see what's the advantage of one variant over the other?!?</p>"},{"location":"Object/Oblivion/","title":"Oblivion","text":"<p>This Fuse is based on the Shadertoy 'Oblivion' by Dave_Hoskins. \u00a9 Dave_Hoskins (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>The drone from the science fiction film Oblivion. There are 5 scenes available that can be played back individually. With the Image1, the drone's red eye can be brought to life. With Image2 the floor can be changed, with Image3 the floor and the reflective surface of the drone and with Image 4 the sky.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Object/PolyhedralGears/","title":"PolyhedralGears","text":"<p>This Fuse is based on the Shadertoy 'Polyhedral Gears' by Shane. \u00a9 Shane (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>Interlocked animated gears mapped onto the surface of a sphere via a polyhedral Goldberg arrangement.</p> <p></p> <p>A challenging shader for conversion. With the Color_scheme 0 setting, all colors can be set manually. Color_scheme 1 and 2 are the default ones. Diffusion, specular and brightness can be changed with the level parameters. The ball can be rotated manually using the mouse parameters.</p> <p></p>"},{"location":"Object/ProceduralWalkAnimation/","title":"ProceduralWalkAnimation","text":"<p>This Fuse is based on the Shadertoy 'ProceduralWalkAnimation' by TLC123. \u00a9 TLC123 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>A figure runs after his head on uneven terrain. The very good animation made this a very interesting shader. This function does this.</p> <pre><code> vec3 timefly(float t) {\n    // main path Called from many places\n    t*=.80;\n    t += (.125 + sin(t * .125));\n    vec3 v =\n    vec3(sin(t / 50.) * 20., 0., cos(t / 25.) * 24.) +\n        vec3(sin(t / 17.1) * 07., 0., cos(t / 17.1) * 05.) +\n        vec3(sin(t / 8.1) * 6., 0., cos(t / 8.1) * 8.) +\n        vec3(cos(t / 3.) * 3.,0., sin(t / 3.) * 2.)\n        +vec3(cos(t  )*2.,0., sin(t  )*2. );\n    v.y=pathterrain(v.x,v.z);\n    return v        ;\n}\n</code></pre> <p>In the original, the texture is fixed. In the fuse you can choose between a changeable color or a texture connected via Image1 and Image2, this can then be adjusted using an offset and scale. A head is already provided in the right place in the shader. This can be selected using the checkboxes. With this shader, the replacement function for fwidth works very well. In the end, it was hard work to get this shader to work under OpenCL. Since all parts of the figure were defined as global variables, a structure had to be built that had to be looped through almost all functions. After loading the fuse, it takes a short moment for the code to be compiled in the graphics card, after which the playback is almost in real time.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Object/ShareX/","title":"ShareX","text":"<p>This Fuse is based on the Shadertoy 'ShareX' by fre3k. \u00a9 fre3k (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>So much shader in so little code - really amazing.</p> <pre><code>    //Functionality.......\n    float t;\n    t = itime * 0.91f;\n    float2 r = iResolution,\n    o = fragCoord - r/2.0f;\n    o = make_float2(length(o) / r.y - 0.3f, _atan2f(o.y,o.x));\n    float4 s = 0.08f*cos_f4(1.5f*make_float4(0,1,2,3) + t + o.y + _sinf(o.y) * _cosf(t)),\n    e = swiyzwx(s),\n    f = _fmaxf(o.x-s,e-o.x);\n    fragColor = dot(clamp(f*r.y,0.0f,1.0f), 72.0f*(s-e)) * (s-0.1f) + f;\n\n    if (params-&gt;Alpha_Apply) fragColor.w = params-&gt;Alpha;\n\n    _tex2DVec4Write(dst, x, y, fragColor);\n\n</code></pre> <p>Have fun</p> <p></p>"},{"location":"Object/WalkingCubes/","title":"WalkingCubes","text":"<p>This Fuse is based on the Shadertoy 'WalkingCubes' by xorxor. CC BY-NC-SA 4.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Object for more fuses in this category.</p> <p></p> <p>Four colored boxes run over an inclined surface. The floor can be replaced by a texture, otherwise the parameters are still missing. A very interesting application of the mat3. One for the rotations of the boxes and the other for calculating the visual axis. As a result, both initializations of mat3 were necessary and the block with the overloaded make_mat3 functions were used.</p> <pre><code>#if defined(DEVICE_IS_OPENCL)\n __DEVICE__  __OVERLOADABLE__ mat3 make_mat3( float3 A, float3 B, float3 C)\n  {\n  mat3 D;\n  D.r0 = A;\n  D.r1 = B;\n  D.r2 = C;\n  return D;\n  }\n\n__DEVICE__  __OVERLOADABLE__ mat3 make_mat3( float A1, float B1, float C1, float A2, float B2, float C2, float A3, float B3, float C3 )\n  {\n  mat3 D;\n  D.r0 = to_float3(A1,B1,C1);\n  D.r1 = to_float3(A2,B2,C2);\n  D.r2 = to_float3(A3,B3,C3);\n  return D;\n  }\n#else\ninline __host__ __device__ mat3 make_mat3( float3 A, float3 B, float3 C)\n  {\n  mat3 D;\n  D.r0 = A;\n  D.r1 = B;\n  D.r2 = C;\n  return D;\n  }\n\ninline __host__ __device__ mat3 make_mat3( float A1, float B1, float C1, float A2, float B2, float C2, float A3, float B3, float C3 )\n  {\n  mat3 D;\n  D.r0 = to_float3(A1,B1,C1);\n  D.r1 = to_float3(A2,B2,C2);\n  D.r2 = to_float3(A3,B3,C3);\n  return D;\n  }\n#endif\n</code></pre> <p> </p> <p>Have fun playing</p>"},{"location":"Planet/","title":"Index","text":""},{"location":"Planet/#planet-shaders","title":"Planet Shaders","text":"<p>Planet shaders are shaders that generally render planets. The following tasks should be mentioned: surface texture, moving atmosphere, the use of bump maps or displacement for the surface texture. Rotations and movements in relation to the background or additional planets or suns and their throwing of light or shadow represent further challenges. The boundary between some blobs and planets is fluid.</p>"},{"location":"Planet/#crackercars","title":"CrackerCars","text":"<p>based on CrackerCars written by zackpudiland ported to DaFusion by JiPi</p>"},{"location":"Planet/#earf","title":"EARF","text":"<p>based on EARF written by zackpudiland ported to DaFusion by JiPi</p>"},{"location":"Planet/#fake3dscene","title":"Fake3DScene","text":"<p>based on Fake3DScene written by LaBodilsenand ported to DaFusion by JiPi</p>"},{"location":"Planet/#mightymorphingpowersphere","title":"MightyMorphingPowerSphere","text":"<p>based on MightyMorphingPowerSphere written by Lallisand ported to DaFusion by JiPi</p>"},{"location":"Planet/#raycastsphere","title":"RayCastSphere","text":"<p>based on RayCastSphere written by diroruand ported to DaFusion by JiPi</p>"},{"location":"Planet/#wildkifs4d","title":"WildKifs4D","text":"<p>based on WildKifs4D written by iapafotoand ported to DaFusion by JiPi</p>"},{"location":"Planet/CrackerCars/","title":"CrackerCars","text":"<p>This Fuse is based on the Shadertoy 'CrackerCars' by zackpudil. \u00a9 zackpudil (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Planet for more fuses in this category.</p> <p></p> <p>Cute little racing cars roar around on small planets. All colors are changeable</p> <p></p> <p>A solution has been found for the tiresome multi-dimensional variable conversion. nmbr73 has defined cute defines ;-) And OpenCL can have overloaded functions</p> <pre><code>  #define swixy(V) to_float2((V).x,(V).y)\n  #define swixx(V) to_float2((V).x,(V).x)\n  #define swiyx(V) to_float2((V).y,(V).x)\n  #define swiyy(V) to_float2((V).y,(V).y)\n</code></pre> <p>Have fun</p> <p></p>"},{"location":"Planet/EARF/","title":"EARF","text":"<p>This Fuse is based on the Shadertoy 'EARF' by zackpudil. \u00a9 zackpudil (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Planet for more fuses in this category.</p> <p></p> <p>.A small cartoony planet with land, water, clouds and a moon. The sun is shining and you can paint everything in a different color.</p> <p></p> <p>Have fun</p>"},{"location":"Planet/Fake3DScene/","title":"Fake3DScene","text":"<p>This Fuse is based on the Shadertoy 'Fake3DScene' by LaBodilsen. \u00a9 LaBodilsen (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Planet for more fuses in this category.</p> <p></p> <p>A little Shader for occasionally.</p> <p></p> <p>To use this Fuse you need two images as an input, one for the Ball (Image) and one for the Ground (Ground).</p> <p>In addition to the standard parameters such as Center, Scale, Angle and Frequency, you have the option of adjusting the floor and ball displacement and their speed. With two parameters it is possible to change the lighting of the ball.</p> <p>This is a nice shader to explore the use of a 2 dimensional matrix. With the help of this block, the lack of mat2 in DCTL can be canceled:</p> <pre><code>//-------- mat2 ---------\n typedef struct\n  {\n      float2 r0, r1;\n  } mat2;\n\n __DEVICE__ inline mat2 make_mat2_2( float A, float B, float C, float D)\n  {\n      mat2 E;\n      E.r0 = to_float2(A,B);\n      E.r1 = to_float2(C,D);\n      return E;\n  }\n\n __DEVICE__ inline float2 f2_multi_mat2( float2 A, mat2 B)\n  {\n      float2 C;\n      C.x = A.x * B.r0.x + A.y * B.r0.y;\n      C.y = A.x * B.r1.x + A.y * B.r1.y;\n      return C;\n  }\n</code></pre> <p>Have fun</p>"},{"location":"Planet/MightyMorphingPowerSphere/","title":"MightyMorphingPowerSphere","text":"<p>This Fuse is based on the Shadertoy 'MightyMorphingPowerSphere' by Lallis. \u00a9 Lallis (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Planet for more fuses in this category.</p> <p></p> <p>The suggestion for this shader came from the WSL forum. After a first look, the conversion seemed to be done quickly and the first fragment shader version was done quickly. However, the appearance did not exactly match the original. The use of a noise color texture always results in changes, since the original image is not available and the dimensions and resolutions vary. But it was noticeable when the fuse was being built. This difference is so serious that it could no longer be explained with the noise color texture. So we went looking. Finally, there was an interesting line of code:</p> <pre><code>col = mix (vec3 (0.05), keepo, clamp (0.0,1.0, smoothstep (1.0,0.0,2.0-length (rp))));\n</code></pre> <p>Here it was not mixed between a dark color and \"keepo\" using smoothstep, as intended, but the \"keepo\" was constantly faded in. The explanation for this was ultimately that WebGL and how we then tested OpenCL and metal optimized the clamp used. Cuda, on the other hand, did not do this and so the value was clamped to zero. The clamp function expects the value to be limited as the first parameter, here however zero. Due to the smooth step function, which in turn limits the value, the faulty clamp was eliminated. But the smoothstep is not used correctly either, because in this case the result is actually not defined. Here, however, all the systems behave in a compliant manner, so that the original appearance is achieved. With this fuse it is possible to try both variants. These can be adjusted by parameterizing the thresholds. The scaling of the texture can be changed in all parameters. If no noise color texture is connected, a color can be specified. The background can be switched to be transparent. And the two prepared features in the shader (inversion and phong) can be activated.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Planet/RayCastSphere/","title":"RayCastSphere","text":"<p>This Fuse is based on the Shadertoy 'RayCastSphere' by diroru. \u00a9 diroru (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Planet for more fuses in this category.</p> <p></p> <p>A good example of displacement.</p> <p></p> <p>To use this Fuse you need two images as an input, one for Surface texture (Image) and one for the displacement (depth).</p> <p>There are no parameters yet except for the background color.</p> <p>An interesting realization of the displacement</p> <pre><code>float displacement = texture(iChannel1, latlon).r*100.0;\n        if (d &lt;= sphereRadius + displacement &amp;&amp; d &gt; 0.0) {\n\n            fragColor = texture(iChannel0, latlon).xxxx;\n\n            break;\n        }\n</code></pre> <p>Have fun</p>"},{"location":"Planet/WildKifs4D/","title":"WildKifs4D","text":"<p>This Fuse is based on the Shadertoy 'WildKifs4D' by iapafoto. \u00a9 iapafoto (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Planet for more fuses in this category.</p> <p></p> <p>A very changing lump with great surface effects</p> <p></p> <p>In the original, a very interesting possibility has been created to make the appearance appear more realistic. This is achieved by calculating and merging the entire shader four more times with shifted parameters. Another kernel would be necessary for this. Since this is very performance-intensive, it was omitted here. He already looks very good :-)</p> <p>Have fun</p>"},{"location":"Profiles/","title":"Profiles","text":""},{"location":"Profiles/#maintainers","title":"Maintainers","text":"<ul> <li>JiPi</li> <li>nmbr73</li> </ul>"},{"location":"Profiles/#main-contributors","title":"Main Contributors","text":"<p>People who contributed actual Fuses are listed here. See GitHub history and website for all contributors of fixes, additions, etc.</p> <p>... oh so empty here :-( ... you should change this! ;-)</p>"},{"location":"Profiles/JiPi/","title":"JiPi","text":"<p>This is JiPi ...</p> <p>... find me on GitHub, YouTube, WSL, etc.</p>"},{"location":"Profiles/nmbr73/","title":"Nmbr73","text":"<p>Hi, it's /me nmbr73 ...</p>"},{"location":"Recursive/","title":"Index","text":""},{"location":"Recursive/#recursive-shaders","title":"Recursive Shaders","text":""},{"location":"Recursive/#anisotropicblurimage","title":"AnisotropicBlurImage","text":"<p>based on Anisotropic Blur Image Warp written by cornusammonisand ported to DaFusion by JiPi</p>"},{"location":"Recursive/#fallingcutebombs","title":"FallingCuteBombs","text":"<p>based on FallingCuteBombs written by Emiland ported to DaFusion by JiPi</p>"},{"location":"Recursive/#growingweatheringrocks","title":"GrowingWeatheringRocks","text":"<p>based on GrowingWeatheringRocks written by stband ported to DaFusion by JiPi</p>"},{"location":"Recursive/#learningreactiondiffusion","title":"LearningReactionDiffusion","text":"<p>based on LearningReactionDiffusion written by TekFand ported to DaFusion by JiPi</p>"},{"location":"Recursive/#spilled","title":"Spilled","text":"<p>based on spilled written by flockarooand ported to DaFusion by JiPi</p>"},{"location":"Recursive/#tdsotm_nebula","title":"TDSOTM_Nebula","text":"<p>based on The dark side of the moon written by bytewaveand ported to DaFusion by JiPi</p>"},{"location":"Recursive/#vine","title":"Vine","text":"<p>based on Vine written by gazand ported to DaFusion by JiPi</p>"},{"location":"Recursive/AnisotropicBlurImage/","title":"AnisotropicBlurImage","text":"<p>This Fuse is based on the Shadertoy 'Anisotropic Blur Image Warp' by cornusammonis. \u00a9 cornusammonis (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>This conversion was created as part of a post in the WeSuckLessForum. A realistic oil shader was sought. The basis is a diffusion reaction that is controlled with a noise pattern. If no noise pattern is applied to the second image input, the gold noise function is used. However, amazing effects can be created with a self-created pattern. For those who want to play with the diffusion reaction, there is the OrgPar button, with which almost all parameters can be set.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Recursive/FallingCuteBombs/","title":"FallingCuteBombs","text":"<p>This Fuse is based on the Shadertoy 'FallingCuteBombs' by Emil. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>A relatively simple recursive shader, but it wasn't easy to translate either. A few adjustments were necessary, because although a small resolution creates the impression of a falling fireball, individual points become visible in Fusion with a larger one. Theoretically, the shader would have to be adjusted with the resolution, but this is not very easy due to the increase in brightness and fade out (fade) due to the recurrence. I've added a couple of parameters to play with.</p> <p> </p> <p>Have fun playing</p>"},{"location":"Recursive/GrowingWeatheringRocks/","title":"GrowingWeatheringRocks","text":"<p>This Fuse is based on the Shadertoy 'GrowingWeatheringRocks' by stb. \u00a9 stb (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>An attempt to make a bump/height map for natural stone surfaces. Not physically-based.</p> <p>There are extensive parameters available. In particular, three textures can be faded in or overlaid. Two variables are calculated in the calculation of the BufferA. These are taken over in the textures in the red and yellow dimension. These can be selected with the checkboxes PX / PY. The corresponding variable can also be selected for the draw function.</p> <p>The standard settings for image size and depth have been replaced with this fuse. You can choose between float16 and float32 for the depth. In addition to the standard and the manual setting, the image size now includes the adoption of the image size of the image texture1 as well as four specified image sizes. The GlobalOut setting has now been moved from the header area in the inspector to the image page. Thanks to LeanNowFX (David) for the information.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Recursive/LearningReactionDiffusion/","title":"LearningReactionDiffusion","text":"<p>This Fuse is based on the Shadertoy 'LearningReactionDiffusion' by TekF. \u00a9 TekF (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>The reaction diffusion shaders cast a spell over me. This is a shader to work your way through the matter well. There is a short concise info page about the theory: https://www.karlsims.com/rd.html</p> <p>And here is a detailed description of this shader, as well as an introduction to my favorite shaders on this topic: https://www.youtube.com/watch?v=wKhv1nPb2lk</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Recursive/Spilled/","title":"Spilled","text":"<p>This Fuse is based on the Shadertoy 'spilled' by flockaroo. CC BY-NC-SA 3.0. Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>A nice example for \"computational flockarooid dynamics\"</p> <p></p> <p>It took a while until the penny for the implementation of a BufferA in DCTL fell. I struggled with an offset and strong artifacts. When tida wrote a post with exactly this shader in WSL, I first created the recursive call using Pieter's \"loop\" (WeSuckLessForum). The construction of the multi-core fuse was successful and tida added great features and parameters. Now I found the time for a clean-up. The use of this type of fuses is not very easy to handle, since a cycle must not be interrupted or disturbed by changing parameters. There is a reset button for \"practicing\", this executes a purge cache and initializes the image memory with Image1. Image1 can also be loaded as an initialization image by ticking the \"Startpicture\" checkbox for the start frames. For the blend functionality, first set the blend control to 1, then to zero, then the flow process can be carried out. Keyframes or expressions are then necessary for the production.</p> <p>Here is a little study with this fuse: https://www.youtube.com/watch?v=oyndG0pLEQQ</p> <p>Have fun playing</p>"},{"location":"Recursive/TDSOTM_Nebula/","title":"TDSOTM_Nebula","text":"<p>This Fuse is based on the Shadertoy 'The dark side of the moon' by bytewave. \u00a9 bytewave (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>As a Pink Floyd fan, I couldn't resist turning the toy into a fuse.</p> <p></p> <p>I had found a great toy before: https://www.youtube.com/watch?v=5bvwlcG9Cqo</p> <p>Have fun playing</p>"},{"location":"Recursive/Vine/","title":"Vine","text":"<p>This Fuse is based on the Shadertoy 'Vine' by gaz. \u00a9 gaz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Recursive for more fuses in this category.</p> <p></p> <p>Colorful lines entwine and fade across the screen</p> <p></p> <p>This shader consists of an image buffer that recursively processes the image. It is important that the color depth should be set to at least \"float16\", otherwise the thread will not deliver a good result due to the lack of resolution (\"black\" is not achieved).</p> <p>Have fun playing</p>"},{"location":"ShaderOfTheWeek/","title":"Index","text":""},{"location":"ShaderOfTheWeek/#shaderoftheweek-shaders","title":"ShaderOfTheWeek Shaders","text":"<p>On the home page of Shadertoy.com the \"Shader of the Week\" is presented. If such a shader can be converted to DCTL (and its license allows it), the corresponding Fuse is published here.</p>"},{"location":"ShaderOfTheWeek/#acircleaday","title":"ACircleADay","text":"<p>based on A circle a day written by Plentoand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#abstracttruchetinversion","title":"AbstractTruchetInversion","text":"<p>based on Abstract Truchet Inversion  written by byt3_m3chanicand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#abstractwavething","title":"AbstractWaveThing","text":"<p>based on Abstract Wave Thing written by bad_dreams_and ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#ainotincluded","title":"AiNotIncluded","text":"<p>based on AI not included written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#alexanderhornedspherezoom","title":"AlexanderHornedSphereZoom","text":"<p>based on Alexander horned sphere zoom written by tmstand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#alienspacejockey","title":"AlienSpaceJockey","text":"<p>based on Alien Space Jockey written by dean_the_coderand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#alientunnel","title":"AlienTunnel","text":"<p>based on Alien Tunnel written by lzand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#androidruntime","title":"AndroidRuntime","text":"<p>based on Android Runtime written by shauand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#audioflightv2","title":"AudioFlightv2","text":"<p>based on Audio Flight v2 (strobes) written by byt3_m3chanicand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#bomlka","title":"Bomlka","text":"<p>based on bomlka written by lamoguiand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#chainspell","title":"ChainSpell","text":"<p>based on Chain Spell written by leonand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#clearlyabug","title":"ClearlyABug","text":"<p>based on Clearly a bug written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#clubcave09","title":"ClubCave09","text":"<p>based on 20210930_CLUB-CAVE-09 written by 0b5vrand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#coastallandscape","title":"CoastalLandscape","text":"<p>based on Coastal Landscape written by bitlessand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#colorprocessing","title":"ColorProcessing","text":"<p>based on Color processing written by sinvecand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#controllablemachinery","title":"ControllableMachinery","text":"<p>based on Controllable Machinery written by dr2and ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#creationbysilexars","title":"CreationBySilexars","text":"<p>based on Creation by Silexars written by Danguaferand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#cubewave3","title":"CubeWave3","text":"<p>based on cube wave 3 written by FabriceNeyret2and ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#cubicdispersal","title":"CubicDispersal","text":"<p>based on Cubic Dispersal written by Taterand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#d4dbeats","title":"D4DBeats","text":"<p>based on 4D Beats written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#dangernoodle","title":"DangerNoodle","text":"<p>based on DangerNoodle written by BigWIngsand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#day94","title":"Day94","text":"<p>based on Day94 written by jeykoand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#decoratedchristmasspiral","title":"DecoratedChristmasSpiral","text":"<p>based on Decorated Christmas Spiral written by sylvain69780and ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#discoteq2","title":"Discoteq2","text":"<p>based on Discoteq 2 written by supahand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#dullskull","title":"DullSkull","text":"<p>based on DULL SKULL written by Kris_Katurand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#electriceeluniverse","title":"ElectricEelUniverse","text":"<p>based on Electric Eel Universe written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#energeticflyby","title":"Energeticflyby","text":"<p>based on [In\u00e9rcia 2022] Energetic Flyby written by Kaliand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#exitthematrix","title":"ExitTheMatrix","text":"<p>based on Exit the Matrix written by Kaliand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#extrudedbauhaustruchetpattern","title":"ExtrudedBauhausTruchetPattern","text":"<p>based on Extruded Bauhaus Truchet Pattern written by Shaneand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#eyeofphi","title":"EyeOfPhi","text":"<p>based on Eye of Phi written by ChunderFPVand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#fidgetcube","title":"FidgetCube","text":"<p>based on Fidget Cube written by TheBen27and ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#fractalflythrough","title":"FractalFlythrough","text":"<p>based on FractalFlythrough written by Shaneand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#fractalgliding","title":"FractalGliding","text":"<p>based on Fractal Gliding written by AntoineCand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#frozenwasteland","title":"FrozenWasteland","text":"<p>based on Frozen wasteland written by Dave_Hoskinsand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#fullspectrumcyber","title":"FullSpectrumCyber","text":"<p>based on Full Spectrum Cyber written by Kaliand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#futuristictunnel","title":"FuturisticTunnel","text":"<p>based on Futuristic Tunnel written by julianlumiaand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#generativeartdeco4","title":"GenerativeArtDeco4","text":"<p>based on generative art deco 4 written by morisiland ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#glassywithoddrotation","title":"GlassyWithOddRotation","text":"<p>based on Glassy with odd rotation written by etrujilloand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#greenfielddiorama","title":"GreenFieldDiorama","text":"<p>based on Green Field Diorama written by Galloand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#groundcameralightinghelix","title":"GroundCameraLightingHelix","text":"<p>based on Ground, Camera, Lighting, Helix written by Yusef28and ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#hexatyou","title":"HexAtYou","text":"<p>based on hex at you written by pband ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#hexagold2","title":"Hexagold2","text":"<p>based on HexaGold 2 written by aiekickand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#hexagonx5","title":"HexagonX5","text":"<p>based on Hexagon X5 written by byt3_m3chanicand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#hyperdough","title":"HyperDough","text":"<p>based on HyperDough written by Taterand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#hyperbolicgrouplimitset","title":"HyperbolicGroupLimitSet","text":"<p>based on Green Field Diorama written by neozhaoliangand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#infrastructure","title":"Infrastructure","text":"<p>based on Infrastructure written by R3Nand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#insidethemandelbulbii","title":"InsideTheMandelbulbIi","text":"<p>based on Inside the mandelbulb II written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#insidethetorus","title":"InsideTheTorus","text":"<p>based on Inside the torus written by liameganand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#jeweledvortex","title":"JeweledVortex","text":"<p>based on Jeweled Vortex written by ChunderFPVand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#justanothercube","title":"JustAnotherCube","text":"<p>based on Just another cube written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#letsselfreflect","title":"LetSSelfReflect","text":"<p>based on Let's self reflect written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#lover","title":"Lover","text":"<p>based on Lover written by wyattand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#mountainbytespppp4kibwindows","title":"MountainbytesPppp4KibWindows","text":"<p>based on MountainBytes: PPPP 4KiB Windows written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#neontunne","title":"NeonTunne","text":"<p>based on Fork Neon Tunne Infames 758 written by Infamesand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#nestedoctahedrons2","title":"NestedOctahedrons2","text":"<p>based on nested octahedrons 2 written by pband ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#neuralstanfordbunny5kb","title":"NeuralStanfordBunny5Kb","text":"<p>based on Neural Stanford Bunny (5 kb) written by blackleand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#nightcircuit","title":"NightCircuit","text":"<p>based on Night circuit written by gazand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#nintendoswitch","title":"NintendoSwitch","text":"<p>based on NintendoSwitch written by jackdavenportand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#omzgshaderroyale","title":"OMZGShaderRoyale","text":"<p>based on OMZG Shader Royale written by NuSanand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#onthesal","title":"OnTheSal","text":"<p>based on On the salt lake written by iapafotoand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#orbitalmegastructure","title":"OrbitalMegastructure","text":"<p>based on Orbital Megastructure written by otaviogoodand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#partyconcertvisuals2020","title":"PartyConcertVisuals2020","text":"<p>based on @Party Concert Visuals 2020 written by blackleand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#pigsquad","title":"PigSquad","text":"<p>based on Pig Squad 9 Year Anniversary written by bpfarrelland ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#playingaroundshader","title":"PlayingAroundShader","text":"<p>based on Playing around shader written by MinimilisticBitsand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#rme4crater","title":"RME4Crater","text":"<p>based on RME4 - Crater written by patuand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#recursivedonut","title":"RecursiveDonut","text":"<p>based on Recursive Donut written by ShnitzelKillerand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#retrovisionrevision2023","title":"RetrovisionRevision2023","text":"<p>based on RetroVision (Revision 2023) written by dean_the_coderand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#rootsanctum","title":"RootSanctum","text":"<p>based on Root Sanctum written by diatribesand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#russianrouletteaudioviz","title":"RussianRouletteAudioViz","text":"<p>based on Russian Roulette (Audio Viz) written by orbliviusand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#saturdayweirdness","title":"SaturdayWeirdness","text":"<p>based on Saturday weirdness written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#segmentedspiralwhirlpool","title":"SegmentedSpiralWhirlpool","text":"<p>based on Segmented spiral whirlpool written by ChunderFPVand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#simplerefractiontest","title":"SimpleRefractionTest","text":"<p>based on simple refraction test written by drschizzoand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#simplesphereraymarching","title":"SimpleSphereRaymarching","text":"<p>based on SimpleSphereRaymarching written by drschizzoand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#simplextruchettubing","title":"SimplexTruchetTubing","text":"<p>based on Simplex Truchet Tubing written by Shaneand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#something227","title":"Something227","text":"<p>based on Something  227 written by gazand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#spaceathome","title":"SpaceAtHome","text":"<p>based on Space At Home written by lzand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#spaceship","title":"SpaceShip","text":"<p>based on Space ship written by A_Toasterand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#spiraledlayers","title":"SpiraledLayers","text":"<p>based on Spiraled Layers written by Taterand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#stargazinghippo","title":"StarGazingHippo","text":"<p>based on StarGazingHippo written by kuvkarand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#starfield","title":"Starfield","text":"<p>based on \u5927\u9f99\u732b - Starfield written by totetmattand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#starryplanes","title":"StarryPlanes","text":"<p>based on Starry planes written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#starsandgalaxy","title":"StarsAndGalaxy","text":"<p>based on Stars and galaxy written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#stellarclouds","title":"StellarClouds","text":"<p>based on STELLAR CLOUDS written by alroand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#straightflagstonetiles","title":"StraightFlagstoneTiles","text":"<p>based on Straight Flagstone Tiles written by gelamiand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#tasteofnoise7","title":"TasteOfNoise7","text":"<p>based on Taste Of Noise 7 written by leonand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#terraform","title":"Terraform","text":"<p>based on Terraform written by Xorand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#tiledgildedrainbowtunnel","title":"TiledGildedRainbowTunnel","text":"<p>based on Tiled Gilded Rainbow Tunnel written by OldEclipseand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#torushive","title":"TorusHive","text":"<p>based on Torus Hive written by Flopineand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#trailingthetwinklingtunnel","title":"TrailingTheTwinklingTunnel","text":"<p>based on Trailing the Twinkling Tunnel .. written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#trippytriangle","title":"TrippyTriangle","text":"<p>based on Trippy Triangle written by Taterand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#truchetkaleidoscopeftw","title":"TruchetKaleidoscopeFTW","text":"<p>based on Truchet + Kaleidoscope FTW written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#tunnelcable","title":"TunnelCable","text":"<p>based on \u5927\u9f99\u732b - Tunnel Cable written by totetmattand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#tunneloflights","title":"TunnelOfLights","text":"<p>based on Tunnel of Lights written by nocrexand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#twizzlycirclemess","title":"TwizzlyCircleMess","text":"<p>based on Twizzly Circle Mess written by SnoopethDuckDuckand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#undulatingcolumns","title":"UndulatingColumns","text":"<p>based on Undulating Columns written by fizzerand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#undulatingurchin","title":"UndulatingUrchin","text":"<p>based on Undulating Urchin written by ChunderFPVand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#unstableuniverse","title":"UnstableUniverse","text":"<p>based on Unstable Universe written by julianlumiaand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#wednesdaymessingaround","title":"WednesdayMessingAround","text":"<p>based on Wednesday messing around written by mrangeand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#weirdtruchetnewkeyboard","title":"WeirdTruchetNewKeyboard","text":"<p>based on Weird Truchet | New Keyboard written by byt3_m3chanicand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#whackamolepistons","title":"WhackAMolePistons","text":"<p>based on Whack-A-Mole Pistons written by blackleand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#yearoftruchets022","title":"YearOfTruchets022","text":"<p>based on Year of Truchets #022 written by byt3_m3chanicand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#yee1212","title":"Yee1212","text":"<p>based on yee1212 written by dspindlerand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/#zippyzaps","title":"ZippyZaps","text":"<p>based on Zippy Zaps written by SnoopethDuckDuckand ported to DaFusion by JiPi</p>"},{"location":"ShaderOfTheWeek/ACircleADay/","title":"ACircleADay","text":"<p>This Fuse is based on the Shadertoy 'A circle a day' by Plento. \u00a9 Plento (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AbstractTruchetInversion/","title":"AbstractTruchetInversion","text":"<p>This Fuse is based on the Shadertoy 'Abstract Truchet Inversion ' by byt3_m3chanic. \u00a9 byt3_m3chanic (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>I found a bug with this shader. In any case, the DCTL shader does not produce the result of the WebGL original. I found a workaround.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/AbstractTruchetInversion/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Just taking a play day and pushing out some i've been kicking around - concept from older shader. Two woven truchet tile patterns, with some glow effects. Using buffer tab to feed in color for Fog to get trail effect.</p>"},{"location":"ShaderOfTheWeek/AbstractTruchetInversion/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/AbstractWaveThing/","title":"AbstractWaveThing","text":"<p>This Fuse is based on the Shadertoy 'Abstract Wave Thing' by bad_dreams_. \u00a9 bad_dreams_ (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Extensive parameters invite you to play. The three waves can be given textures, their position and size can be adjusted and I have added extensive options for adjusting the viewing angle and section. Please note that the first two image inputs require cube maps, which affect the reflections and shadows.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/AbstractWaveThing/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/AiNotIncluded/","title":"AiNotIncluded","text":"<p>This Fuse is based on the Shadertoy 'AI not included' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>Would also have fit into the wedding category. A texture can be loaded into the heart, either in the \"original color\" (check Tex) or the alienation of the shader. This can be regulated by Mix_Tex. Sacle and UV are used to align the texture in the heart.</p> <p>Have fun</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AiNotIncluded/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: AI not included Tinkering around with old shaders. No AI and very little human intelligence used ;)</p>"},{"location":"ShaderOfTheWeek/AlexanderHornedSphereZoom/","title":"AlexanderHornedSphereZoom","text":"<p>This Fuse is based on the Shadertoy 'Alexander horned sphere zoom' by tmst. \u00a9 tmst (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>An interesting implementation of a mathematically pathological structure. A sphere embedded in space with an infinitely fine, recursively generated object structure. In the implementation, both mat3 and mat4 matrices are used extensively.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AlienSpaceJockey/","title":"AlienSpaceJockey","text":"<p>This Fuse is based on the Shadertoy 'Alien Space Jockey' by dean_the_coder. \u00a9 dean_the_coder (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AlienSpaceJockey/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Another Alien scene to add to my collection. :) YouTube version: https://youtu.be/6ZFq3TlvHBA</p>"},{"location":"ShaderOfTheWeek/AlienSpaceJockey/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/AlienTunnel/","title":"AlienTunnel","text":"<p>This Fuse is based on the Shadertoy 'Alien Tunnel' by lz. \u00a9 lz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AlienTunnel/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Exploring breathing alien tunnel.</p>"},{"location":"ShaderOfTheWeek/AlienTunnel/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/AndroidRuntime/","title":"AndroidRuntime","text":"<p>This Fuse is based on the Shadertoy 'Android Runtime' by shau. \u00a9 shau (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A great shader that simulates running movement very well. Colors and camera panning are implemented and you can set textures for the background and the runner. Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AndroidRuntime/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Attempt at trying to simulate mocap motion with simple trig.</p>"},{"location":"ShaderOfTheWeek/AndroidRuntime/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/AudioFlightv2/","title":"AudioFlightv2","text":"<p>This Fuse is based on the Shadertoy 'Audio Flight v2 (strobes)' by byt3_m3chanic. \u00a9 byt3_m3chanic (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A beautiful tunnel flight with audio visualization. Extensive parameters allow you to customize the look and flow. Unfortunately, the shader behaves a bit differently when using OpenCL.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/AudioFlightv2/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe5 Windows / OpenCL</p>"},{"location":"ShaderOfTheWeek/Bomlka/","title":"Bomlka","text":"<p>This Fuse is based on the Shadertoy 'bomlka' by lamogui. \u00a9 lamogui (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Bomlka/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Bob-omb performing polka Shader used for my 64k entry at evoke 2023 https://www.pouet.net/prod.php?which=94746</p> <p></p>"},{"location":"ShaderOfTheWeek/Bomlka/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ChainSpell/","title":"ChainSpell","text":"<p>This Fuse is based on the Shadertoy 'Chain Spell' by leon. \u00a9 leon (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/ChainSpell/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Raymarching sketch about magic. I've started with the three turning spells, then a broken chain and finally a storm trapped in a sphere. Use mouse to move camera.</p>"},{"location":"ShaderOfTheWeek/ChainSpell/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ClearlyABug/","title":"ClearlyABug","text":"<p>This Fuse is based on the Shadertoy 'Clearly a bug' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/ClearlyABug/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Clearly a bug   A \"Happy Accident\" Shader</p>"},{"location":"ShaderOfTheWeek/ClearlyABug/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ClubCave09/","title":"ClubCave09","text":"<p>This Fuse is based on the Shadertoy '20210930_CLUB-CAVE-09' by 0b5vr. \u00a9 0b5vr (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>An abstract shader, with an interesting approach to generating random numbers. The image input is intended for a noise texture.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/CoastalLandscape/","title":"CoastalLandscape","text":"<p>This Fuse is based on the Shadertoy 'Coastal Landscape' by bitless. \u00a9 bitless (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/ColorProcessing/","title":"ColorProcessing","text":"<p>This Fuse is based on the Shadertoy 'Color processing' by sinvec. \u00a9 sinvec (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p> </p>"},{"location":"ShaderOfTheWeek/ControllableMachinery/","title":"ControllableMachinery","text":"<p>This Fuse is based on the Shadertoy 'Controllable Machinery' by dr2. \u00a9 dr2 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/CreationBySilexars/","title":"CreationBySilexars","text":"<p>This Fuse is based on the Shadertoy 'Creation by Silexars' by Danguafer. \u00a9 Danguafer (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/CreationBySilexars/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>My first demoscene release. Achieved second place @ DemoJS 2011. It has been said to be the first 1k WebGL intro ever released.</p>"},{"location":"ShaderOfTheWeek/CreationBySilexars/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/CubeWave3/","title":"CubeWave3","text":"<p>This Fuse is based on the Shadertoy 'cube wave 3' by FabriceNeyret2. \u00a9 FabriceNeyret2 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/CubeWave3/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>reference: https://twitter.com/lejeunerenard/status/1742073493020188962</p>"},{"location":"ShaderOfTheWeek/CubeWave3/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/CubicDispersal/","title":"CubicDispersal","text":"<p>This Fuse is based on the Shadertoy 'Cubic Dispersal' by Tater. \u00a9 Tater (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/D4DBeats/","title":"D4DBeats","text":"<p>This Fuse is based on the Shadertoy '4D Beats' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/D4DBeats/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: 4D Beats  Continuing experiments with yesterday's grid structure  Note: Music may require clicking play/stop to initialize  Shader animation depends on audio input - static without music  BPM: 114</p>"},{"location":"ShaderOfTheWeek/D4DBeats/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/DangerNoodle/","title":"DangerNoodle","text":"<p>This Fuse is based on the Shadertoy 'DangerNoodle' by BigWIngs. \u00a9 BigWIngs (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A very nice shader, which uses two cubemaps to show the background and the surface of the snake very well. In the shader fuse, the color of the top and bottom, the eyes and the tongue can be changed.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Day94/","title":"Day94","text":"<p>This Fuse is based on the Shadertoy 'Day94' by jeyko. \u00a9 jeyko (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A successful shader, which uses a buffer A, but the picture does not use again as input.</p> <p>Have fun</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/DecoratedChristmasSpiral/","title":"DecoratedChristmasSpiral","text":"<p>This Fuse is based on the Shadertoy 'Decorated Christmas Spiral' by sylvain69780. \u00a9 sylvain69780 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>All colors and the glow can be changed. The Advent wreath can be rotated, tilted and moved. Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/DecoratedChristmasSpiral/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>It's Christmas time for Math's lovers ! [url=https://www.shadertoy.com/view/stB3WK]SDF for Archimedean Spiral[/url]</p>"},{"location":"ShaderOfTheWeek/DecoratedChristmasSpiral/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/Discoteq2/","title":"Discoteq2","text":"<p>This Fuse is based on the Shadertoy 'Discoteq 2' by supah. \u00a9 supah (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Discoteq2/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/DullSkull/","title":"DullSkull","text":"<p>This Fuse is based on the Shadertoy 'DULL SKULL' by Kris_Katur. \u00a9 Kris_Katur (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/DullSkull/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>// All work and no play makes Jack a Dull Skull // DULL SKULL - Playlist https://www.shadertoy.com/playlist/c3sXWn</p>"},{"location":"ShaderOfTheWeek/DullSkull/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ElectricEelUniverse/","title":"ElectricEelUniverse","text":"<p>This Fuse is based on the Shadertoy 'Electric Eel Universe' by mrange. Various (CC0 + MIT + WTFPL). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>CC0: Electric Eel Universe Saturday tinkering with an old failed shader Turned out a bit better today</p> <p>Additional to this Shader, a forked one is converted additional: https://www.shadertoy.com/view/cddSRM Here a Audiosignal is changing the sun. You can change the Position with the Mouseparameter</p> <p></p>"},{"location":"ShaderOfTheWeek/Energeticflyby/","title":"Energeticflyby","text":"<p>This Fuse is based on the Shadertoy '[In\u00e9rcia 2022] Energetic Flyby' by Kali. \u00a9 Kali (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Energeticflyby/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ExitTheMatrix/","title":"ExitTheMatrix","text":"<p>This Fuse is based on the Shadertoy 'Exit the Matrix' by Kali. \u00a9 Kali (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A very nice shader. Here, too, a great deal of time could be saved with the FnF process.</p> <p>Have Fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/ExitTheMatrix/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ExtrudedBauhausTruchetPattern/","title":"ExtrudedBauhausTruchetPattern","text":"<p>This Fuse is based on the Shadertoy 'Extruded Bauhaus Truchet Pattern' by Shane. \u00a9 Shane (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>A great truchet shader. I added a lot of parameters.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/ExtrudedBauhausTruchetPattern/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>An extruded Bauhaus Truchet pattern with a simplistic Cook-Torrance diffuse and specular lighting scheme applied to give the vague appearance of hard ceramic and metal tiles.</p>"},{"location":"ShaderOfTheWeek/ExtrudedBauhausTruchetPattern/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/EyeOfPhi/","title":"EyeOfPhi","text":"<p>This Fuse is based on the Shadertoy 'Eye of Phi' by ChunderFPV. \u00a9 ChunderFPV (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/EyeOfPhi/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Math art.  Contains a few grid transforms.  Mouse x to change the exponent.  Mouse y to zoom. Update 11/15/22: Now with anti-aliasing.</p>"},{"location":"ShaderOfTheWeek/EyeOfPhi/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/FidgetCube/","title":"FidgetCube","text":"<p>This Fuse is based on the Shadertoy 'Fidget Cube' by TheBen27. \u00a9 TheBen27 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>This is the first time I've emulated a CubeMapA buffer in DCTL. I thought I'd be pushing the envelope for performance, but this fuse is calculated in real time.</p> <p>There are also a huge number of matrix multiplications. A total of 85 mat4 multiplied by mat4 operations. The texture is used for the edges during the transformation. You can manually control the transformations with the mouse parameters.</p> <p>Have fun playing!</p> <p></p>"},{"location":"ShaderOfTheWeek/FidgetCube/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Similar to a toy I have on my desk.</p> <p>This is lit only with an environment map and ambient occlusion, which looks nice as long as you use big, soft lights.</p>"},{"location":"ShaderOfTheWeek/FidgetCube/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/FractalFlythrough/","title":"FractalFlythrough","text":"<p>This Fuse is based on the Shadertoy 'FractalFlythrough' by Shane. \u00a9 Shane (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>Again a great shader of Shane. You can select three materials. In the original, these are each applied to parts of the walls. Without input image, the color can be selected.</p> <p>Have fun</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/FractalGliding/","title":"FractalGliding","text":"<p>This Fuse is based on the Shadertoy 'Fractal Gliding' by AntoineC. \u00a9 AntoineC (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>One of the most complex conversions I've done, there was again a lot to learn. There are 9 float, 6 double float, 4 tripple float, one boolean and one integer, which were originally implemented as global variables. In the first attempt I tried the possibility of global variables in Cuda, unfortunately this led to picture interference (a known problem). So these variables were looped once across the entire program, sometimes as pointers. However, this led to the execution time increasing dramatically. You need a bit of patience, but then you get a great fractal film that is 133 seconds long, divided into an intro and seven scenes.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/FractalGliding/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/FrozenWasteland/","title":"FrozenWasteland","text":"<p>This Fuse is based on the Shadertoy 'Frozen wasteland' by Dave_Hoskins. \u00a9 Dave_Hoskins (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/FrozenWasteland/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/FullSpectrumCyber/","title":"FullSpectrumCyber","text":"<p>This Fuse is based on the Shadertoy 'Full Spectrum Cyber' by Kali. \u00a9 Kali (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/FullSpectrumCyber/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Made for Genuary 2024 day 10 - prompt: Hexagonal - title by Piter Pasma based on the meme</p>"},{"location":"ShaderOfTheWeek/FullSpectrumCyber/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/FuturisticTunnel/","title":"FuturisticTunnel","text":"<p>This Fuse is based on the Shadertoy 'Futuristic Tunnel' by julianlumia. \u00a9 julianlumia (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>An abstract tunnel flight.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/GenerativeArtDeco4/","title":"GenerativeArtDeco4","text":"<p>This Fuse is based on the Shadertoy 'generative art deco 4' by morisil. \u00a9 morisil (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/GenerativeArtDeco4/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/GlassyWithOddRotation/","title":"GlassyWithOddRotation","text":"<p>This Fuse is based on the Shadertoy 'Glassy with odd rotation' by etrujillo. \u00a9 etrujillo (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/GlassyWithOddRotation/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Slight exploration of bugged.</p>"},{"location":"ShaderOfTheWeek/GlassyWithOddRotation/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/GreenFieldDiorama/","title":"GreenFieldDiorama","text":"<p>This Fuse is based on the Shadertoy 'Green Field Diorama' by Gallo. \u00a9 Gallo (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A small rotating biotope.</p> <p>Have fun playing</p> <p>!</p> <p></p>"},{"location":"ShaderOfTheWeek/GroundCameraLightingHelix/","title":"GroundCameraLightingHelix","text":"<p>This Fuse is based on the Shadertoy 'Ground, Camera, Lighting, Helix' by Yusef28. \u00a9 Yusef28 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/GroundCameraLightingHelix/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Tiled floor, camera and lighting practice with the DNA from other shaders added to make things a bit more interesting. The shader will \"run out of color\" at around 5 - 10 minutes. Haven't figured that part out yet, maybe it's the noise function.</p>"},{"location":"ShaderOfTheWeek/GroundCameraLightingHelix/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/HexAtYou/","title":"HexAtYou","text":"<p>This Fuse is based on the Shadertoy 'hex at you' by pb. \u00a9 pb (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/HexAtYou/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>hex repeat in one plane, making use of quaternionic z^2+c in fractal formula</p>"},{"location":"ShaderOfTheWeek/HexAtYou/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/Hexagold2/","title":"Hexagold2","text":"<p>This Fuse is based on the Shadertoy 'HexaGold 2' by aiekick. \u00a9 aiekick (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>]</p> <p></p>"},{"location":"ShaderOfTheWeek/Hexagold2/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>An HexaGold :-,)</p>"},{"location":"ShaderOfTheWeek/Hexagold2/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/HexagonX5/","title":"HexagonX5","text":"<p>This Fuse is based on the Shadertoy 'Hexagon X5' by byt3_m3chanic. \u00a9 byt3_m3chanic (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>]</p> <p></p>"},{"location":"ShaderOfTheWeek/HexagonX5/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Playing in 2D for something I want to make in 3D/Raymarching. Then got caught up in the polar coords thing, and said - that's a neat design!</p>"},{"location":"ShaderOfTheWeek/HexagonX5/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/HyperDough/","title":"HyperDough","text":"<p>This Fuse is based on the Shadertoy 'HyperDough' by Tater. \u00a9 Tater (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>I have to admit this is not going to be my favorite shader. There are a few interesting points to be found, but the part with the blue noise was not accessible to me. But it is a funny structure that can be viewed from all sides.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/HyperbolicGroupLimitSet/","title":"HyperbolicGroupLimitSet","text":"<p>This Fuse is based on the Shadertoy 'Green Field Diorama' by neozhaoliang. \u00a9 neozhaoliang (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A shader over a hyperbolic Coxeter group. The mathematical background is explained very well in the Shdader's head</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Infrastructure/","title":"Infrastructure","text":"<p>This Fuse is based on the Shadertoy 'Infrastructure' by R3N. \u00a9 R3N (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Infrastructure/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>A raymarching scene with a simple greeble technique to add details to surfaces, although there's still some artifacts and aliasing issues resulting from this technique.</p>"},{"location":"ShaderOfTheWeek/Infrastructure/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/InsideTheMandelbulbIi/","title":"InsideTheMandelbulbIi","text":"<p>This Fuse is based on the Shadertoy 'Inside the mandelbulb II' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>A fascinating play with form and colour. The object can be rotated with the mouse parameter. The viewing angle can be changed with the view parameters. Refraction parameters and color parameters for background and envelope complete the fuse.</p> <p>Have fun</p> <p></p>"},{"location":"ShaderOfTheWeek/InsideTheMandelbulbIi/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Inside the mandelbulb II Received some \"complaints\" about the old mandelbulb suffering from alias effects. So thought I make a quick try to apply the FXAA thing I learnt from XorDev. It did improve it but not perfect still.</p>"},{"location":"ShaderOfTheWeek/InsideTheMandelbulbIi/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/InsideTheTorus/","title":"InsideTheTorus","text":"<p>This Fuse is based on the Shadertoy 'Inside the torus' by liamegan. \u00a9 liamegan (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/InsideTheTorus/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Just a torus interior with a gyroid \"revolved\" around the surface.</p>"},{"location":"ShaderOfTheWeek/InsideTheTorus/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/JeweledVortex/","title":"JeweledVortex","text":"<p>This Fuse is based on the Shadertoy 'Jeweled Vortex' by ChunderFPV. \u00a9 ChunderFPV (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A nice little compact shader. The type of spirals can be changed with the iMouse parameter. A digital display shows the spiral value, but this can also be hidden. There are also parameters for coloring.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/JeweledVortex/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/JustAnotherCube/","title":"JustAnotherCube","text":"<p>This Fuse is based on the Shadertoy 'Just another cube' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>A nice, compact shader. The cube can be rotated using the mouse parameter. The background color and reflection color are adjustable. The cube's alpha is set using ColorOut, and the background's alpha is set using BKGColor.</p> <p>Enjoy playing!</p> <p></p>"},{"location":"ShaderOfTheWeek/JustAnotherCube/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Just another cube  Glowtracers are great for compact coding but I wanted to see how much  I could squeeze a more normal raymarcher in terms of characters used</p>"},{"location":"ShaderOfTheWeek/JustAnotherCube/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/LetSSelfReflect/","title":"LetSSelfReflect","text":"<p>This Fuse is based on the Shadertoy 'Let's self reflect' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>With refraction there is the well-known problem that can be solved with the help of two parameters. Since two refractions are used here, there are also 4 parameters for it. Otherwise, colors and shapes can be changed using countless setting options.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/LetSSelfReflect/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Let's self reflect Always enjoyed the videos of Platonic solids with inner mirrors I made some previous attempts but thought I make another attempt it</p>"},{"location":"ShaderOfTheWeek/LetSSelfReflect/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/Lover/","title":"Lover","text":"<p>This Fuse is based on the Shadertoy 'Lover' by wyatt. \u00a9 wyatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A cool shader that uses all four buffers. I implemented a few parameters to play with. Among other things, you can connect a texture, which then specifies the shape, with the snake being placed where the alpha channel is set to 1 in the texture.</p> <p></p> <p>The image depth is fixed here at float32, since otherwise no calculation via the buffer is possible. The default resolution is set to 800x450 pixels but can be changed in Page Image.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Lover/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/MountainbytesPppp4KibWindows/","title":"MountainbytesPppp4KibWindows","text":"<p>This Fuse is based on the Shadertoy 'MountainBytes: PPPP 4KiB Windows' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Another challenge for the conversion, but it was worth it, a very nice shader. I added a lot of uniforms.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/MountainbytesPppp4KibWindows/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CCO: Phosphorescent Purple Pixel Peaks 4KiB Windows Exe</p> <p>Our contribution to MountainBytes 2024. Music: Virgill Music player: Pestis GLSL: mrange</p> <p>https://demozoo.org/productions/338637/</p>"},{"location":"ShaderOfTheWeek/MountainbytesPppp4KibWindows/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/NeonTunne/","title":"NeonTunne","text":"<p>This Fuse is based on the Shadertoy 'Fork Neon Tunne Infames 758' by Infames. \u00a9 Infames (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Interesting creation of the tunnel using mat4 matrices. The coloring of the cubes is created with a colorful noise texture. I added some parameters to play with.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/NeonTunne/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Quick and dirty sketch for a project at work which never got the green lights</p>"},{"location":"ShaderOfTheWeek/NeonTunne/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/NestedOctahedrons2/","title":"NestedOctahedrons2","text":"<p>This Fuse is based on the Shadertoy 'nested octahedrons 2' by pb. \u00a9 pb (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Another shader that didn't work with OpenCL at first, only after adding</p> <p>int RowSampler = 15;</p> <p>did it work with OpenCL.</p> <p>I'll probably never understand this \"bug\", well, as a pragmatist it works, but I don't know why :-)</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/NestedOctahedrons2/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>forked from: https://www.shadertoy.com/view/lXdSzs , see below for how to make a clickable link...</p>"},{"location":"ShaderOfTheWeek/NestedOctahedrons2/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/NeuralStanfordBunny5Kb/","title":"NeuralStanfordBunny5Kb","text":"<p>This Fuse is based on the Shadertoy 'Neural Stanford Bunny (5 kb)' by blackle. \u00a9 blackle (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p>"},{"location":"ShaderOfTheWeek/NeuralStanfordBunny5Kb/#here-insert-a-description-of-the-shader-and-maybe-a-gif","title":"Here insert a description of the shader! And maybe a gif","text":""},{"location":"ShaderOfTheWeek/NeuralStanfordBunny5Kb/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>my suspicions that mat4 multiplies and sines are really fast on the gpu are confirmed yet again</p> <p>explainer: https://youtu.be/8pwXpfi-0bU</p> <p></p>"},{"location":"ShaderOfTheWeek/NeuralStanfordBunny5Kb/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/NightCircuit/","title":"NightCircuit","text":"<p>This Fuse is based on the Shadertoy 'Night circuit' by gaz. \u00a9 gaz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>There is a striking performance difference between Cuda and OpenCL. While the shader is rendered loosely in real time with Cuda, with OpenCL each image is rendered individually to the screen. Possibly the use of the arrays is the cause.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/NightCircuit/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/NintendoSwitch/","title":"NintendoSwitch","text":"<p>This Fuse is based on the Shadertoy 'NintendoSwitch' by jackdavenport. \u00a9 jackdavenport (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A game console rotates in space. Two light sources create shadows. When the mouse is switched on, the automatic flight is interrupted and you can continue manually. In addition, the viewing angle (ViewXY,ViewZ) and the camera position (LookXY,LookZ) can be changed. With the DisplayTexture switch, a texture can be shown directly in the display instead of the one created in the original shader. A cubmap gives an additional spatial impression. The light angle and the ambient light can be adjusted. And the console can be rotated and moved in all three axes.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/OMZGShaderRoyale/","title":"OMZGShaderRoyale","text":"<p>This Fuse is based on the Shadertoy 'OMZG Shader Royale' by NuSan. \u00a9 NuSan (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/OMZGShaderRoyale/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/OnTheSal/","title":"OnTheSal","text":"<p>This Fuse is based on the Shadertoy 'On the salt lake' by iapafoto. \u00a9 iapafoto (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A very complex shader that was created with the great \"Fetch-N-Fuse process\". The shader toy source code is converted via a Python script, tested and adapted with an \"incubator fuse\" and finally the final fuse is assembled with another Python script. With this shader, in addition to an unsightly artifact in the background, there is the phenomenon that the ray marching no longer draws a figure from a certain position. Despite intensive troubleshooting, I was unfortunately unable to find the error :-(</p> <p>Anyway have fun</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/OnTheSal/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/OrbitalMegastructure/","title":"OrbitalMegastructure","text":"<p>This Fuse is based on the Shadertoy 'Orbital Megastructure' by otaviogood. \u00a9 otaviogood (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Another complex shader with great attention to detail.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/OrbitalMegastructure/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>I wanted to make a space station that feels big. This is spinning at a rate that would make for 1 G of gravity if the diameter is 8 km. I was trying really hard for cinema-quality.</p>"},{"location":"ShaderOfTheWeek/OrbitalMegastructure/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/PartyConcertVisuals2020/","title":"PartyConcertVisuals2020","text":"<p>This Fuse is based on the Shadertoy '@Party Concert Visuals 2020' by blackle. CC0 1.0 Universal. Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>The \"ApplyColor\" checkbox activates the \"Color\" and \"AlphaThres\" parameters so that the color and the alpha channel can be changed. If the checkbox is switched off (0), this corresponds to the original shader.</p> <p>Update on April 1<sup>st</sup>:</p> <p>The shader \"Fork @Party Con qb777 479\" (https://www.shadertoy.com/view/flfcD2) is integrated and can be selected via the \"Fork\" checkbox.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/PigSquad/","title":"PigSquad","text":"<p>This Fuse is based on the Shadertoy 'Pig Squad 9 Year Anniversary' by bpfarrell. \u00a9 bpfarrell (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A very cute shader that is now celebrating its nine year anniversary. I added parameters for all part colors. Color1's alpha controls the pig and block, and Color3's alpha controls background transparency.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/PigSquad/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/PlayingAroundShader/","title":"PlayingAroundShader","text":"<p>This Fuse is based on the Shadertoy 'Playing around shader' by MinimilisticBits. \u00a9 MinimilisticBits (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A relatively complex shader, which again had a few pitfalls in the conversion. The effect makes up for the trouble.</p> <p>Have Fun Playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/PlayingAroundShader/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/RME4Crater/","title":"RME4Crater","text":"<p>This Fuse is based on the Shadertoy 'RME4 - Crater' by patu. \u00a9 patu (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A nice shader of a volcanic crater. A nice play with the light.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/RecursiveDonut/","title":"RecursiveDonut","text":"<p>This Fuse is based on the Shadertoy 'Recursive Donut' by ShnitzelKiller. \u00a9 ShnitzelKiller (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A fractal changing ring. This can be done automatically or manually. It is possible to create the texture of the floor or the ring.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/RecursiveDonut/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/RetrovisionRevision2023/","title":"RetrovisionRevision2023","text":"<p>This Fuse is based on the Shadertoy 'RetroVision (Revision 2023)' by dean_the_coder. \u00a9 dean_the_coder (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A lovingly crafted shader.</p> <p></p>"},{"location":"ShaderOfTheWeek/RetrovisionRevision2023/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Based on my entry for the 4Kb Executable Graphics compo at Revision 2023. (Some changes made to improve performance.) https://demozoo.org/graphics/322475/</p> <p></p>"},{"location":"ShaderOfTheWeek/RetrovisionRevision2023/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/RootSanctum/","title":"RootSanctum","text":"<p>This Fuse is based on the Shadertoy 'Root Sanctum' by diatribes. \u00a9 diatribes (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>]</p> <p></p>"},{"location":"ShaderOfTheWeek/RootSanctum/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/RussianRouletteAudioViz/","title":"RussianRouletteAudioViz","text":"<p>This Fuse is based on the Shadertoy 'Russian Roulette (Audio Viz)' by orblivius. \u00a9 orblivius (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>To visualize an audio signal you need the \"AudioWaveform.fuse\". You can download it here: https://github.com/nmbr73/Shaderfuse/releases/download/V1.1/AudioWaveform-Installer.lua.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/RussianRouletteAudioViz/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/SaturdayWeirdness/","title":"SaturdayWeirdness","text":"<p>This Fuse is based on the Shadertoy 'Saturday weirdness' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/SaturdayWeirdness/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Saturday weirdness I saw a tweet from Kali where I thought I understood how he did something cool. Turns out I didn't understand . Instead ended up with weird stuff.</p>"},{"location":"ShaderOfTheWeek/SaturdayWeirdness/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/SegmentedSpiralWhirlpool/","title":"SegmentedSpiralWhirlpool","text":"<p>This Fuse is based on the Shadertoy 'Segmented spiral whirlpool' by ChunderFPV. \u00a9 ChunderFPV (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/SegmentedSpiralWhirlpool/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/SimpleRefractionTest/","title":"SimpleRefractionTest","text":"<p>This Fuse is based on the Shadertoy 'simple refraction test' by drschizzo. \u00a9 drschizzo (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A very nice shader with refraction, unfortunately the result can only be generated with Cuda. With OpenCL, compiling takes forever and only the cuboid appears as a result, the drops are only rendered rudimentarily.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/SimpleRefractionTest/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe5 Windows / OpenCL</p>"},{"location":"ShaderOfTheWeek/SimpleSphereRaymarching/","title":"SimpleSphereRaymarching","text":"<p>This Fuse is based on the Shadertoy 'SimpleSphereRaymarching' by drschizzo. \u00a9 drschizzo (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A nice shader in which the dFdx / dFdy functions from Shadertoy were used again for the HeightMap. This time I found a replacement solution for this.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/SimplexTruchetTubing/","title":"SimplexTruchetTubing","text":"<p>This Fuse is based on the Shadertoy 'Simplex Truchet Tubing' by Shane. \u00a9 Shane (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/SimplexTruchetTubing/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>A 3D simplex Truchet pattern - inspired by Mattz's octahedral and tetrahedral \"Rainbow Spaghetti\" example.</p>"},{"location":"ShaderOfTheWeek/SimplexTruchetTubing/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/Something227/","title":"Something227","text":"<p>This Fuse is based on the Shadertoy 'Something  227' by gaz. \u00a9 gaz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>The code of this shader is very short, but it was quite challenging during the conversion, as some specialties emerged during the programming that could not be translated into DCTL. Eventually, a way and a deeper understanding of the For/Next loop was found.</p> <p></p>"},{"location":"ShaderOfTheWeek/Something227/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>3d</p>"},{"location":"ShaderOfTheWeek/Something227/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/SpaceAtHome/","title":"SpaceAtHome","text":"<p>This Fuse is based on the Shadertoy 'Space At Home' by lz. \u00a9 lz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>A very complex one and with challenges regarding conversion. An automatic process starts; after clicking on the mouse parameter, the scenes can be moved through with the X position. The surface of the table, parquet and chairs is defined at the first image input, the second input is intended for the keyboard of the laptop, here the shader toy font is used and the third input is an audio input through which the appearance is controlled by the amplitude of the audio can be. The number of chairs can be changed using the N_Chairs parameter, but more than 8 chairs cause rendering problems.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/SpaceAtHome/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Representation of the items at home. Listening to the music I love. Main animation sequence is 150s then it's a sequence of 6 stills (It never gets fully repetitive, since the laptop does move).</p>"},{"location":"ShaderOfTheWeek/SpaceAtHome/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/SpaceShip/","title":"SpaceShip","text":"<p>This Fuse is based on the Shadertoy 'Space ship' by A_Toaster. \u00a9 A_Toaster (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A small space capsule with a large jet cone flies through space.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/SpaceShip/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/SpiraledLayers/","title":"SpiraledLayers","text":"<p>This Fuse is based on the Shadertoy 'Spiraled Layers' by Tater. \u00a9 Tater (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A fun shader that draws a very nice picture with just a few lines of code</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/StarGazingHippo/","title":"StarGazingHippo","text":"<p>This Fuse is based on the Shadertoy 'StarGazingHippo' by kuvkar. \u00a9 kuvkar (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A cute little shader</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/StarGazingHippo/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/Starfield/","title":"Starfield","text":"<p>This Fuse is based on the Shadertoy '\u5927\u9f99\u732b - Starfield' by totetmatt. \u00a9 totetmatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Starfield/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/StarryPlanes/","title":"StarryPlanes","text":"<p>This Fuse is based on the Shadertoy 'Starry planes' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Very simple but nice shader</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/StarryPlanes/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Starry planes   Revisited ye olde \"plane-marcher\".   A simple result that I think turned out pretty nice</p>"},{"location":"ShaderOfTheWeek/StarryPlanes/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/StarsAndGalaxy/","title":"StarsAndGalaxy","text":"<p>This Fuse is based on the Shadertoy 'Stars and galaxy' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/StarsAndGalaxy/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/StellarClouds/","title":"StellarClouds","text":"<p>This Fuse is based on the Shadertoy 'STELLAR CLOUDS' by alro. \u00a9 alro (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Have Fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/StellarClouds/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Where stars go to hang out.</p>"},{"location":"ShaderOfTheWeek/StellarClouds/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/StraightFlagstoneTiles/","title":"StraightFlagstoneTiles","text":"<p>This Fuse is based on the Shadertoy 'Straight Flagstone Tiles' by gelami. \u00a9 gelami (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Colorful tiles change size and move across the screen. Here I have made almost all modifications selectable and an additional texture can be displayed in random tiles.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/StraightFlagstoneTiles/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Flagstone/Asymmetric tiling with tile IDs, sizes, and UVs.</p>"},{"location":"ShaderOfTheWeek/StraightFlagstoneTiles/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TasteOfNoise7/","title":"TasteOfNoise7","text":"<p>This Fuse is based on the Shadertoy 'Taste Of Noise 7' by leon. \u00a9 leon (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A very nice abstract shader that gets by with only one buffer. I have also added the option of using a texture in this fuse. This can be adjusted using the \"Contrast\" parameter. You can also play with the parameters AStart, Falloff, Count and Repetition.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Terraform/","title":"Terraform","text":"<p>This Fuse is based on the Shadertoy 'Terraform' by Xor. \u00a9 Xor (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Terraform/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TiledGildedRainbowTunnel/","title":"TiledGildedRainbowTunnel","text":"<p>This Fuse is based on the Shadertoy 'Tiled Gilded Rainbow Tunnel' by OldEclipse. \u00a9 OldEclipse (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/TiledGildedRainbowTunnel/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>I found out about the power of bump mapping</p>"},{"location":"ShaderOfTheWeek/TiledGildedRainbowTunnel/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TorusHive/","title":"TorusHive","text":"<p>This Fuse is based on the Shadertoy 'Torus Hive' by Flopine. \u00a9 Flopine (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/TorusHive/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Still playing with torus knot :D</p>"},{"location":"ShaderOfTheWeek/TorusHive/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TrailingTheTwinklingTunnel/","title":"TrailingTheTwinklingTunnel","text":"<p>This Fuse is based on the Shadertoy 'Trailing the Twinkling Tunnel ..' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>A cool shader with a wide range of parameters for playing. I've taken various color combinations from the shader \"Perhaps a screensaver\" (https://www.shadertoy.com/view/Wfy3zh). This shader is identical except for the variations\u2014its origin is unclear.</p> <p>Enjoy playing!</p> <p></p>"},{"location":"ShaderOfTheWeek/TrailingTheTwinklingTunnel/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>CC0: Trailing the Twinkling Tunnelwisp A bit of Saturday coding (also Norway\u2019s Constitution Day). Some artifacts remain, but it\u2019s good enough for my standards.</p>"},{"location":"ShaderOfTheWeek/TrailingTheTwinklingTunnel/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TrippyTriangle/","title":"TrippyTriangle","text":"<p>This Fuse is based on the Shadertoy 'Trippy Triangle' by Tater. \u00a9 Tater (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>Very interesting effect. An anti-aliasing setting and the movement of the camera in the X and Y direction is possible with parameters.</p> <p>Have Fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/TrippyTriangle/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TruchetKaleidoscopeFTW/","title":"TruchetKaleidoscopeFTW","text":"<p>This Fuse is based on the Shadertoy 'Truchet + Kaleidoscope FTW' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A great combination of Truchet tiles and a kaleidoscope.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/TruchetKaleidoscopeFTW/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TunnelCable/","title":"TunnelCable","text":"<p>This Fuse is based on the Shadertoy '\u5927\u9f99\u732b - Tunnel Cable' by totetmatt. \u00a9 totetmatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Fast flight through a square tunnel with running lights.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/TunnelCable/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>tunnel runner</p>"},{"location":"ShaderOfTheWeek/TunnelCable/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TunnelOfLights/","title":"TunnelOfLights","text":"<p>This Fuse is based on the Shadertoy 'Tunnel of Lights' by nocrex. \u00a9 nocrex (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/TunnelOfLights/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Tried raymarching with simple domain repetition.</p>"},{"location":"ShaderOfTheWeek/TunnelOfLights/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/TwizzlyCircleMess/","title":"TwizzlyCircleMess","text":"<p>This Fuse is based on the Shadertoy 'Twizzly Circle Mess' by SnoopethDuckDuck. \u00a9 SnoopethDuckDuck (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/TwizzlyCircleMess/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/UndulatingColumns/","title":"UndulatingColumns","text":"<p>This Fuse is based on the Shadertoy 'Undulating Columns' by fizzer. \u00a9 fizzer (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A simple but beautiful shader. A cubemap can be connected to Image1-Input and thus a three-dimensional illumination can be achieved. A noise pattern can be applied to Image2-Input, but this has hardly any influence on the shader.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/UndulatingColumns/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/UndulatingUrchin/","title":"UndulatingUrchin","text":"<p>This Fuse is based on the Shadertoy 'Undulating Urchin' by ChunderFPV. \u00a9 ChunderFPV (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>]</p> <p></p>"},{"location":"ShaderOfTheWeek/UndulatingUrchin/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/UnstableUniverse/","title":"UnstableUniverse","text":"<p>This Fuse is based on the Shadertoy 'Unstable Universe' by julianlumia. \u00a9 julianlumia (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>A very nice game with reflection and colors and very compact code</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/UnstableUniverse/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>The shader compiles perfectly on one computer but when i checked on another macbook using the same browser (brave) I only see a black screen.. anybody have any idea as to why?</p>"},{"location":"ShaderOfTheWeek/UnstableUniverse/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/WednesdayMessingAround/","title":"WednesdayMessingAround","text":"<p>This Fuse is based on the Shadertoy 'Wednesday messing around' by mrange. \u00a9 mrange (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>Several intertwined bands of different colors meander through the image. There are many parameters to play with. An automatic process shows 4 different variants, which can also be set manually. The background color can be used transparently to design your own textures. Not all parameters apply to all variants.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/WednesdayMessingAround/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/WeirdTruchetNewKeyboard/","title":"WeirdTruchetNewKeyboard","text":"<p>This Fuse is based on the Shadertoy 'Weird Truchet | New Keyboard' by byt3_m3chanic. \u00a9 byt3_m3chanic (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p>Once again two shaders published in one week in this section :-) There was a problem with the fwidth function, which does not exist in DCTL and so a simulation is necessary. But here an interesting effect occurred. When the resolution was changed, the shader image was blurred from the outside to the inside. A rounding error was the cause of this. The effect can be made visible with the \"off\" parameter.</p> <p>Have fun playing</p> <p></p>"},{"location":"ShaderOfTheWeek/WeirdTruchetNewKeyboard/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Got this tiny Corne knock-off type keyboard from Amazon - 36 key https://bsky.app/profile/byt3m3chanic.bsky.social/post/3lbsqbatwjc2q</p> <p>So this is me trying to code a shader, and memorize the key combos for the special/math chars.</p>"},{"location":"ShaderOfTheWeek/WeirdTruchetNewKeyboard/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/WhackAMolePistons/","title":"WhackAMolePistons","text":"<p>This Fuse is based on the Shadertoy 'Whack-A-Mole Pistons' by blackle. \u00a9 blackle (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p>A slightly older, but not bad shader. Very nice reflective surface created by an interesting calculation. Also the hash calculation is exceptional by using \"floatBitsToInt\".</p> <p>The view can be changed with the help of the mouse parameters. The base color of the pistons can be customized. To use the \"Sharpness\" parameter, it is necessary to bind a texture to iChannel0. A texture is required on iChannel1 to use the MOTION_BLUR.</p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/WhackAMolePistons/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>experimenting with 2D slicing the sphere packing SDF to get an array of circles of different sizes.</p> <p>New: [url=https://youtu.be/I8fmkLK1OKg]The tutorial video[/url]</p>"},{"location":"ShaderOfTheWeek/WhackAMolePistons/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/YearOfTruchets022/","title":"YearOfTruchets022","text":"<p>This Fuse is based on the Shadertoy 'Year of Truchets #022' by byt3_m3chanic. \u00a9 byt3_m3chanic (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/YearOfTruchets022/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>All year long I'm going to just focus on truchet tiles and the likes!</p>"},{"location":"ShaderOfTheWeek/YearOfTruchets022/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/Yee1212/","title":"Yee1212","text":"<p>This Fuse is based on the Shadertoy 'yee1212' by dspindler. \u00a9 dspindler (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p></p> <p></p>"},{"location":"ShaderOfTheWeek/Yee1212/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"ShaderOfTheWeek/ZippyZaps/","title":"ZippyZaps","text":"<p>This Fuse is based on the Shadertoy 'Zippy Zaps' by SnoopethDuckDuck. \u00a9 SnoopethDuckDuck (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See ShaderOfTheWeek for more fuses in this category.</p> <p></p> <p> </p> <p>A shader I remade some time ago. Very compact yet impressive results. I added a lot of parameters.</p> <p>Enjoy playing!</p> <p></p>"},{"location":"ShaderOfTheWeek/ZippyZaps/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Golfing always welcome \u00e2\u0161\u00a1</p>"},{"location":"ShaderOfTheWeek/ZippyZaps/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Simple/","title":"Index","text":""},{"location":"Simple/#simple-shaders","title":"Simple Shaders","text":""},{"location":"Simple/#crazyness","title":"Crazyness","text":"<p>based on craziness written by spsherk_and ported to DaFusion by nmbr73</p>"},{"location":"Simple/#crossdistance","title":"CrossDistance","text":"<p>based on Cross - distance written by iqand ported to DaFusion by nmbr73</p>"},{"location":"Simple/#quadtree3","title":"Quadtree3","text":"<p>based on quadtree 3 written by FabriceNeyret2and ported to DaFusion by nmbr73</p>"},{"location":"Simple/#rosace3c","title":"Rosace3C","text":"<p>based on rosace 3c written by FabriceNeyret2and ported to DaFusion by nmbr73</p>"},{"location":"Simple/#shatteredlight","title":"ShatteredLight","text":"<p>based on Shattered light written by conceptblendand ported to DaFusion by nmbr73</p>"},{"location":"Simple/#stainedlights","title":"StainedLights","text":"<p>based on Stained Lights written by 104and ported to DaFusion by nmbr73</p>"},{"location":"Simple/#videofilters","title":"VideoFilters","text":"<p>based on Video filters written by XT95and ported to DaFusion by nmbr73</p>"},{"location":"Simple/Crazyness/","title":"Crazyness","text":"<p>This Fuse is based on the Shadertoy 'craziness' by spsherk_. \u00a9 spsherk_ (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p>This was a quick one - the Fuse deserves some parameters - I'll add them later.</p> <p></p>"},{"location":"Simple/CrossDistance/","title":"CrossDistance","text":"<p>This Fuse is based on the Shadertoy 'Cross - distance' by iq. Copyright \u00a9 2015 Inigo Quilez (MIT License). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p>This was my very first attempt to play with Fuses and the conversion of WebGL to DCTL.</p> <p></p>"},{"location":"Simple/Quadtree3/","title":"Quadtree3","text":"<p>This Fuse is based on the Shadertoy 'quadtree 3' by FabriceNeyret2. \u00a9 FabriceNeyret2 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p></p> <p>See also the tri-tree version Mt2XDc, binary-tree version MtlyRH and video versions MtBSDV and ltBSDV.</p>"},{"location":"Simple/Rosace3C/","title":"Rosace3C","text":"<p>This Fuse is based on the Shadertoy 'rosace 3c' by FabriceNeyret2. \u00a9 FabriceNeyret2 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Simple/ShatteredLight/","title":"ShatteredLight","text":"<p>This Fuse is based on the Shadertoy 'Shattered light' by conceptblend. \u00a9 conceptblend (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p></p> <p>Still some work left to be done: - Some parameters could be nice</p>"},{"location":"Simple/StainedLights/","title":"StainedLights","text":"<p>This Fuse is based on the Shadertoy 'Stained Lights' by 104. \u00a9 104 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Simple/VideoFilters/","title":"VideoFilters","text":"<p>This Fuse is based on the Shadertoy 'Video filters' by XT95. \u00a9 XT95 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Simple for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Skulls/","title":"Index","text":""},{"location":"Skulls/#skulls-shaders","title":"Skulls Shaders","text":""},{"location":"Skulls/#alaspooryorick","title":"AlasPoorYorick","text":"<p>based on Alas, poor Yorick! written by shauand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#dullskull","title":"DullSkull","text":"<p>based on DULL SKULL written by Kris_Katurand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#dullskullbrained","title":"DullSkullBrained","text":"<p>based on DULL SKULL - Brained written by Kris_Katurand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#dullskullbumped","title":"DullSkullBumped","text":"<p>based on DULL SKULL - Bumped written by Kris_Katurand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#dullskullprologue","title":"DullSkullPrologue","text":"<p>based on DULL SKULL - Prologue written by Kris_Katurand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#dullskullreflected","title":"DullSkullReflected","text":"<p>based on DULL SKULL - Reflected written by Kris_Katurand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#dullspeedskull","title":"DullSpeedSkull","text":"<p>based on DULL Speed SKULL written by Spectraledgeand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#forkdullskullfrostbyte591","title":"ForkDullSkullFrostbyte591","text":"<p>based on Fork DULL SKULL frostbyte_ 591 written by Frostbyte_and ported to DaFusion by JiPi</p>"},{"location":"Skulls/#lostastronaut","title":"LostAstronaut","text":"<p>based on Lost_Astronaut written by duvengarand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#skully","title":"Skully","text":"<p>based on skully written by monsterkodiand ported to DaFusion by JiPi</p>"},{"location":"Skulls/#thedarkmarkhp","title":"TheDarkMarkHp","text":"<p>based on The Dark Mark [HP] written by Yusef28and ported to DaFusion by JiPi</p>"},{"location":"Skulls/AlasPoorYorick/","title":"AlasPoorYorick","text":"<p>This Fuse is based on the Shadertoy 'Alas, poor Yorick!' by shau. \u00a9 shau (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>A complex shader with beautiful reflections, it requires two cubemaps at the inputs.</p> <p>Enjoy playing!</p> <p></p>"},{"location":"Skulls/AlasPoorYorick/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Loosely inspired by Billelis</p>"},{"location":"Skulls/AlasPoorYorick/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/DullSkull/","title":"DullSkull","text":"<p>This Fuse is based on the Shadertoy 'DULL SKULL' by Kris_Katur. \u00a9 Kris_Katur (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p></p> <p>This shader was the trigger for the creation of the new \"Skulls\" category. It was ShaderOfTheWeek, and while searching, I found many great skull shaders.</p> <p>Have fun playing!</p> <p></p>"},{"location":"Skulls/DullSkull/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>// All work and no play makes Jack a Dull Skull // DULL SKULL - Playlist https://www.shadertoy.com/playlist/c3sXWn</p>"},{"location":"Skulls/DullSkull/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/DullSkullBrained/","title":"DullSkullBrained","text":"<p>This Fuse is based on the Shadertoy 'DULL SKULL - Brained' by Kris_Katur. \u00a9 Kris_Katur (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>Another great skull shader by Kris Katur. To visualize the brain, a cube map is required, which is connected to the input of the fuse.</p> <p>Have fun playing!</p> <p></p>"},{"location":"Skulls/DullSkullBrained/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>In this shader, I revisit previous releases and added a brain to my skull. \"DULL SKULL\" [url]https://www.shadertoy.com/view/DlyyWR[/url] \"DULL SKULL Prologue\" [url]https://www.shadertoy.com/view/4XsfDs[/url]</p>"},{"location":"Skulls/DullSkullBrained/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/DullSkullBumped/","title":"DullSkullBumped","text":"<p>This Fuse is based on the Shadertoy 'DULL SKULL - Bumped' by Kris_Katur. \u00a9 Kris_Katur (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>Another great skull shader by Kris Katur. To make the shader visible, a cube map is required, which must be connected to the first input (iChannel0) of the Fuse. The second input is a noise texture that distorts parts of the object. A noise texture should be adjusted using a downstream blur node to prevent excessive surface distortion.</p> <p>Have fun playing!</p> <p></p>"},{"location":"Skulls/DullSkullBumped/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Another version of my \"DULL SKULL\" experimenting with smooth color mixing and bump mapping. [url]https://www.shadertoy.com/view/4XsfDs[/url] DULL SKULL [url]https://www.shadertoy.com/view/DlyyWR[/url] [url]https://www.shadertoy.com/playlist/c3sXWn[/url]</p>"},{"location":"Skulls/DullSkullBumped/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/DullSkullPrologue/","title":"DullSkullPrologue","text":"<p>This Fuse is based on the Shadertoy 'DULL SKULL - Prologue' by Kris_Katur. \u00a9 Kris_Katur (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p></p>"},{"location":"Skulls/DullSkullPrologue/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>///// Studies of human anatomy ///// Move the mouse to explore from different perspectives.</p>"},{"location":"Skulls/DullSkullPrologue/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/DullSkullReflected/","title":"DullSkullReflected","text":"<p>This Fuse is based on the Shadertoy 'DULL SKULL - Reflected' by Kris_Katur. \u00a9 Kris_Katur (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p>  Another great skull shader by Kris Katur. To make the shader visible, a cubemap for the skull is required, which must be connected to the first input (iChannel0) of the fuse, as well as a second cubemap (iChannel1) for the background, which must be closed. The \"NoiseTex\" and \"Level0\" parameters are currently unused.</p> <p>Enjoy playing!</p> <p></p>"},{"location":"Skulls/DullSkullReflected/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>In this shader, I revisit previous works, experimenting with domain repetition, reflection, and smooth color/texture blending. \"DULL SKULL\" Playlist [url]https://www.shadertoy.com/playlist/c3sXWn[/url]</p>"},{"location":"Skulls/DullSkullReflected/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/DullSpeedSkull/","title":"DullSpeedSkull","text":"<p>This Fuse is based on the Shadertoy 'DULL Speed SKULL' by Spectraledge. \u00a9 Spectraledge (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>You can completely isolate the skull by setting the ColorBKG parameter to zero.</p> <p>Have fun playing!</p> <p></p>"},{"location":"Skulls/DullSpeedSkull/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Refactored the skull to be less taxing on the system and easier to read for modification. I also removed the plane</p>"},{"location":"Skulls/DullSpeedSkull/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/ForkDullSkullFrostbyte591/","title":"ForkDullSkullFrostbyte591","text":"<p>This Fuse is based on the Shadertoy 'Fork DULL SKULL frostbyte_ 591' by Frostbyte_. \u00a9 Frostbyte_ (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>Unfortunately, this shader behaves a little differently than intended in OpenCL. For reasons I can't explain, the skull can't be mirrored properly.</p> <p>Enjoy playing!</p> <p></p>"},{"location":"Skulls/ForkDullSkullFrostbyte591/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Forked and Combined with another shader https://www.shadertoy.com/view/wdjXzy</p> <p>// All work and no play makes Jack a Dull Skull // DULL SKULL - Playlist https://www.shadertoy.com/playlist/c3sXWn</p>"},{"location":"Skulls/ForkDullSkullFrostbyte591/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe5 Windows / OpenCL</p>"},{"location":"Skulls/LostAstronaut/","title":"LostAstronaut","text":"<p>This Fuse is based on the Shadertoy 'Lost_Astronaut' by duvengar. \u00a9 duvengar (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p></p>"},{"location":"Skulls/LostAstronaut/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Derived and inspired by iq's modelling techniques and Shane's transparency works. https://www.shadertoy.com/view/Xds3zN https://www.shadertoy.com/view/lstGRB</p>"},{"location":"Skulls/LostAstronaut/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/Skully/","title":"Skully","text":"<p>This Fuse is based on the Shadertoy 'skully' by monsterkodi. \u00a9 monsterkodi (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>As you'd expect from monsterkodi, a really well-made shader. A somewhat unique programming style. The conversion was very time-consuming, but it was worth it.</p> <p>First, it's important that the shader is either started at time position zero or that the \"Reset\" checkbox parameter is set and cleared once. This initializes the operating parameters in BufferA. The buttons (LEFT, RIGHT, ....) can be used to change the view of the shader.</p> <p>The colors (skull, teeth, bone) are set slightly differently than usual.</p> <p>The color parameter ColSkull, for example, is set as follows: Red ....... Hue Yellow... Saturation Blue...... Lumination Alpha.... Shiny This then includes the GloEmSkull parameter: GloEmSkull.x... Glossy GloEmSkull.x... Emit</p> <p>The color parameters for the teeth and bones are set accordingly.</p> <p>Have fun playing</p> <p></p>"},{"location":"Skulls/Skully/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>I couldn't find neither teapot nor bunny :-)</p>"},{"location":"Skulls/Skully/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Skulls/TheDarkMarkHp/","title":"TheDarkMarkHp","text":"<p>This Fuse is based on the Shadertoy 'The Dark Mark [HP]' by Yusef28. \u00a9 Yusef28 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Skulls for more fuses in this category.</p> <p></p> <p> </p> <p>A noise texture is required for the smoke effect at the iChannel0 input.</p> <p>Have fun playing!</p> <p></p>"},{"location":"Skulls/TheDarkMarkHp/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Inspiration: [url]https://pottermore.fandom.com/wiki/The_Dark_Mark_(object)?file=Screenshot_-10_5_2013%252C_3_57_20_PM.png[/url] Original Cloud Shader: [url]https://www.shadertoy.com/view/MljXDw[/url]</p>"},{"location":"Skulls/TheDarkMarkHp/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Text/","title":"Index","text":""},{"location":"Text/#text-shaders","title":"Text Shaders","text":""},{"location":"Text/#shadertext","title":"Shadertext","text":"<p>based on Shadertext written by Andreand ported to DaFusion by nmbr73</p>"},{"location":"Text/Shadertext/","title":"Shadertext","text":"<p>This Fuse is based on the Shadertoy 'Shadertext' by Andre. \u00a9 Andre (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Text for more fuses in this category.</p> <p></p> <p>DOES NOT WORK (YET)</p>"},{"location":"Text/Shadertext/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>Proportional spacing version of my shadertext shader https://www.shadertoy.com/view/lddXzM</p>"},{"location":"Tunnel/","title":"Index","text":""},{"location":"Tunnel/#tunnel-shaders","title":"Tunnel Shaders","text":""},{"location":"Tunnel/#billboardtunnel","title":"BillboardTunnel","text":"<p>based on  Billboard Tunnel written by wyattand ported to DaFusion by JiPi</p>"},{"location":"Tunnel/#crystalcave","title":"CrystalCave","text":"<p>based on Crystal Cave \ud83d\udd2e written by diatribesand ported to DaFusion by JiPi</p>"},{"location":"Tunnel/#tnthtw","title":"TNTHTW","text":"<p>based on Try not to hit the walls written by hisojarviand ported to DaFusion by JiPi</p>"},{"location":"Tunnel/#velocibox","title":"Velocibox","text":"<p>based on Velocibox written by zackpudiland ported to DaFusion by nmbr73</p>"},{"location":"Tunnel/#windingmengertunnel","title":"WindingMengerTunnel","text":"<p>based on WindingMengerTunnel written by Shaneand ported to DaFusion by JiPi</p>"},{"location":"Tunnel/BillboardTunnel/","title":"BillboardTunnel","text":"<p>This Fuse is based on the Shadertoy ' Billboard Tunnel' by wyatt. \u00a9 wyatt (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Tunnel for more fuses in this category.</p> <p></p> <p></p> <p>The current Shader Of The Week is not particularly interesting in my opinion, so I have translated a newer one from my favorite shadertoy author. In the original there is a \"poster\" in the tunnel. I have added four more, the position and size of which can be adjusted. The neon border can be changed and the speed and curve radii can be changed.</p> <p>Have fun playing</p> <p></p>"},{"location":"Tunnel/BillboardTunnel/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Tunnel/CrystalCave/","title":"CrystalCave","text":"<p>This Fuse is based on the Shadertoy 'Crystal Cave \ud83d\udd2e' by diatribes. \u00a9 diatribes (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Tunnel for more fuses in this category.</p> <p></p> <p> </p> <p></p>"},{"location":"Tunnel/CrystalCave/#description-of-the-shader-in-shadertoy","title":"Description of the Shader in Shadertoy:","text":"<p>In Crystal Mountain</p>"},{"location":"Tunnel/CrystalCave/#compatibility","title":"Compatibility","text":"<p>\ud83d\udfe5 macOS / Metal \ud83d\udfe5 macOS / OpenCL \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Tunnel/TNTHTW/","title":"TNTHTW","text":"<p>This Fuse is based on the Shadertoy 'Try not to hit the walls' by hisojarvi. \u00a9 hisojarvi (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Tunnel for more fuses in this category.</p> <p></p> <p>A Classic.</p> <p></p> <p>The classic among shaders. The ray marching algorithm is implemented with a while loop. So little code for so much effect. One of my first conversions, but I hadn\u2019t built a fuse out of it yet. The parameters of the fuse allow the tube radius, the rendering depth, the fog brightness, the curves and the texture to be changed.</p> <p>Have fun playing</p>"},{"location":"Tunnel/Velocibox/","title":"Velocibox","text":"<p>This Fuse is based on the Shadertoy 'Velocibox' by zackpudil. \u00a9 zackpudil (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by nmbr73. See Tunnel for more fuses in this category.</p> <p></p> <p></p>"},{"location":"Tunnel/WindingMengerTunnel/","title":"WindingMengerTunnel","text":"<p>This Fuse is based on the Shadertoy 'WindingMengerTunnel' by Shane. \u00a9 Shane (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Tunnel for more fuses in this category.</p> <p></p> <p>I had already tried a Menger shader with no success. This time no error has crept in and no incompatibilities have occurred. The individual objects are controlled by a global variable (objID). In order for the shader to work under OpenCL, this variable must go through all functions. This has now been implemented in version 2 of the fuse. Extensive parameters have also been added. Different tunnel modes can now be set. In addition to the original version, the two sections now have three variants and the metal grid of the sections can be switched on and off. A texture for the bump map has also been added. This allows indentations to be created in the open spaces of the tunnel. In the original, the tunnel is \"bent\" in both X and Y directions. This can now be set using the pertubing parameter.</p> <p>Here I came across a Mat3 addition for the first time and the range of functions had to be expanded:</p> <pre><code>__DEVICE__ inline mat3 mat3_add_mat3 (mat3 A, mat3 B) {\n   mat3 C;\n\n   C.r0 = to_float3 (A.r0.x + B.r0.x, A.r0.y + B.r0.y, A.r0.z + B.r0.z);\n   C.r1 = to_float3 (A.r1.x + B.r1.x, A.r1.y + B.r1.y, A.r1.z + B.r1.z);\n   C.r2 = to_float3 (A.r2.x + B.r2.x, A.r2.y + B.r2.y, A.r2.z + B.r2.z);\n\n   return C;\n   }\n</code></pre> <p> </p> <p>Have fun playing</p>"},{"location":"Wedding/","title":"Index","text":""},{"location":"Wedding/#wedding-shaders","title":"Wedding Shaders","text":""},{"location":"Wedding/#happyvalentinesday","title":"HappyValentinesDay","text":"<p>based on HappyValentinesDay written by RobotPenguinand ported to DaFusion by JiPi</p>"},{"location":"Wedding/#heartu2015","title":"HeartU2015","text":"<p>based on heart u 2015 written by mattzand ported to DaFusion by JiPi</p>"},{"location":"Wedding/#heartdemo","title":"Heartdemo","text":"<p>based on Heart Demo written by 17dpn01and ported to DaFusion by JiPi</p>"},{"location":"Wedding/#nematomorpha","title":"Nematomorpha","text":"<p>based on Nematomorpha written by PianiGianiand ported to DaFusion by JiPi</p>"},{"location":"Wedding/#valentwine","title":"Valentwine","text":"<p>based on Valentwine written by Mipmapand ported to DaFusion by JiPi</p>"},{"location":"Wedding/HappyValentinesDay/","title":"HappyValentinesDay","text":"<p>This Fuse is based on the Shadertoy 'HappyValentinesDay' by RobotPenguin. \u00a9 RobotPenguin (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Wedding for more fuses in this category.</p> <p></p> <p>A beautiful scene for a wedding: the bridal couple is reflected in the water, in the background the moon, a heart rises from the depths, first black, but then red and sparkling. The position of the moon can only be changed to a limited extent, constructing the scene in a sphere around the heart would have required a great deal of effort. The heart can be changed in color and position, but when you change the zoom, you come across the structure of the sphere again.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Wedding/HappyValentinesDay/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Wedding/HeartU2015/","title":"HeartU2015","text":"<p>This Fuse is based on the Shadertoy 'heart u 2015' by mattz. \u00a9 mattz (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Wedding for more fuses in this category.</p> <p></p> <p>Nested partially open hearts that rotate around each other like clockwork. The viewing angle can be changed using the mouse parameters. The focus and a zoom can be adjusted with yscl and f. Reflections (_R), Diffusion ( Diffamb) and Specular ( Spec ) are customizable, as is the strength of the cubemap (Decube). This is connected to iChannel0 and causes the mirroring. With the help of the parameters tmy1, tmy2 and tmy3 the individual switches of the hearts can be selected for the setting with activated TexOn (inputs iChannel1 to IChannel3). The texture can then be moved to the correct position with the Tuv1, Tuv2 and Tuv3 respectively. The background color (Color) can be set and also become transparent. The Canvas setting under Edges is recommended for use with textures, otherwise the textures will be mirrored, expanded or continued at the edge.</p> <p>Have fun playing</p> <p></p> <p></p>"},{"location":"Wedding/HeartU2015/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Wedding/Heartdemo/","title":"Heartdemo","text":"<p>This Fuse is based on the Shadertoy 'Heart Demo' by 17dpn01. \u00a9 17dpn01 (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Wedding for more fuses in this category.</p> <p></p> <p>A pumping heart. With the button \"Tex\" a texture can be applied to the heart. This can be changed in size, position and pump stroke. All colors can be adjusted and the pumping frequency is also adjustable.</p> <p></p> <p></p>"},{"location":"Wedding/Nematomorpha/","title":"Nematomorpha","text":"<p>This Fuse is based on the Shadertoy 'Nematomorpha' by PianiGiani. \u00a9 PianiGiani (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Wedding for more fuses in this category.</p> <p></p> <p>A rope winds its way through the picture. Many parameters invite you to play.</p> <p>Have lots of fun with it</p> <p></p> <p></p>"},{"location":"Wedding/Nematomorpha/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe9 Windows / OpenCL: checked</p>"},{"location":"Wedding/Valentwine/","title":"Valentwine","text":"<p>This Fuse is based on the Shadertoy 'Valentwine' by Mipmap. \u00a9 Mipmap (CC BY-NC-SA 3.0). Conversion to DCTL and encapsulation into a fuse done by JiPi. See Wedding for more fuses in this category.</p> <p></p> <p>A heart is formed from a loose rope. When activating the \"mouse button pressed\", you can use the \"iMouse.xy\" parameters to bring movement into the shader, the area and the strength of the force applied to the rope can be varied (MouseSize, MouseForce), the rope color and background color can be changed and can also be made transparent. Here it is important (as with all recursive shaders) that the shader is started from frame = 0. The \"Reset\" checkbox can be used to start in the timeline. If this is activated, the start values of the shader are set, if deactivated, the rendering process then starts.</p> <p>Have fun playing</p> <p> </p>"},{"location":"Wedding/Valentwine/#compatibility","title":"Compatibility","text":"<p>\u2b1b macOS / Metal: NOT TESTED! \u2b1b macOS / OpenCL: NOT TESTED! \ud83d\udfe9 Windows / CUDA: checked \ud83d\udfe5 Windows / OpenCL</p>"}]}